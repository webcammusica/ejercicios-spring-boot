<!DOCTYPE html>
<html lang="es-ES"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="profile" href="http://gmpg.org/xfn/11">

<title>Introducción a Spring Boot: Aplicación Web con servicios REST y Spring Data JPA – danielme.com</title>
<meta name="robots" content="max-image-preview:large">
<meta name="google-site-verification" content="IEa5r3Boi8QanwkRkqje9Gi9-w7_blYRWTyIB1b31qk">

<!-- Async WordPress.com Remote Login -->
<script id="twitter-wjs" src="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/widgets.js"></script>
<link rel="dns-prefetch" href="https://s0.wp.com/">
<link rel="dns-prefetch" href="https://danielmedotcom.wordpress.com/">
<link rel="dns-prefetch" href="https://fonts.googleapis.com/">
<link rel="alternate" type="application/rss+xml" title="danielme.com » Feed" href="https://danielme.com/feed/">
<link rel="alternate" type="application/rss+xml" title="danielme.com » RSS de los comentarios" href="https://danielme.com/comments/feed/">
<link rel="alternate" type="application/rss+xml" title="danielme.com » Introducción a Spring Boot: Aplicación Web con servicios REST y Spring Data&nbsp;JPA RSS de los comentarios" href="https://danielme.com/2018/02/21/tutorial-spring-boot-web-spring-data-jpa/feed/">
	<script type="text/javascript">
		/* <![CDATA[ */
		function addLoadEvent(func) {
			var oldonload = window.onload;
			if (typeof window.onload != 'function') {
				window.onload = func;
			} else {
				window.onload = function () {
					oldonload();
					func();
				}
			}
		}
		/* ]]> */
	</script>
			<script type="text/javascript">
			window._wpemojiSettings = {"baseUrl":"https:\/\/s0.wp.com\/wp-content\/mu-plugins\/wpcom-smileys\/twemoji\/2\/72x72\/","ext":".png","svgUrl":"https:\/\/s0.wp.com\/wp-content\/mu-plugins\/wpcom-smileys\/twemoji\/2\/svg\/","svgExt":".svg","source":{"concatemoji":"https:\/\/s0.wp.com\/wp-includes\/js\/wp-emoji-release.min.js?m=1625065786h&ver=5.8"}};
			!function(e,a,t){var n,r,o,i=a.createElement("canvas"),p=i.getContext&&i.getContext("2d");function s(e,t){var a=String.fromCharCode;p.clearRect(0,0,i.width,i.height),p.fillText(a.apply(this,e),0,0);e=i.toDataURL();return p.clearRect(0,0,i.width,i.height),p.fillText(a.apply(this,t),0,0),e===i.toDataURL()}function c(e){var t=a.createElement("script");t.src=e,t.defer=t.type="text/javascript",a.getElementsByTagName("head")[0].appendChild(t)}for(o=Array("flag","emoji"),t.supports={everything:!0,everythingExceptFlag:!0},r=0;r<o.length;r++)t.supports[o[r]]=function(e){if(!p||!p.fillText)return!1;switch(p.textBaseline="top",p.font="600 32px Arial",e){case"flag":return s([127987,65039,8205,9895,65039],[127987,65039,8203,9895,65039])?!1:!s([55356,56826,55356,56819],[55356,56826,8203,55356,56819])&&!s([55356,57332,56128,56423,56128,56418,56128,56421,56128,56430,56128,56423,56128,56447],[55356,57332,8203,56128,56423,8203,56128,56418,8203,56128,56421,8203,56128,56430,8203,56128,56423,8203,56128,56447]);case"emoji":return!s([10084,65039,8205,55357,56613],[10084,65039,8203,55357,56613])}return!1}(o[r]),t.supports.everything=t.supports.everything&&t.supports[o[r]],"flag"!==o[r]&&(t.supports.everythingExceptFlag=t.supports.everythingExceptFlag&&t.supports[o[r]]);t.supports.everythingExceptFlag=t.supports.everythingExceptFlag&&!t.supports.flag,t.DOMReady=!1,t.readyCallback=function(){t.DOMReady=!0},t.supports.everything||(n=function(){t.readyCallback()},a.addEventListener?(a.addEventListener("DOMContentLoaded",n,!1),e.addEventListener("load",n,!1)):(e.attachEvent("onload",n),a.attachEvent("onreadystatechange",function(){"complete"===a.readyState&&t.readyCallback()})),(n=t.source||{}).concatemoji?c(n.concatemoji):n.wpemoji&&n.twemoji&&(c(n.twemoji),c(n.wpemoji)))}(window,document,window._wpemojiSettings);
		</script><script src="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/wp-emoji-release.js" type="text/javascript" defer="defer"></script>
		<style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style>
	<link rel="stylesheet" id="all-css-0-1" href="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/a_003.css" type="text/css" media="all">
<style id="wp-block-library-inline-css">
.has-text-align-justify {
	text-align:justify;
}
</style>
<style id="penscratch-2-style-inline-css">
.cat-links, .tags-links, .byline .author, .group-blog .byline + .sep, .single .byline + .sep { clip: rect(1px, 1px, 1px, 1px); height: 1px; position: absolute; overflow: hidden; width: 1px; }
</style>
<link crossorigin="anonymous" rel="stylesheet" id="penscratch-2-fonts-css" href="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/css.css" media="all">
<link rel="stylesheet" id="all-css-2-1" href="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/a_002.css" type="text/css" media="all">
<link rel="stylesheet" id="print-css-3-1" href="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/global-print.css" type="text/css" media="print">
<style id="jetpack-global-styles-frontend-style-inline-css">
:root { --font-headings: unset; --font-base: unset; --font-headings-default: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,"Helvetica Neue",sans-serif; --font-base-default: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,"Helvetica Neue",sans-serif;}
</style>
<link rel="stylesheet" id="all-css-6-1" href="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/a_004.css" type="text/css" media="all">
<script id="wpcom-actionbar-placeholder-js-extra">
var actionbardata = {"siteID":"32273083","siteName":"danielme.com","siteURL":"https:\/\/danielme.com","siteHost":"danielme.com","icon":"<img alt='' src='https:\/\/danielmedotcom.files.wordpress.com\/2019\/04\/favicon.png?w=32' class='avatar avatar-50' height='50' width='50' \/>","canManageOptions":"","canCustomizeSite":"","isFollowing":"","themeSlug":"pub\/penscratch-2","signupURL":"https:\/\/wordpress.com\/start\/","loginURL":"https:\/\/wordpress.com\/log-in?redirect_to=https%3A%2F%2Fr-login.wordpress.com%2Fremote-login.php%3Faction%3Dlink%26back%3Dhttps%253A%252F%252Fdanielme.com%252F2018%252F02%252F21%252Ftutorial-spring-boot-web-spring-data-jpa%252F","themeURL":"https:\/\/wordpress.com\/theme\/penscratch-2\/","xhrURL":"https:\/\/danielme.com\/wp-admin\/admin-ajax.php","nonce":"0c90ef556f","isSingular":"1","isFolded":"","isLoggedIn":"","isMobile":"","subscribeNonce":"<input type=\"hidden\" id=\"_wpnonce\" name=\"_wpnonce\" value=\"0ca58d79e2\" \/>","referer":"https:\/\/danielme.com\/2018\/02\/21\/tutorial-spring-boot-web-spring-data-jpa\/","canFollow":"1","feedID":"2572424","statusMessage":"","customizeLink":"https:\/\/danielmedotcom.wordpress.com\/wp-admin\/customize.php?url=https%3A%2F%2Fdanielmedotcom.wordpress.com%2F2018%2F02%2F21%2Ftutorial-spring-boot-web-spring-data-jpa%2F","postID":"5171","shortlink":"https:\/\/wp.me\/p2bpHB-1lp","canEditPost":"","editLink":"https:\/\/wordpress.com\/post\/danielme.com\/5171","statsLink":"https:\/\/wordpress.com\/stats\/post\/5171\/danielme.com","i18n":{"view":"Ver sitio web","follow":"Seguir","following":"Siguiendo","edit":"Editar","login":"Acceder","signup":"Reg\u00edstrate","customize":"Personalizar","report":"Denunciar este contenido","themeInfo":"Obtener el tema: Penscratch 2","shortlink":"Copiar enlace corto","copied":"Copiado","followedText":"Las entradas nuevas de este sitio aparecer\u00e1n ahora en tu <a href=\"https:\/\/wordpress.com\/read\">Lector<\/a>","foldBar":"Contraer esta barra","unfoldBar":"Expandir esta barra","editSubs":"Gestionar las suscripciones","viewReader":"Ver sitio web en el Lector","viewReadPost":"View post in Reader","subscribe":"Suscr\u00edbeme","enterEmail":"Introduce tu email","followers":"\u00danete a otros 104 seguidores","alreadyUser":"\u00bfYa tienes una cuenta de WordPress.com? <a href=\"https:\/\/wordpress.com\/log-in?redirect_to=https%3A%2F%2Fr-login.wordpress.com%2Fremote-login.php%3Faction%3Dlink%26back%3Dhttps%253A%252F%252Fdanielme.com%252F2018%252F02%252F21%252Ftutorial-spring-boot-web-spring-data-jpa%252F\">Accede ahora<\/a>.","stats":"Estad\u00edsticas"}};
</script>
<script crossorigin="anonymous" type="text/javascript" src="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/a_002"></script>
<script type="text/javascript">
	window.addEventListener( 'DOMContentLoaded', function() {
		rltInitialize( {"token":null,"iframeOrigins":["https:\/\/widgets.wp.com"]} );
	} );
</script>
<link rel="stylesheet" id="all-css-0-2" href="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/style.css" type="text/css" media="all">
<!--[if lt IE 8]>
<link rel='stylesheet' id='highlander-comments-ie7-css'  href='https://s0.wp.com/wp-content/mu-plugins/highlander-comments/style-ie7.css?m=1351637563h&#038;ver=20110606' media='all' />
<![endif]-->
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://danielmedotcom.wordpress.com/xmlrpc.php?rsd">
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="https://s0.wp.com/wp-includes/wlwmanifest.xml"> 
<meta name="generator" content="WordPress.com">
<link rel="canonical" href="https://danielme.com/2018/02/21/tutorial-spring-boot-web-spring-data-jpa/">
<link rel="shortlink" href="https://wp.me/p2bpHB-1lp">
<link rel="alternate" type="application/json+oembed" href="https://public-api.wordpress.com/oembed/?format=json&amp;url=https%3A%2F%2Fdanielme.com%2F2018%2F02%2F21%2Ftutorial-spring-boot-web-spring-data-jpa%2F&amp;for=wpcom-auto-discovery"><link rel="alternate" type="application/xml+oembed" href="https://public-api.wordpress.com/oembed/?format=xml&amp;url=https%3A%2F%2Fdanielme.com%2F2018%2F02%2F21%2Ftutorial-spring-boot-web-spring-data-jpa%2F&amp;for=wpcom-auto-discovery">
<!-- Jetpack Open Graph Tags -->
<meta property="og:type" content="article">
<meta property="og:title" content="Introducción a Spring Boot: Aplicación Web con servicios REST y Spring Data JPA">
<meta property="og:url" content="https://danielme.com/2018/02/21/tutorial-spring-boot-web-spring-data-jpa/">
<meta property="og:description" content="Última actualización: 28/10/2020 En el tutorial Persistencia en BD con Spring: Integrando JPA, c3p0, Hibernate y EHCache, vimos de forma práctica los pasos a seguir para configurar una aplicación M…">
<meta property="article:published_time" content="2018-02-21T17:14:42+00:00">
<meta property="article:modified_time" content="2021-06-20T17:16:37+00:00">
<meta property="og:site_name" content="danielme.com">
<meta property="og:image" content="https://danielmedotcom.files.wordpress.com/2018/02/dbeaver-docker-country.png">
<meta property="og:image:width" content="1013">
<meta property="og:image:height" content="233">
<meta property="og:locale" content="es_ES">
<meta name="twitter:creator" content="@danielme_com">
<meta name="twitter:site" content="@danielme_com">
<meta name="twitter:text:title" content="Introducción a Spring Boot: Aplicación Web con servicios REST y Spring Data&nbsp;JPA">
<meta name="twitter:image" content="https://danielmedotcom.files.wordpress.com/2018/02/dbeaver-docker-country.png?w=640">
<meta name="twitter:card" content="summary_large_image">
<meta property="article:publisher" content="https://www.facebook.com/WordPresscom">

<!-- End Jetpack Open Graph Tags -->
<link rel="openid.server" href="https://danielme.com/?openidserver=1">
<link rel="openid.delegate" href="https://danielme.com/">
<link rel="search" type="application/opensearchdescription+xml" href="https://danielme.com/osd.xml" title="danielme.com">
<link rel="search" type="application/opensearchdescription+xml" href="https://s1.wp.com/opensearch.xml" title="WordPress.com">
<link rel="pingback" href="https://danielme.com/xmlrpc.php">		<style type="text/css">
			.recentcomments a {
				display: inline !important;
				padding: 0 !important;
				margin: 0 !important;
			}

			table.recentcommentsavatartop img.avatar, table.recentcommentsavatarend img.avatar {
				border: 0px;
				margin: 0;
			}

			table.recentcommentsavatartop a, table.recentcommentsavatarend a {
				border: 0px !important;
				background-color: transparent !important;
			}

			td.recentcommentsavatarend, td.recentcommentsavatartop {
				padding: 0px 0px 1px 0px;
				margin: 0px;
			}

			td.recentcommentstextend {
				border: none !important;
				padding: 0px 0px 2px 10px;
			}

			.rtl td.recentcommentstextend {
				padding: 0px 10px 2px 0px;
			}

			td.recentcommentstexttop {
				border: none;
				padding: 0px 0px 0px 10px;
			}

			.rtl td.recentcommentstexttop {
				padding: 0px 10px 0px 0px;
			}
		</style>
		<meta name="application-name" content="danielme.com"><meta name="msapplication-window" content="width=device-width;height=device-height"><meta name="msapplication-tooltip" content="Programación Jakarta EE, Spring y Android"><meta name="msapplication-task" content="name=Suscribirse;action-uri=https://danielme.com/feed/;icon-uri=https://danielmedotcom.files.wordpress.com/2019/04/favicon.png?w=16"><meta name="msapplication-task" content="name=Registrar un blog gratuito;action-uri=http://wordpress.com/signup/;icon-uri=https://s0.wp.com/i/favicon.ico"><meta name="msapplication-task" content="name=Ayuda de WordPress.com;action-uri=http://support.wordpress.com/;icon-uri=https://s0.wp.com/i/favicon.ico"><meta name="msapplication-task" content="name=Foros de WordPress.com;action-uri=http://forums.wordpress.com/;icon-uri=https://s0.wp.com/i/favicon.ico"><meta name="description" content="Última actualización: 28/10/2020 En el tutorial Persistencia en BD con Spring: Integrando JPA, c3p0, Hibernate y EHCache, vimos de forma práctica los pasos a seguir para configurar una aplicación Maven que integre Spring con JPA, utilizando Hibernate como implementación. No es difícil, pero resulta tedioso tener que replicar esta configuración cada vez que empecemos un…">
<link rel="amphtml" href="https://danielme.com/2018/02/21/tutorial-spring-boot-web-spring-data-jpa/amp/"><link rel="icon" href="https://danielmedotcom.files.wordpress.com/2019/04/favicon.png?w=32" sizes="32x32">
<link rel="icon" href="https://danielmedotcom.files.wordpress.com/2019/04/favicon.png?w=32" sizes="192x192">
<link rel="apple-touch-icon" href="https://danielmedotcom.files.wordpress.com/2019/04/favicon.png?w=32">
<meta name="msapplication-TileImage" content="https://danielmedotcom.files.wordpress.com/2019/04/favicon.png?w=32">
		<link rel="stylesheet" id="custom-css-css" type="text/css" href="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/a_005.css">
		<!-- Your Google Analytics Plugin is missing the tracking ID -->
<link rel="stylesheet" type="text/css" href="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/shCore.css"><link rel="stylesheet" type="text/css" href="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/shThemeDefault.css"><link rel="stylesheet" type="text/css" id="gravatar-card-css" href="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/hovercard.css"><link rel="stylesheet" type="text/css" id="gravatar-card-services-css" href="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/services.css"><link href="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/actionbar.css" type="text/css" rel="stylesheet"><script charset="utf-8" src="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/momenttimeline.js"></script><script charset="utf-8" src="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/timeline.js"></script></head>

<body class="post-template-default single single-post postid-5171 single-format-standard wp-embed-responsive customizer-styles-applied categories-hidden tags-hidden author-hidden highlander-enabled highlander-light">
<div id="page" class="hfeed site">
	<a class="skip-link screen-reader-text" href="#content">Saltar al contenido</a>
	<header id="masthead" class="site-header" role="banner">
		<div class="site-branding">
							<p class="site-title"><a href="https://danielme.com/" rel="home">danielme.com</a></p>
							<p class="site-description">Programación Jakarta EE, Spring y Android</p>
					</div>

		<nav id="site-navigation" class="main-navigation" role="navigation">
			<button class="menu-toggle">
				<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><rect x="0" fill="none" width="16" height="16"></rect><g><path id="menu-icon" d="M0 14h16v-2H0v2zM0 2v2h16V2H0zm0 7h16V7H0v2z"></path></g></svg>
				Menú			</button>
			<div class="menu-menu-1-container"><ul id="menu-menu-1" class="menu nav-menu" aria-expanded="false"><li id="menu-item-8" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-8"><a href="http://danielme.com/">Inicio</a></li>
<li id="menu-item-5027" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-5027"><a href="https://play.google.com/store/apps/dev?id=8791248824055214155">Mis apps</a></li>
<li id="menu-item-9389" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-9389"><a href="https://danielme.com/curso-jakarta-ee-indice/">Curso Jakarta EE 9</a></li>
<li id="menu-item-5608" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-5608"><a href="https://danielme.com/android/">Android</a></li>
<li id="menu-item-5607" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-5607"><a href="https://danielme.com/spring/">Spring</a></li>
<li id="menu-item-644" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-644"><a href="https://danielme.com/indice/">Índice</a></li>
<li id="menu-item-2997" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2997"><a href="https://danielme.com/tips-struts2/">Struts 2</a></li>
<li id="menu-item-215" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-215"><a href="https://danielmedina.info/">Sobre mi</a></li>
</ul></div>		</nav><!-- #site-navigation -->
	</header><!-- #masthead -->

	<div id="content" class="site-content">
		
	<div id="primary" class="content-area">
		<main id="main" class="site-main" role="main">

		
			
<article id="post-5171" class="post-5171 post type-post status-publish format-standard hentry category-java-jee">
	<header class="entry-header">
		<h1 class="entry-title">Introducción a Spring Boot: Aplicación Web con servicios REST y Spring Data&nbsp;JPA</h1>		
		<div class="entry-meta">
			<span class="posted-on"><a href="https://danielme.com/2018/02/21/tutorial-spring-boot-web-spring-data-jpa/" rel="bookmark"><time class="entry-date published" datetime="2018-02-21T18:14:42+01:00">21/02/2018</time><time class="updated" datetime="2021-06-20T18:16:37+01:00">20/06/2021</time></a></span><span class="byline"><span class="author vcard"><span class="sep"> ~ </span><a class="url fn n" href="https://danielme.com/author/danielmedotcom/">danielme.com</a></span></span>					</div><!-- .entry-meta -->
	</header><!-- .entry-header -->

	<div class="entry-content">
		<div class="actualizacion">Última actualización: 28/10/2020</div>
<p></p>
<p align="LEFT"><span style="color:#000000;"><span style="font-family:Times New Roman;"><span style="font-size:small;"><a href="http://www.springsource.org/" target="_blank" rel="noopener noreferrer"><img data-attachment-id="16" data-permalink="https://danielme.com/?attachment_id=16" data-orig-file="https://danielmedotcom.files.wordpress.com/2012/02/castor1.gif" data-orig-size="115,34" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;}" data-image-title="castor" data-image-description="" data-image-caption="" data-medium-file="https://danielmedotcom.files.wordpress.com/2012/02/castor1.gif?w=115" data-large-file="https://danielmedotcom.files.wordpress.com/2012/02/castor1.gif?w=115" class="size-full wp-image-16 alignleft" title="logo spring" src="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/spring-boot-logo_002.webp" alt="logo spring" srcset="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/spring-boot-logo.webp 1.5x" src-orig="https://danielmedotcom.files.wordpress.com/2018/01/spring-boot-logo.png?w=656" scale="1.5" width="120" height="111"></a></span></span></span>En el tutorial <a href="https://danielme.com/2013/06/19/persistencia-bd-con-spring-integrando-jpa-c3p0-hibernate-y-ehcache/">Persistencia en BD con Spring: Integrando JPA, c3p0, Hibernate y EHCache</a>,
 vimos de forma práctica los pasos a seguir para configurar una 
aplicación Maven que integre Spring con JPA, utilizando Hibernate como 
implementación. No es difícil, pero resulta tedioso tener que replicar 
esta configuración cada vez que empecemos un proyecto nuevo y la 
configuración puede complicarse si por ejemplo vamos a desarrollar un 
proyecto web completo y necesitamos también utilizar otros módulos de 
Spring tales como MVC, Data, Security, etc.</p>
<p><span id="more-5171"></span></p>
<p align="JUSTIFY">Numerosos programadores y empresas recurren a la 
creación de plantillas genéricas, por ejemplo en la forma de arquetipos 
Maven, que eviten tener que invertir tiempo en la creación y 
configuración de los nuevos proyectos desde cero (aunque esto conlleva 
el problema adicional de tener que mantener actualizadas dichas 
plantillas). Otra opción es recurrir a plantillas de terceros 
disponibles en GitHub como por ejemplo las indexadas en <a href="http://yeoman.io/" target="_blank" rel="noopener noreferrer">yeoman</a>, o irnos directamente a frameworks basados en Spring como <a href="http://www.jhipster.tech/" target="_blank" rel="noopener noreferrer">JHipster</a> aunque aquí ya entramos en el terreno de los generadores de código.</p>
<p align="JUSTIFY">Teniendo en cuanta esta problemática, allá por 2014 se publicó la primera versión estable de <a href="https://spring.io/projects/spring-boot" target="_blank" rel="noopener noreferrer">Spring Boot</a>,
 para simplificar y acelerar el desarrollo de aplicaciones basadas en 
Spring gracias a una gestión automatizada de la infraestructura software
 que necesitamos en nuestra aplicación. En concreto: “Spring Boot 
proporciona una manera rápida de construir aplicaciones. Inspecciona el 
classpath y los beans que tengas configurado, hace asunciones razonables
 sobre lo que te falta y lo añade. Con Spring Boot puedes centrarte más 
en la lógica de negocio y menos en la infraestructura”.</p>
<p align="JUSTIFY">Hay que tener presente que Spring Boot no es un 
framework al uso ni un generador de código, se centra en la 
configuración e integración de las dependencias que solemos necesitar de
 forma genérica para que empecemos rápidamente a desarrollar nuestra 
aplicación. Incluso configura de forma embebida un servidor Tomcat o 
Jetty si así lo deseamos. Y lo mejor de todo es que no supone una 
limitación ya que podemos seguir realizando cualquier configuración de 
Spring de igual forma que si no tuviéramos Spring Boot.</p>
<p align="JUSTIFY">En este tutorial daremos los primeros pasos para 
empezar a utilizar Spring Boot en nuestros proyectos. En concreto,  
crearemos una aplicación web Maven (Spring Boot también es compatible 
con Gradle) con una  pantalla que muestre un listado de datos obtenidos 
desde una tabla de una base de datos MySQL, así como una pequeña API 
REST de ejemplo. Asumo que el lector tiene conocimientos, a nivel muy 
básico, de Maven, Spring Data JPA y Spring MVC porque voy a centrarme 
sobre todo en Spring Boot.</p>
<p align="JUSTIFY">En lo que respecta al testing de la aplicación 
(fundamental), he escrito otro tutorial específico que puede verse como 
la segunda parte del presente.</p>
<p><a href="https://danielme.com/2018/11/26/testing-en-spring-boot-con-junit-45-mockito-mockmvc-rest-assured-bases-de-datos-embebidas/">Testing en Spring Boot con JUnit 4\5. Mockito, MockMvc, REST Assured, bases de datos embebidas</a></p>
<p align="JUSTIFY">Se usará <b>Spring Boot 2.3.3</b> y Java 8 aunque se 
indican las diferencias más relevantes con respecto a versiones 
anteriores de las funcionalidades que veamos.</p>
<h3>Creando un proyecto con Spring Boot para Spring Data JPA</h3>
<p align="JUSTIFY">Vamos a crear y configurar un proyecto Maven con Spring Boot similar al de los tutoriales de <a href="https://danielme.com/2014/02/08/persistencia-en-bd-con-spring-data-jpa/" target="_blank" rel="noopener noreferrer">Spring Data JPA</a>
 pero con una capa web (JSP y REST). Como es habitual, empezamos 
configurando el pom.xml con las dependencias que necesitamos, y aquí 
viene la primera ventaja de adoptar Spring Boot: no definiremos como 
dependencias directamente los módulos de Spring que necesitemos sino una
 suerte de “metadependencias” (starters) de Spring Boot que incluyen 
todo lo necesario. Las versiones de las dependencias son debidamente 
seleccionadas y testeadas por el equipo de Spring Boot por lo que no 
tenemos que preocuparnos por posibles incompatibilidades entre 
librerías. Para ello añadimos lo siguiente al pom.xml:</p>
<ol>
<li>Utilizar Spring Boot como módulo padre de nuestro proyecto. Usaremos
 Spring Boot 1 para Spring 4 (el core de Spring es compatible con Java 6
 pero dependencias como Hibernate van a requerir Java 8) y Spring Boot 2
 para Spring 5 (Java 8).
<div><div id="highlighter_672336" class="syntaxhighlighter  xml"><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="xml plain">&lt;</code><code class="xml keyword">parent</code><code class="xml plain">&gt;</code></div><div class="line number2 index1 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;org.springframework.boot&lt;/</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;</code></div><div class="line number3 index2 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;spring-boot-starter-parent&lt;/</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;</code></div><div class="line number4 index3 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">version</code><code class="xml plain">&gt;2.3.3.RELEASE&lt;/</code><code class="xml keyword">version</code><code class="xml plain">&gt;</code></div><div class="line number5 index4 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">relativePath</code> <code class="xml plain">/&gt;</code></div><div class="line number6 index5 alt1"><code class="xml plain">&lt;/</code><code class="xml keyword">parent</code><code class="xml plain">&gt;</code></div></div></td></tr></tbody></table></div></div>
<p>Nota: si no queremos o podemos utilizar Spring Boot como proyecto padre, consultar la configuración <a href="https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#using-boot-maven-without-a-parent" target="_blank" rel="noopener noreferrer">alternativa</a>.</p></li>
<li>Añadir todos los metamódulos (starters) de Spring Boot que 
encapsulen las funcionalidades que necesitemos. Los starters disponibles
 se pueden consultar directamente en GitHub en este <a href="https://github.com/spring-projects/spring-boot/tree/master/spring-boot-project/spring-boot-starters" target="_blank" rel="noopener noreferrer">enlace</a>. En nuestro caso, para utilizar Spring Data JPA con Hibernate necesitaremos el siguiente:
<div><div id="highlighter_439809" class="syntaxhighlighter  xml"><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="xml plain">&lt;</code><code class="xml keyword">dependency</code><code class="xml plain">&gt;</code></div><div class="line number2 index1 alt1"><code class="xml spaces">&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;org.springframework.boot&lt;/</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;</code></div><div class="line number3 index2 alt2"><code class="xml spaces">&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;spring-boot-starter-data-jpa&lt;/</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;</code></div><div class="line number4 index3 alt1"><code class="xml plain">&lt;/</code><code class="xml keyword">dependency</code><code class="xml plain">&gt;</code></div></div></td></tr></tbody></table></div></div>
</li>
<li>Adicionalmente también necesitamos el driver JDBC que en nuestro caso es MySQL.
<div><div id="highlighter_817548" class="syntaxhighlighter  xml"><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="xml plain">&lt;</code><code class="xml keyword">dependency</code><code class="xml plain">&gt;</code></div><div class="line number2 index1 alt1"><code class="xml spaces">&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;mysql&lt;/</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;</code></div><div class="line number3 index2 alt2"><code class="xml spaces">&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;mysql-connector-java&lt;/</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;</code></div><div class="line number4 index3 alt1"><code class="xml plain">&lt;/</code><code class="xml keyword">dependency</code><code class="xml plain">&gt;</code></div></div></td></tr></tbody></table></div></div>
</li>
<li>Opcionalmente se puede utilizar el <a href="https://docs.spring.io/spring-boot/docs/current/maven-plugin/reference/html/" target="_blank" rel="noopener noreferrer">plugin de Maven</a> de Spring Boot que proporciona algunos “goals” interesantes para ejecutar y empaquetar nuestras aplicaciones.
<div><div id="highlighter_738188" class="syntaxhighlighter  xml"><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="xml plain">&lt;</code><code class="xml keyword">build</code><code class="xml plain">&gt;</code></div><div class="line number2 index1 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">plugins</code><code class="xml plain">&gt;</code></div><div class="line number3 index2 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">plugin</code><code class="xml plain">&gt;</code></div><div class="line number4 index3 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;org.springframework.boot&lt;/</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;</code></div><div class="line number5 index4 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;spring-boot-maven-plugin&lt;/</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;</code></div><div class="line number6 index5 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;/</code><code class="xml keyword">plugin</code><code class="xml plain">&gt;</code></div><div class="line number7 index6 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;/</code><code class="xml keyword">plugins</code><code class="xml plain">&gt;</code></div><div class="line number8 index7 alt1"><code class="xml plain">&lt;/</code><code class="xml keyword">build</code><code class="xml plain">&gt;</code></div></div></td></tr></tbody></table></div></div>
</li>
</ol>
<p><a href="https://click.linksynergy.com/fs-bin/click?id=OZ02PWh8Q04&amp;offerid=507388.1395&amp;subid=0&amp;type=4"><img alt="Cursos de programación" src="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/show.png" scale="0" border="0"></a></p>
<p align="JUSTIFY">Spring Boot utiliza para el registro de logs la librería <a href="https://logback.qos.ch/" target="_blank" rel="noopener noreferrer">Logback</a> a través de la abstracción <a href="https://www.slf4j.org/" target="_blank" rel="noopener noreferrer">SLF4J</a>,
 lo que permite cambiar de implementación sin tener que modificar el 
código tal y como veremos un poco más adelante. La configuración de 
Logback se realiza en el fichero <em>/src/main/resources/logback.xml</em>.</p>
<div><div id="highlighter_116589" class="syntaxhighlighter  xml"><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="xml plain">&lt;?</code><code class="xml keyword">xml</code> <code class="xml color1">version</code><code class="xml plain">=</code><code class="xml string">"1.0"</code> <code class="xml color1">encoding</code><code class="xml plain">=</code><code class="xml string">"UTF-8"</code><code class="xml plain">?&gt;</code></div><div class="line number2 index1 alt1"><code class="xml plain">&lt;</code><code class="xml keyword">configuration</code><code class="xml plain">&gt;</code></div><div class="line number3 index2 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">appender</code> <code class="xml color1">name</code><code class="xml plain">=</code><code class="xml string">"STDOUT"</code></div><div class="line number4 index3 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml color1">class</code><code class="xml plain">=</code><code class="xml string">"ch.qos.logback.core.ConsoleAppender"</code><code class="xml plain">&gt;</code></div><div class="line number5 index4 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">encoder</code><code class="xml plain">&gt;</code></div><div class="line number6 index5 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">pattern</code><code class="xml plain">&gt;%d{MM-dd-HH:mm:ss.SSS} [%thread] %-5level %logger - %msg%n</code></div><div class="line number7 index6 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;/</code><code class="xml keyword">pattern</code><code class="xml plain">&gt;</code></div><div class="line number8 index7 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;/</code><code class="xml keyword">encoder</code><code class="xml plain">&gt;</code></div><div class="line number9 index8 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;/</code><code class="xml keyword">appender</code><code class="xml plain">&gt;</code></div><div class="line number10 index9 alt1">&nbsp;</div><div class="line number11 index10 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">root</code> <code class="xml color1">level</code><code class="xml plain">=</code><code class="xml string">"DEBUG"</code><code class="xml plain">&gt;</code></div><div class="line number12 index11 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">appender-ref</code> <code class="xml color1">ref</code><code class="xml plain">=</code><code class="xml string">"STDOUT"</code> <code class="xml plain">/&gt;</code></div><div class="line number13 index12 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;/</code><code class="xml keyword">root</code><code class="xml plain">&gt;</code></div><div class="line number14 index13 alt1"><code class="xml plain">&lt;/</code><code class="xml keyword">configuration</code><code class="xml plain">&gt;</code></div></div></td></tr></tbody></table></div></div>
<p align="JUSTIFY">Definimos una instancia del logger para una clase del siguiente modo.</p>
<div><div id="highlighter_69053" class="syntaxhighlighter nogutter  java"><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java keyword">import</code> <code class="java plain">org.slf4j.Logger;</code></div><div class="line number2 index1 alt1"><code class="java keyword">import</code> <code class="java plain">org.slf4j.LoggerFactory;</code></div><div class="line number3 index2 alt2"><code class="java plain">...</code></div><div class="line number4 index3 alt1">&nbsp;</div><div class="line number5 index4 alt2"><code class="java keyword">private</code> <code class="java keyword">static</code> <code class="java keyword">final</code> <code class="java plain">Logger logger = LoggerFactory.getLogger(CountryController.</code><code class="java keyword">class</code><code class="java plain">);</code></div></div></td></tr></tbody></table></div></div>
<p align="JUSTIFY">Si se utiliza <a href="https://projectlombok.org/">Lombok</a>, tenemos la anotación <a href="https://projectlombok.org/api/lombok/extern/slf4j/Slf4j.html">@Slf4j</a>.</p>
<p align="JUSTIFY">En mis proyectos acostumbro a utilizar <a href="https://logging.apache.org/log4j/2.x/" target="_blank" rel="noopener noreferrer">log4j2</a>. Podemos cambiar de logback a log4j2 fácilmente con los siguientes pasos.</p>
<ol>
<li>Excluir el starter spring-boot-starter-logging de los starters que la tengan como dependencia.
<div><div id="highlighter_141548" class="syntaxhighlighter  xml"><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="xml plain">&lt;</code><code class="xml keyword">dependency</code><code class="xml plain">&gt;</code></div><div class="line number2 index1 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;org.springframework.boot&lt;/</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;</code></div><div class="line number3 index2 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;spring-boot-starter-data-jpa&lt;/</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;</code></div><div class="line number4 index3 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">exclusions</code><code class="xml plain">&gt;</code></div><div class="line number5 index4 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">exclusion</code><code class="xml plain">&gt;</code></div><div class="line number6 index5 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;org.springframework.boot&lt;/</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;</code></div><div class="line number7 index6 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;spring-boot-starter-logging&lt;/</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;</code></div><div class="line number8 index7 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;/</code><code class="xml keyword">exclusion</code><code class="xml plain">&gt;</code></div><div class="line number9 index8 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;/</code><code class="xml keyword">exclusions</code><code class="xml plain">&gt;</code></div><div class="line number10 index9 alt1"><code class="xml plain">&lt;/</code><code class="xml keyword">dependency</code><code class="xml plain">&gt;</code></div></div></td></tr></tbody></table></div></div>
</li>
<li>Añadir el starter para log4j2.
<div><div id="highlighter_32767" class="syntaxhighlighter  xml"><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="xml plain">&lt;</code><code class="xml keyword">dependency</code><code class="xml plain">&gt;</code></div><div class="line number2 index1 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;org.springframework.boot&lt;/</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;</code></div><div class="line number3 index2 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;spring-boot-starter-log4j2&lt;/</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;</code></div><div class="line number4 index3 alt1"><code class="xml plain">&lt;/</code><code class="xml keyword">dependency</code><code class="xml plain">&gt;</code></div></div></td></tr></tbody></table></div></div>
</li>
<li>Realizar la configuración en el fichero /src/main/resources/log4j2.xml.
<div><div id="highlighter_568999" class="syntaxhighlighter  xml"><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div><div class="line number31 index30 alt2">31</div><div class="line number32 index31 alt1">32</div><div class="line number33 index32 alt2">33</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="xml plain">&lt;?</code><code class="xml keyword">xml</code> <code class="xml color1">version</code><code class="xml plain">=</code><code class="xml string">"1.0"</code> <code class="xml color1">encoding</code><code class="xml plain">=</code><code class="xml string">"UTF-8"</code><code class="xml plain">?&gt;</code></div><div class="line number2 index1 alt1"><code class="xml plain">&lt;</code><code class="xml keyword">Configuration</code><code class="xml plain">&gt;</code></div><div class="line number3 index2 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">Appenders</code><code class="xml plain">&gt;</code></div><div class="line number4 index3 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">Console</code> <code class="xml color1">name</code><code class="xml plain">=</code><code class="xml string">"Console"</code> <code class="xml color1">target</code><code class="xml plain">=</code><code class="xml string">"SYSTEM_OUT"</code><code class="xml plain">&gt;</code></div><div class="line number5 index4 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">PatternLayout</code></div><div class="line number6 index5 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml color1">pattern</code><code class="xml plain">=</code><code class="xml string">"%d{MM-dd-yyyy hh:mm:ss,SSS a} %5p %c{1}:%L - %m%n"</code> <code class="xml plain">/&gt;</code></div><div class="line number7 index6 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;/</code><code class="xml keyword">Console</code><code class="xml plain">&gt;</code></div><div class="line number8 index7 alt1">&nbsp;</div><div class="line number9 index8 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">RollingFile</code> <code class="xml color1">name</code><code class="xml plain">=</code><code class="xml string">"RollingFile"</code></div><div class="line number10 index9 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml color1">fileName</code><code class="xml plain">=</code><code class="xml string">"./logs/spring-boot.log"</code></div><div class="line number11 index10 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml color1">filePattern</code><code class="xml plain">=</code><code class="xml string">"./logs/spring-boot-%d{-dd-MMMM-yyyy}-%i.log.gz"</code><code class="xml plain">&gt;</code></div><div class="line number12 index11 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">PatternLayout</code><code class="xml plain">&gt;</code></div><div class="line number13 index12 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">pattern</code><code class="xml plain">&gt;%d{MM-dd-yyyy hh:mm:ss,SSS a} %5p %c{1}:%L -</code></div><div class="line number14 index13 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">%m%n&lt;/</code><code class="xml keyword">pattern</code><code class="xml plain">&gt;</code></div><div class="line number15 index14 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;/</code><code class="xml keyword">PatternLayout</code><code class="xml plain">&gt;</code></div><div class="line number16 index15 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">Policies</code><code class="xml plain">&gt;</code></div><div class="line number17 index16 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">OnStartupTriggeringPolicy</code> <code class="xml plain">/&gt;</code></div><div class="line number18 index17 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">SizeBasedTriggeringPolicy</code></div><div class="line number19 index18 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml color1">size</code><code class="xml plain">=</code><code class="xml string">"5 MB"</code> <code class="xml plain">/&gt;</code></div><div class="line number20 index19 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">TimeBasedTriggeringPolicy</code> <code class="xml plain">/&gt;</code></div><div class="line number21 index20 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;/</code><code class="xml keyword">Policies</code><code class="xml plain">&gt;</code></div><div class="line number22 index21 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;/</code><code class="xml keyword">RollingFile</code><code class="xml plain">&gt;</code></div><div class="line number23 index22 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;/</code><code class="xml keyword">Appenders</code><code class="xml plain">&gt;</code></div><div class="line number24 index23 alt1">&nbsp;</div><div class="line number25 index24 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">Loggers</code><code class="xml plain">&gt;</code></div><div class="line number26 index25 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">Root</code> <code class="xml color1">level</code><code class="xml plain">=</code><code class="xml string">"debug"</code><code class="xml plain">&gt;</code></div><div class="line number27 index26 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">AppenderRef</code> <code class="xml color1">ref</code><code class="xml plain">=</code><code class="xml string">"Console"</code> <code class="xml plain">/&gt;</code></div><div class="line number28 index27 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml comments">&lt;!-- &lt;AppenderRef ref="RollingFile" /&gt; --&gt;</code></div><div class="line number29 index28 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;/</code><code class="xml keyword">Root</code><code class="xml plain">&gt;</code></div><div class="line number30 index29 alt1">&nbsp;</div><div class="line number31 index30 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;/</code><code class="xml keyword">Loggers</code><code class="xml plain">&gt;</code></div><div class="line number32 index31 alt1">&nbsp;</div><div class="line number33 index32 alt2"><code class="xml plain">&lt;/</code><code class="xml keyword">Configuration</code><code class="xml plain">&gt;</code></div></div></td></tr></tbody></table></div></div>
</li>
</ol>
<p align="JUSTIFY">Puesto que seguimos utilizando slf4j como fachada para el sistema de logs no es necesario cambiar el código de la aplicación.</p>
<p align="JUSTIFY">Llegados a este punto el pom del proyecto inicial (será modificado a medida que avancemos en el tutorial) queda así</p>
<div><div id="highlighter_515523" class="syntaxhighlighter  xml"><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div><div class="line number31 index30 alt2">31</div><div class="line number32 index31 alt1">32</div><div class="line number33 index32 alt2">33</div><div class="line number34 index33 alt1">34</div><div class="line number35 index34 alt2">35</div><div class="line number36 index35 alt1">36</div><div class="line number37 index36 alt2">37</div><div class="line number38 index37 alt1">38</div><div class="line number39 index38 alt2">39</div><div class="line number40 index39 alt1">40</div><div class="line number41 index40 alt2">41</div><div class="line number42 index41 alt1">42</div><div class="line number43 index42 alt2">43</div><div class="line number44 index43 alt1">44</div><div class="line number45 index44 alt2">45</div><div class="line number46 index45 alt1">46</div><div class="line number47 index46 alt2">47</div><div class="line number48 index47 alt1">48</div><div class="line number49 index48 alt2">49</div><div class="line number50 index49 alt1">50</div><div class="line number51 index50 alt2">51</div><div class="line number52 index51 alt1">52</div><div class="line number53 index52 alt2">53</div><div class="line number54 index53 alt1">54</div><div class="line number55 index54 alt2">55</div><div class="line number56 index55 alt1">56</div><div class="line number57 index56 alt2">57</div><div class="line number58 index57 alt1">58</div><div class="line number59 index58 alt2">59</div><div class="line number60 index59 alt1">60</div><div class="line number61 index60 alt2">61</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="xml plain">&lt;?</code><code class="xml keyword">xml</code> <code class="xml color1">version</code><code class="xml plain">=</code><code class="xml string">"1.0"</code> <code class="xml color1">encoding</code><code class="xml plain">=</code><code class="xml string">"UTF-8"</code><code class="xml plain">?&gt;</code></div><div class="line number2 index1 alt1"><code class="xml plain">&lt;</code><code class="xml keyword">project</code> <code class="xml color1">xmlns</code><code class="xml plain">=</code><code class="xml string">"<a href="http://maven.apache.org/POM/4.0.0">http://maven.apache.org/POM/4.0.0</a>"</code></div><div class="line number3 index2 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml color1">xmlns:xsi</code><code class="xml plain">=</code><code class="xml string">"<a href="http://www.w3.org/2001/XMLSchema-instance">http://www.w3.org/2001/XMLSchema-instance</a>"</code></div><div class="line number4 index3 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml color1">xsi:schemaLocation</code><code class="xml plain">=</code><code class="xml string">"<a href="http://maven.apache.org/POM/4.0.0">http://maven.apache.org/POM/4.0.0</a> <a href="http://maven.apache.org/xsd/maven-4.0.0.xsd">http://maven.apache.org/xsd/maven-4.0.0.xsd</a>"</code><code class="xml plain">&gt;</code></div><div class="line number5 index4 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">modelVersion</code><code class="xml plain">&gt;4.0.0&lt;/</code><code class="xml keyword">modelVersion</code><code class="xml plain">&gt;</code></div><div class="line number6 index5 alt1">&nbsp;</div><div class="line number7 index6 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;com.danielme.demo&lt;/</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;</code></div><div class="line number8 index7 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;spring-boot&lt;/</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;</code></div><div class="line number9 index8 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">version</code><code class="xml plain">&gt;1.0&lt;/</code><code class="xml keyword">version</code><code class="xml plain">&gt;</code></div><div class="line number10 index9 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">packaging</code><code class="xml plain">&gt;jar&lt;/</code><code class="xml keyword">packaging</code><code class="xml plain">&gt;</code></div><div class="line number11 index10 alt2">&nbsp;</div><div class="line number12 index11 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">name</code><code class="xml plain">&gt;spring-boot-demo&lt;/</code><code class="xml keyword">name</code><code class="xml plain">&gt;</code></div><div class="line number13 index12 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">description</code><code class="xml plain">&gt;Demo project for Spring Boot&lt;/</code><code class="xml keyword">description</code><code class="xml plain">&gt;</code></div><div class="line number14 index13 alt1">&nbsp;</div><div class="line number15 index14 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">parent</code><code class="xml plain">&gt;</code></div><div class="line number16 index15 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;org.springframework.boot&lt;/</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;</code></div><div class="line number17 index16 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;spring-boot-starter-parent&lt;/</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;</code></div><div class="line number18 index17 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">version</code><code class="xml plain">&gt;2.1.3.RELEASE&lt;/</code><code class="xml keyword">version</code><code class="xml plain">&gt;</code></div><div class="line number19 index18 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">relativePath</code> <code class="xml plain">/&gt;</code></div><div class="line number20 index19 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;/</code><code class="xml keyword">parent</code><code class="xml plain">&gt;</code></div><div class="line number21 index20 alt2">&nbsp;</div><div class="line number22 index21 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">properties</code><code class="xml plain">&gt;</code></div><div class="line number23 index22 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">project.build.sourceEncoding</code><code class="xml plain">&gt;UTF-8&lt;/</code><code class="xml keyword">project.build.sourceEncoding</code><code class="xml plain">&gt;</code></div><div class="line number24 index23 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">java.version</code><code class="xml plain">&gt;1.8&lt;/</code><code class="xml keyword">java.version</code><code class="xml plain">&gt;</code></div><div class="line number25 index24 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;/</code><code class="xml keyword">properties</code><code class="xml plain">&gt;</code></div><div class="line number26 index25 alt1">&nbsp;</div><div class="line number27 index26 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">dependencies</code><code class="xml plain">&gt;</code></div><div class="line number28 index27 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number29 index28 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">dependency</code><code class="xml plain">&gt;</code></div><div class="line number30 index29 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;org.springframework.boot&lt;/</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;</code></div><div class="line number31 index30 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;spring-boot-starter-data-jpa&lt;/</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;</code></div><div class="line number32 index31 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">exclusions</code><code class="xml plain">&gt;</code></div><div class="line number33 index32 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">exclusion</code><code class="xml plain">&gt;</code></div><div class="line number34 index33 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;org.springframework.boot&lt;/</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;</code></div><div class="line number35 index34 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;spring-boot-starter-logging&lt;/</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;</code></div><div class="line number36 index35 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;/</code><code class="xml keyword">exclusion</code><code class="xml plain">&gt;</code></div><div class="line number37 index36 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;/</code><code class="xml keyword">exclusions</code><code class="xml plain">&gt;</code></div><div class="line number38 index37 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;/</code><code class="xml keyword">dependency</code><code class="xml plain">&gt;</code></div><div class="line number39 index38 alt2">&nbsp;</div><div class="line number40 index39 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">dependency</code><code class="xml plain">&gt;</code></div><div class="line number41 index40 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;org.springframework.boot&lt;/</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;</code></div><div class="line number42 index41 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;spring-boot-starter-log4j2&lt;/</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;</code></div><div class="line number43 index42 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;/</code><code class="xml keyword">dependency</code><code class="xml plain">&gt;</code></div><div class="line number44 index43 alt1">&nbsp;</div><div class="line number45 index44 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">dependency</code><code class="xml plain">&gt;</code></div><div class="line number46 index45 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;mysql&lt;/</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;</code></div><div class="line number47 index46 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;mysql-connector-java&lt;/</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;</code></div><div class="line number48 index47 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;/</code><code class="xml keyword">dependency</code><code class="xml plain">&gt;</code></div><div class="line number49 index48 alt2">&nbsp;</div><div class="line number50 index49 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;/</code><code class="xml keyword">dependencies</code><code class="xml plain">&gt;</code></div><div class="line number51 index50 alt2">&nbsp;</div><div class="line number52 index51 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">build</code><code class="xml plain">&gt;</code></div><div class="line number53 index52 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">plugins</code><code class="xml plain">&gt;</code></div><div class="line number54 index53 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">plugin</code><code class="xml plain">&gt;</code></div><div class="line number55 index54 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;org.springframework.boot&lt;/</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;</code></div><div class="line number56 index55 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;spring-boot-maven-plugin&lt;/</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;</code></div><div class="line number57 index56 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;/</code><code class="xml keyword">plugin</code><code class="xml plain">&gt;</code></div><div class="line number58 index57 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;/</code><code class="xml keyword">plugins</code><code class="xml plain">&gt;</code></div><div class="line number59 index58 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;/</code><code class="xml keyword">build</code><code class="xml plain">&gt;</code></div><div class="line number60 index59 alt1">&nbsp;</div><div class="line number61 index60 alt2"><code class="xml plain">&lt;/</code><code class="xml keyword">project</code><code class="xml plain">&gt;</code></div></div></td></tr></tbody></table></div></div>
<p align="JUSTIFY">Con el comando <em>mvn dependency:list</em> podemos comprobar todas las librerías que tenemos en nuestro proyecto.</p>
<p align="JUSTIFY">Ahora tenemos que definir los parámetros de 
configuración de la aplicación, esto es, las propiedades admitidas por 
las distintas librerías (al final de este tutorial explico cómo añadir 
propiedades personalizadas). Spring Boot los lee por defecto del fichero
 <em>/src/main/resources/application.properties</em> o <em>/src/main/resources/application.yaml</em> y en este <a href="https://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html" target="_blank" rel="noopener noreferrer">listado</a>
 encontramos los más habituales aunque no se incluyen los de todas las 
librerías con las que Spring Boot se integra de forma automática.</p>
<p align="JUSTIFY">Para nuestra aplicación de ejemplo voy a utilizar una
 base de datos llamada “country” en un servidor MySQL 5.7, así que 
necesitamos definir la url de conexión y las credenciales de un usuario 
con permisos de acceso a la misma. Adicionalmente establecemos también 
el modo DDL de Hibernate, que por defecto es <em>none</em>, a <em>update</em>
 para que se sincronicen nuestras entidades JPA con las tablas de la 
base de datos (¡No usar esto en producción si no tenemos claro lo que 
estamos haciendo!).</p>
<pre>spring.datasource.url=jdbc:mysql://localhost:3306/country?serverTimezone=UTC
spring.datasource.username=demo
spring.datasource.password=demo
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.MySQL55Dialect
</pre>
<p align="JUSTIFY">Vamos a añadir una entidad de JPA y su correspondiente repositorio de Spring Data.</p>
<p align="JUSTIFY">La entidad será auditable siguiendo el mecanismo visto en el tutorial <a href="https://danielme.com/2014/11/02/persistencia-en-bd-con-spring-data-jpa-iii-auditoria/">Persistencia en BD con Spring Data JPA (III): Auditoría</a>.</p>
<div><div id="highlighter_583567" class="syntaxhighlighter  java"><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div><div class="line number31 index30 alt2">31</div><div class="line number32 index31 alt1">32</div><div class="line number33 index32 alt2">33</div><div class="line number34 index33 alt1">34</div><div class="line number35 index34 alt2">35</div><div class="line number36 index35 alt1">36</div><div class="line number37 index36 alt2">37</div><div class="line number38 index37 alt1">38</div><div class="line number39 index38 alt2">39</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java keyword">package</code> <code class="java plain">com.danielme.springboot.entities;</code></div><div class="line number2 index1 alt1">&nbsp;</div><div class="line number3 index2 alt2"><code class="java keyword">import</code> <code class="java plain">java.util.Calendar;</code></div><div class="line number4 index3 alt1">&nbsp;</div><div class="line number5 index4 alt2"><code class="java keyword">import</code> <code class="java plain">javax.persistence.Column;</code></div><div class="line number6 index5 alt1"><code class="java keyword">import</code> <code class="java plain">javax.persistence.EntityListeners;</code></div><div class="line number7 index6 alt2"><code class="java keyword">import</code> <code class="java plain">javax.persistence.MappedSuperclass;</code></div><div class="line number8 index7 alt1"><code class="java keyword">import</code> <code class="java plain">javax.persistence.Temporal;</code></div><div class="line number9 index8 alt2"><code class="java keyword">import</code> <code class="java plain">javax.persistence.TemporalType;</code></div><div class="line number10 index9 alt1">&nbsp;</div><div class="line number11 index10 alt2"><code class="java keyword">import</code> <code class="java plain">org.springframework.data.annotation.CreatedBy;</code></div><div class="line number12 index11 alt1"><code class="java keyword">import</code> <code class="java plain">org.springframework.data.annotation.CreatedDate;</code></div><div class="line number13 index12 alt2"><code class="java keyword">import</code> <code class="java plain">org.springframework.data.annotation.LastModifiedBy;</code></div><div class="line number14 index13 alt1"><code class="java keyword">import</code> <code class="java plain">org.springframework.data.annotation.LastModifiedDate;</code></div><div class="line number15 index14 alt2"><code class="java keyword">import</code> <code class="java plain">org.springframework.data.jpa.domain.support.AuditingEntityListener;</code></div><div class="line number16 index15 alt1">&nbsp;</div><div class="line number17 index16 alt2"><code class="java color1">@EntityListeners</code><code class="java plain">({ AuditingEntityListener.</code><code class="java keyword">class</code> <code class="java plain">})</code></div><div class="line number18 index17 alt1"><code class="java color1">@MappedSuperclass</code></div><div class="line number19 index18 alt2"><code class="java keyword">public</code> <code class="java keyword">class</code> <code class="java plain">AuditableEntity {</code></div><div class="line number20 index19 alt1">&nbsp;</div><div class="line number21 index20 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@CreatedDate</code></div><div class="line number22 index21 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@Temporal</code><code class="java plain">(TemporalType.TIMESTAMP)</code></div><div class="line number23 index22 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@Column</code><code class="java plain">(nullable = </code><code class="java keyword">false</code><code class="java plain">)</code></div><div class="line number24 index23 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">private</code> <code class="java plain">Calendar createdDate;</code></div><div class="line number25 index24 alt2">&nbsp;</div><div class="line number26 index25 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@LastModifiedDate</code></div><div class="line number27 index26 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@Temporal</code><code class="java plain">(TemporalType.TIMESTAMP)</code></div><div class="line number28 index27 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@Column</code><code class="java plain">(nullable = </code><code class="java keyword">false</code><code class="java plain">)</code></div><div class="line number29 index28 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">private</code> <code class="java plain">Calendar lastModifiedDate;</code></div><div class="line number30 index29 alt1">&nbsp;</div><div class="line number31 index30 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@CreatedBy</code></div><div class="line number32 index31 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@Column</code><code class="java plain">(nullable = </code><code class="java keyword">false</code><code class="java plain">)</code></div><div class="line number33 index32 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">private</code> <code class="java plain">String createBy;</code></div><div class="line number34 index33 alt1">&nbsp;</div><div class="line number35 index34 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@LastModifiedBy</code></div><div class="line number36 index35 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">private</code> <code class="java plain">String lastModifiedBy;</code></div><div class="line number37 index36 alt2">&nbsp;</div><div class="line number38 index37 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">getters y setters...</code></div><div class="line number39 index38 alt2"><code class="java plain">}</code></div></div></td></tr></tbody></table></div></div>
<p align="JUSTIFY">También vamos a necesitar la clase que establece el auditor de cada operación.</p>
<div><div id="highlighter_34114" class="syntaxhighlighter  java"><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java keyword">package</code> <code class="java plain">com.danielme.springboot.repositories;</code></div><div class="line number2 index1 alt1">&nbsp;</div><div class="line number3 index2 alt2"><code class="java keyword">import</code> <code class="java plain">java.util.Optional;</code></div><div class="line number4 index3 alt1">&nbsp;</div><div class="line number5 index4 alt2"><code class="java keyword">import</code> <code class="java plain">org.springframework.data.domain.AuditorAware;</code></div><div class="line number6 index5 alt1"><code class="java keyword">import</code> <code class="java plain">org.springframework.stereotype.Component;</code></div><div class="line number7 index6 alt2">&nbsp;</div><div class="line number8 index7 alt1"><code class="java color1">@Component</code></div><div class="line number9 index8 alt2"><code class="java keyword">public</code> <code class="java keyword">class</code> <code class="java plain">CustomAuditorAware </code><code class="java keyword">implements</code> <code class="java plain">AuditorAware&lt;String&gt; {</code></div><div class="line number10 index9 alt1">&nbsp;</div><div class="line number11 index10 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@Override</code></div><div class="line number12 index11 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java plain">Optional&lt;String&gt; getCurrentAuditor() {</code></div><div class="line number13 index12 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">return</code> <code class="java plain">Optional.of(</code><code class="java string">"test"</code><code class="java plain">);</code></div><div class="line number14 index13 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number15 index14 alt2">&nbsp;</div><div class="line number16 index15 alt1"><code class="java plain">}</code></div></div></td></tr></tbody></table></div></div>
<p align="JUSTIFY">En la entidad tenemos una <a href="https://danielme.com/2013/01/14/jpa_hibernate_p/">clave primaria</a>
 de tipo identidad y dos atributos que no pueden ser nulos, uno de ellos
 además de valor único para todas las entidades. Además se ha usado <a href="https://danielme.com/2018/10/10/validaciones-con-hibernate-validator/">Bean Validation</a> para imponer ciertas restricciones, por lo que previamente añadimos su starter al pom.</p>
<div><div id="highlighter_504808" class="syntaxhighlighter  xml"><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="xml plain">&lt;</code><code class="xml keyword">dependency</code><code class="xml plain">&gt;</code></div><div class="line number2 index1 alt1"><code class="xml spaces">&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;org.springframework.boot&lt;/</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;</code></div><div class="line number3 index2 alt2"><code class="xml spaces">&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;spring-boot-starter-validation&lt;/</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;</code></div><div class="line number4 index3 alt1"><code class="xml plain">&lt;/</code><code class="xml keyword">dependency</code><code class="xml plain">&gt;</code></div></div></td></tr></tbody></table></div></div>
<div><div id="highlighter_228739" class="syntaxhighlighter  java"><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div><div class="line number31 index30 alt2">31</div><div class="line number32 index31 alt1">32</div><div class="line number33 index32 alt2">33</div><div class="line number34 index33 alt1">34</div><div class="line number35 index34 alt2">35</div><div class="line number36 index35 alt1">36</div><div class="line number37 index36 alt2">37</div><div class="line number38 index37 alt1">38</div><div class="line number39 index38 alt2">39</div><div class="line number40 index39 alt1">40</div><div class="line number41 index40 alt2">41</div><div class="line number42 index41 alt1">42</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java keyword">package</code> <code class="java plain">com.danielme.springboot.entities;</code></div><div class="line number2 index1 alt1">&nbsp;</div><div class="line number3 index2 alt2"><code class="java keyword">import</code> <code class="java plain">javax.persistence.Column;</code></div><div class="line number4 index3 alt1"><code class="java keyword">import</code> <code class="java plain">javax.persistence.Entity;</code></div><div class="line number5 index4 alt2"><code class="java keyword">import</code> <code class="java plain">javax.persistence.GeneratedValue;</code></div><div class="line number6 index5 alt1"><code class="java keyword">import</code> <code class="java plain">javax.persistence.GenerationType;</code></div><div class="line number7 index6 alt2"><code class="java keyword">import</code> <code class="java plain">javax.persistence.Id;</code></div><div class="line number8 index7 alt1"><code class="java keyword">import</code> <code class="java plain">javax.persistence.Table;</code></div><div class="line number9 index8 alt2"><code class="java keyword">import</code> <code class="java plain">javax.validation.constraints.Max;</code></div><div class="line number10 index9 alt1"><code class="java keyword">import</code> <code class="java plain">javax.validation.constraints.Min;</code></div><div class="line number11 index10 alt2"><code class="java keyword">import</code> <code class="java plain">javax.validation.constraints.NotNull;</code></div><div class="line number12 index11 alt1">&nbsp;</div><div class="line number13 index12 alt2"><code class="java color1">@Entity</code></div><div class="line number14 index13 alt1"><code class="java color1">@Table</code><code class="java plain">(name = </code><code class="java string">"countries"</code><code class="java plain">)</code></div><div class="line number15 index14 alt2"><code class="java keyword">public</code> <code class="java keyword">class</code> <code class="java plain">Country </code><code class="java keyword">extends</code> <code class="java plain">AuditableEntity {</code></div><div class="line number16 index15 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@Id</code></div><div class="line number17 index16 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@GeneratedValue</code><code class="java plain">(strategy = GenerationType.IDENTITY)</code></div><div class="line number18 index17 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">private</code> <code class="java plain">Long id;</code></div><div class="line number19 index18 alt2">&nbsp;</div><div class="line number20 index19 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@Column</code><code class="java plain">(nullable = </code><code class="java keyword">false</code><code class="java plain">, unique = </code><code class="java keyword">true</code><code class="java plain">)</code></div><div class="line number21 index20 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@NotNull</code></div><div class="line number22 index21 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">private</code> <code class="java plain">String name;</code></div><div class="line number23 index22 alt2">&nbsp;</div><div class="line number24 index23 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@Column</code><code class="java plain">(nullable = </code><code class="java keyword">false</code><code class="java plain">)</code></div><div class="line number25 index24 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@NotNull</code></div><div class="line number26 index25 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@Min</code><code class="java plain">(</code><code class="java value">1</code><code class="java plain">)</code></div><div class="line number27 index26 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@Max</code><code class="java plain">(</code><code class="java value">2000000000</code><code class="java plain">)</code></div><div class="line number28 index27 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">private</code> <code class="java plain">Integer population;</code></div><div class="line number29 index28 alt2">&nbsp;</div><div class="line number30 index29 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java plain">Country() {</code></div><div class="line number31 index30 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">super</code><code class="java plain">();</code></div><div class="line number32 index31 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number33 index32 alt2">&nbsp;</div><div class="line number34 index33 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java plain">Country(String name, Integer population) {</code></div><div class="line number35 index34 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">super</code><code class="java plain">();</code></div><div class="line number36 index35 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">this</code><code class="java plain">.name = name;</code></div><div class="line number37 index36 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">this</code><code class="java plain">.population = population;</code></div><div class="line number38 index37 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number39 index38 alt2">&nbsp;</div><div class="line number40 index39 alt1"><code class="java spaces">&nbsp;</code><code class="java comments">//getters y setters</code></div><div class="line number41 index40 alt2">&nbsp;</div><div class="line number42 index41 alt1"><code class="java plain">}</code></div></div></td></tr></tbody></table></div></div>
<p align="JUSTIFY">Para el repositorio no se define ninguna operación 
específica ya que es suficiente con las operaciones que Spring Data JPA 
ofrece de serie.</p>
<div><div id="highlighter_411878" class="syntaxhighlighter  java"><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java keyword">package</code> <code class="java plain">com.danielme.springboot.repositories;</code></div><div class="line number2 index1 alt1">&nbsp;</div><div class="line number3 index2 alt2"><code class="java keyword">import</code> <code class="java plain">org.springframework.data.jpa.repository.JpaRepository;</code></div><div class="line number4 index3 alt1">&nbsp;</div><div class="line number5 index4 alt2"><code class="java keyword">import</code> <code class="java plain">com.danielme.springboot.entities.Country;</code></div><div class="line number6 index5 alt1">&nbsp;</div><div class="line number7 index6 alt2"><code class="java keyword">public</code> <code class="java keyword">interface</code> <code class="java plain">CountryRepository </code><code class="java keyword">extends</code> <code class="java plain">JpaRepository&lt;Country, Long&gt;{</code></div><div class="line number8 index7 alt1">&nbsp;</div><div class="line number9 index8 alt2"><code class="java plain">}</code></div></div></td></tr></tbody></table></div></div>
<p align="JUSTIFY">Vamos a seguir una arquitectura multicapa clásica 
basada en persistencia-servicios-vista. Añadimos una clase de servicio 
para trabajar con los países y que simplemente hace de intermediario con
 el repositorio.</p>
<div><div id="highlighter_634044" class="syntaxhighlighter  java"><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div><div class="line number31 index30 alt2">31</div><div class="line number32 index31 alt1">32</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java keyword">package</code> <code class="java plain">com.danielme.springboot.services;</code></div><div class="line number2 index1 alt1">&nbsp;</div><div class="line number3 index2 alt2"><code class="java keyword">import</code> <code class="java plain">java.util.List;</code></div><div class="line number4 index3 alt1"><code class="java keyword">import</code> <code class="java plain">java.util.Optional;</code></div><div class="line number5 index4 alt2">&nbsp;</div><div class="line number6 index5 alt1"><code class="java keyword">import</code> <code class="java plain">org.springframework.stereotype.Service;</code></div><div class="line number7 index6 alt2">&nbsp;</div><div class="line number8 index7 alt1"><code class="java keyword">import</code> <code class="java plain">com.danielme.springboot.entities.Country;</code></div><div class="line number9 index8 alt2"><code class="java keyword">import</code> <code class="java plain">com.danielme.springboot.repositories.CountryRepository;</code></div><div class="line number10 index9 alt1">&nbsp;</div><div class="line number11 index10 alt2"><code class="java color1">@Service</code></div><div class="line number12 index11 alt1"><code class="java keyword">public</code> <code class="java keyword">class</code> <code class="java plain">CountryService {</code></div><div class="line number13 index12 alt2">&nbsp;</div><div class="line number14 index13 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">private</code> <code class="java keyword">final</code> <code class="java plain">CountryRepository countryRepository;</code></div><div class="line number15 index14 alt2">&nbsp;</div><div class="line number16 index15 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java plain">CountryService(CountryRepository countryRepository) {</code></div><div class="line number17 index16 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">this</code><code class="java plain">.countryRepository = countryRepository;</code></div><div class="line number18 index17 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number19 index18 alt2">&nbsp;</div><div class="line number20 index19 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java plain">List&lt;Country&gt; findAll() {</code></div><div class="line number21 index20 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">return</code> <code class="java plain">countryRepository.findAll();</code></div><div class="line number22 index21 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number23 index22 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number24 index23 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java plain">Optional&lt;Country&gt; findById(Long id) {</code></div><div class="line number25 index24 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">return</code> <code class="java plain">countryRepository.findById(id);</code></div><div class="line number26 index25 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number27 index26 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number28 index27 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java plain">Long insert(Country country) {</code></div><div class="line number29 index28 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">country.setId(</code><code class="java keyword">null</code><code class="java plain">);</code></div><div class="line number30 index29 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">return</code> <code class="java plain">countryRepository.save(country).getId();</code></div><div class="line number31 index30 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number32 index31 alt1"><code class="java plain">}</code></div></div></td></tr></tbody></table></div></div>
<p align="JUSTIFY">Echemos un vistazo a la estructura actual del proyecto.</p>
<p><img data-attachment-id="5438" data-permalink="https://danielme.com/2018/02/21/tutorial-spring-boot-web-spring-data-jpa/spring-boot/" data-orig-file="https://danielmedotcom.files.wordpress.com/2018/02/spring-boot.gif" data-orig-size="530,300" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="spring-boot" data-image-description="" data-image-caption="" data-medium-file="https://danielmedotcom.files.wordpress.com/2018/02/spring-boot.gif?w=300" data-large-file="https://danielmedotcom.files.wordpress.com/2018/02/spring-boot.gif?w=530" src="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/spring-boot.gif" alt="" class="aligncenter size-full wp-image-5438" srcset="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/spring-boot_002.gif 1.5x" src-orig="https://danielmedotcom.files.wordpress.com/2018/02/spring-boot.gif?w=656" scale="1.5" width="527" height="298"></p>
<h3>Ejecutando el proyecto con una clase Main</h3>
<p align="JUSTIFY">Antes de continuar construyendo nuestra aplicación 
web, veamos cómo ejecutar el proyecto utilizando una clase con un método
 main. Para hacer que Spring Boot configure Spring anotamos esta clase 
con <a href="https://docs.spring.io/spring-boot/docs/current/api/org/springframework/boot/autoconfigure/SpringBootApplication.html" target="_blank" rel="noopener noreferrer">@SpringBootApplication</a> que aplica las funcionalidades proporcionadas por <a href="https://docs.spring.io/spring/docs/4.3.x/javadoc-api/org/springframework/context/annotation/Configuration.html" target="_blank" rel="noopener noreferrer">@Configuration</a>, <a href="https://docs.spring.io/autorepo/docs/spring-boot/1.5.9.RELEASE/api/org/springframework/boot/autoconfigure/EnableAutoConfiguration.html" target="_blank" rel="noopener noreferrer">@EnableAutoConfiguration, </a><a href="https://docs.spring.io/spring/docs/4.3.x/javadoc-api/org/springframework/context/annotation/ComponentScan.html" target="_blank" rel="noopener noreferrer">@ComponentScan</a> y <a href="https://docs.spring.io/autorepo/docs/spring/4.2.x/javadoc-api/org/springframework/web/servlet/config/annotation/EnableWebMvc.html" target="_blank" rel="noopener noreferrer">@EnableWebMvc</a> (esta última si tenemos el starter para Spring MVC). </p>
<p align="JUSTIFY">En el método main lanzamos la aplicación de forma 
estática. Para ejecutar código en el arranque pero después de la 
iniciación de Spring, implementamos la interfaz <a href="https://docs.spring.io/spring-boot/docs/current/api/org/springframework/boot/CommandLineRunner.html" target="_blank" rel="noopener noreferrer">CommandLineRunner</a> con el método <a href="https://docs.spring.io/spring-boot/docs/current/api/org/springframework/boot/CommandLineRunner.html#run-java.lang.String...-" target="_blank" rel="noopener noreferrer">run</a>.</p>
<div><div id="highlighter_716299" class="syntaxhighlighter  java"><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java keyword">package</code> <code class="java plain">com.danielme.springboot;</code></div><div class="line number2 index1 alt1">&nbsp;</div><div class="line number3 index2 alt2"><code class="java keyword">import</code> <code class="java plain">org.slf4j.Logger;</code></div><div class="line number4 index3 alt1"><code class="java keyword">import</code> <code class="java plain">org.slf4j.LoggerFactory;</code></div><div class="line number5 index4 alt2"><code class="java keyword">import</code> <code class="java plain">org.springframework.beans.factory.annotation.Autowired;</code></div><div class="line number6 index5 alt1"><code class="java keyword">import</code> <code class="java plain">org.springframework.boot.CommandLineRunner;</code></div><div class="line number7 index6 alt2"><code class="java keyword">import</code> <code class="java plain">org.springframework.boot.SpringApplication;</code></div><div class="line number8 index7 alt1"><code class="java keyword">import</code> <code class="java plain">org.springframework.boot.autoconfigure.SpringBootApplication;</code></div><div class="line number9 index8 alt2">&nbsp;</div><div class="line number10 index9 alt1">&nbsp;</div><div class="line number11 index10 alt2"><code class="java keyword">import</code> <code class="java plain">com.danielme.springboot.services.CountryService;</code></div><div class="line number12 index11 alt1">&nbsp;</div><div class="line number13 index12 alt2"><code class="java color1">@SpringBootApplication</code></div><div class="line number14 index13 alt1"><code class="java keyword">public</code> <code class="java keyword">class</code> <code class="java plain">DemoApp </code><code class="java keyword">implements</code> <code class="java plain">CommandLineRunner {</code></div><div class="line number15 index14 alt2">&nbsp;</div><div class="line number16 index15 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">private</code> <code class="java keyword">static</code> <code class="java keyword">final</code> <code class="java plain">Logger logger = LoggerFactory.getLogger(DemoApp.</code><code class="java keyword">class</code><code class="java plain">);</code></div><div class="line number17 index16 alt2">&nbsp;</div><div class="line number18 index17 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@Autowired</code></div><div class="line number19 index18 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">CountryService countryService;</code></div><div class="line number20 index19 alt1">&nbsp;</div><div class="line number21 index20 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java keyword">static</code> <code class="java keyword">void</code> <code class="java plain">main(String[] args) {</code></div><div class="line number22 index21 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">SpringApplication.run(DemoApp.</code><code class="java keyword">class</code><code class="java plain">, args);</code></div><div class="line number23 index22 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number24 index23 alt1">&nbsp;</div><div class="line number25 index24 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@Override</code></div><div class="line number26 index25 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java keyword">void</code> <code class="java plain">run(String... arg0) </code><code class="java keyword">throws</code> <code class="java plain">Exception {</code></div><div class="line number27 index26 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">logger.info(String.valueOf(countryService.findAll().size()));</code></div><div class="line number28 index27 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number29 index28 alt2">&nbsp;</div><div class="line number30 index29 alt1"><code class="java plain">}</code></div></div></td></tr></tbody></table></div></div>
<p align="JUSTIFY">En nuestro ejemplo necesitamos también activar la auditoria de entidades JPA con <a href="https://docs.spring.io/spring-data/jpa/docs/current/api/org/springframework/data/jpa/repository/config/EnableJpaAuditing.html" target="_blank" rel="noopener noreferrer">@EnableJpaAuditing</a>.
 Aunque esta anotación, al igual que cualquier otra configuración, puede
 añadirse a nuestra clase Main, es muy recomendable separar la 
configuración de Spring atendiendo a la división en capas y/o módulos de
 la aplicación (mvc, persistencia, security, etc) porque nos dará 
flexibilidad a la hora de desarrollar los tests. Por este motivo he 
creado la siguiente clase.</p>
<div><div id="highlighter_981157" class="syntaxhighlighter  java"><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java keyword">package</code> <code class="java plain">com.danielme.springboot;</code></div><div class="line number2 index1 alt1">&nbsp;</div><div class="line number3 index2 alt2"><code class="java keyword">import</code> <code class="java plain">org.springframework.context.annotation.Configuration;</code></div><div class="line number4 index3 alt1"><code class="java keyword">import</code> <code class="java plain">org.springframework.data.jpa.repository.config.EnableJpaAuditing;</code></div><div class="line number5 index4 alt2">&nbsp;</div><div class="line number6 index5 alt1"><code class="java color1">@Configuration</code></div><div class="line number7 index6 alt2"><code class="java color1">@EnableJpaAuditing</code><code class="java plain">(auditorAwareRef = </code><code class="java string">"customAuditorAware"</code><code class="java plain">)</code></div><div class="line number8 index7 alt1"><code class="java keyword">public</code> <code class="java keyword">class</code> <code class="java plain">JpaConfiguration {</code></div><div class="line number9 index8 alt2"><code class="java plain">}</code></div></div></td></tr></tbody></table></div></div>
<p align="JUSTIFY">Ahora nos aseguramos que los <b>parámetros de conexión</b>
 a la base de datos MySQL están correctamente configurados, y que en el 
servidor de MySQL existe la base de datos y el usuario con los permisos 
adecuados; la tabla <em>country</em>, si no existe, se creará automáticamente la primera vez que se ejecute correctamente el proyecto.</p>
<p align="JUSTIFY">Para mayor comodidad, he incluido un fichero <a href="https://github.com/danielme-com/spring-boot-web-spring-data-jpa/blob/master/Dockerfile">Dockerfile</a>
 en la raíz del proyecto con un script SQL que ya se encarga de todo. La
 imagen se puede construir y arrancar como un contenedor utilizando, por
 ejemplo, los siguientes comandos desde el directorio raíz del proyecto.</p>
<pre>docker build -t spring-boot-demo-mysql .
docker run -d -p 3306:3306 spring-boot-demo-mysql
</pre>
<p>
<a href="https://danielme.com/2021/04/27/curso-jakarta-ee-docker-introduccion/">Docker 1: introducción</a><br>
<a href="https://danielme.com/2021/05/06/curso-jakarta-ee-docker-trabajando-con-imagenes-y-contenedores/">Docker 2: imágenes y contenedores</a>
</p>
<p align="JUSTIFY">La imagen de MySQL creada contiene dos bases de datos de nombres <em>country</em> y <em>country-test</em>. Esta última será usada en el tutorial sobre <a href="https://danielme.com/2018/11/26/testing-en-spring-boot-con-junit-45-mockito-mockmvc-rest-assured-bases-de-datos-embebidas/">testing</a>, al igual que un pequeño script con datos de prueba ubicado en <em>/src/test/resources/test-mysql.sql</em>.
 Los datos de este script son también los que se han utilizado en este 
tutorial para probar los ejemplos y ya se encuentran insertados en la 
imagen de Docker. La siguiente captura, realizada con la herramienta 
gratuita <a href="https://dbeaver.io/">DBeaver</a>, muestra estos datos.</p>
<p><img loading="lazy" data-attachment-id="6170" data-permalink="https://danielme.com/2018/02/21/tutorial-spring-boot-web-spring-data-jpa/dbeaver-docker-country/" data-orig-file="https://danielmedotcom.files.wordpress.com/2018/02/dbeaver-docker-country.png" data-orig-size="1013,233" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="dbeaver docker country" data-image-description="" data-image-caption="" data-medium-file="https://danielmedotcom.files.wordpress.com/2018/02/dbeaver-docker-country.png?w=300" data-large-file="https://danielmedotcom.files.wordpress.com/2018/02/dbeaver-docker-country.png?w=656" src="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/dbeaver-docker-country.webp" alt="" class="aligncenter size-full wp-image-6170" srcset="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/dbeaver-docker-country.webp 656w, Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/dbeaver-docker-country_002.webp 150w, Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/dbeaver-docker-country_004.webp 300w, Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/dbeaver-docker-country_003.webp 768w, Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/dbeaver-docker-country.png 1013w" sizes="(max-width: 656px) 100vw, 656px" width="656" height="151"></p>
<p align="JUSTIFY">Ya estamos listos para ejecutar el método <em>main</em>
 como cualquier proyecto Maven desde nuestro IDE y comprobar el log. 
También podemos utilizar el plugin de Maven de Spring Boot para 
empaquetar toda la aplicación en un jar ejecutable sin tener que 
realizar ninguna acción adicional utilizando el siguiente comando.</p>
<pre>mvn package spring-boot:repackage</pre>
<p align="JUSTIFY">Este comando crea dos <em>.jar</em> en el directorio target.</p>
<p><img data-attachment-id="5263" data-permalink="https://danielme.com/2018/02/21/tutorial-spring-boot-web-spring-data-jpa/spring-boot_repackage/" data-orig-file="https://danielmedotcom.files.wordpress.com/2018/02/spring-boot_repackage.png" data-orig-size="359,66" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="spring-boot_repackage" data-image-description="" data-image-caption="" data-medium-file="https://danielmedotcom.files.wordpress.com/2018/02/spring-boot_repackage.png?w=300" data-large-file="https://danielmedotcom.files.wordpress.com/2018/02/spring-boot_repackage.png?w=359" src="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/spring-boot_repackage.webp" alt="spring-boot:repackage" class="aligncenter size-full wp-image-5263" srcset="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/spring-boot_repackage.png 359w, Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/spring-boot_repackage_003.webp 150w, Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/spring-boot_repackage_002.webp 300w" sizes="(max-width: 359px) 100vw, 359px"></p>
<p align="JUSTIFY">El pequeño contiene sólo las clases propias del 
proyecto mientras que el grande incluye todas las dependencias y puede 
ser ejecutado mediante <em>java -jar</em>.</p>
<p align="JUSTIFY">Si queremos ejecutar la aplicación “al vuelo”, es más rápido ejecutar simplemente </p>
<pre>mvn spring-boot:run</pre>
<p align="JUSTIFY">Para más información sobre el empaquetado de aplicaciones consultar <a href="https://danielme.com/2015/05/13/maven-aplicaciones-ejecutables/">Maven: aplicaciones ejecutables</a>.</p>
<h3>Pool de conexiones</h3>
<p align="JUSTIFY">Spring Boot proporciona de serie una implementación de <a href="https://docs.oracle.com/javase/7/docs/api/javax/sql/DataSource.html" target="_blank" rel="noopener noreferrer">DataSource</a> que ofrece un pool de conexiones. Esta implementación depende de la versión que utilicemos:</p>
<ul>
<li>Spring 1.x: la implementación elegida es la de Tomcat( <a href="https://tomcat.apache.org/tomcat-7.0-doc/api/org/apache/tomcat/jdbc/pool/DataSource.html" target="_blank" rel="noopener noreferrer">org.apache.tomcat.jdbc.pool.DataSource</a>)</li>
<li>Spring 2.x: proporciona <a href="https://github.com/brettwooldridge/HikariCP" target="_blank" rel="noopener noreferrer">HikariCP</a>.</li>
</ul>
<p align="JUSTIFY">HikariCP es bastante más potente que el pool de 
Tomcat y en los benchmark suele ofrecer un mejor rendimiento, motivo por
 el cual el equipo de Spring lo ha <a href="https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.0-Release-Notes#hikaricp" target="_blank" rel="noopener noreferrer">adoptado</a>. Sin embargo, HikariCP estaba ya soportado en Spring Boot 1 y podemos utilizarlo siguiendo estos dos pasos:</p>
<ol>
<li>Incluir la dependencia en el pom. La versión a utilizar la delegamos en Spring Boot.
<div><div id="highlighter_581905" class="syntaxhighlighter  xml"><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="xml plain">&lt;</code><code class="xml keyword">dependency</code><code class="xml plain">&gt;</code></div><div class="line number2 index1 alt1"><code class="xml spaces">&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;com.zaxxer&lt;/</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;</code></div><div class="line number3 index2 alt2"><code class="xml spaces">&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;HikariCP&lt;/</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;</code></div><div class="line number4 index3 alt1"><code class="xml plain">&lt;/</code><code class="xml keyword">dependency</code><code class="xml plain">&gt;</code></div></div></td></tr></tbody></table></div></div>
</li>
<li>Añadir la siguiente línea al <em>application.properties</em>.
<pre>spring.datasource.type: com.zaxxer.hikari.HikariDataSource
</pre>
</li>
</ol>
<p align="JUSTIFY">En cualquier caso, los parámetros de HikariCP que 
queramos configurar, siempre con prudencia y en función de las 
necesidades de la aplicación, se definen en este mismo fichero con el 
prefijo <em>spring.datasource.hikari</em>, por ejemplo:</p>
<pre>spring.datasource.hikari.maximumPoolSize=20
</pre>
<h3>Aplicación web con JSP</h3>
<p align="JUSTIFY">Convirtamos nuestro ejemplo en una aplicación web con
 Spring MVC que muestre el listado de países que tengamos en la base de 
datos siguiendo los siguientes pasos.</p>
<ol>
<li>Añadimos el starter <em>spring-boot-starter-web</em>. Vamos a 
utilizar JSP para renderizar la vista de forma dinámica, pero si 
hiciéramos uso de alguno de los motores de plantillas compatibles con 
Spring Boot (Thymelef, FreeMarker, Mustache, Velocity, Groovy Templates)
 tendríamos que incluir el starter correspondiente a esa tecnología, y 
en ese caso ya no es necesario  <em>spring-boot-starter-web</em>.
<div><div id="highlighter_508126" class="syntaxhighlighter  xml"><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="xml plain">&lt;</code><code class="xml keyword">dependency</code><code class="xml plain">&gt;</code></div><div class="line number2 index1 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;org.springframework.boot&lt;/</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;</code></div><div class="line number3 index2 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;spring-boot-starter-web&lt;/</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;</code></div><div class="line number4 index3 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">exclusions</code><code class="xml plain">&gt;</code></div><div class="line number5 index4 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">exclusion</code><code class="xml plain">&gt;</code></div><div class="line number6 index5 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;org.springframework.boot&lt;/</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;</code></div><div class="line number7 index6 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;spring-boot-starter-logging&lt;/</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;</code></div><div class="line number8 index7 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;/</code><code class="xml keyword">exclusion</code><code class="xml plain">&gt;</code></div><div class="line number9 index8 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;/</code><code class="xml keyword">exclusions</code><code class="xml plain">&gt;</code></div><div class="line number10 index9 alt1"><code class="xml plain">&lt;/</code><code class="xml keyword">dependency</code><code class="xml plain">&gt;</code></div></div></td></tr></tbody></table></div></div>
</li>
<li>Al utilizarse JSP, necesitamos la dependencia para el lenguaje JSTL.
<div><div id="highlighter_533529" class="syntaxhighlighter  xml"><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="xml plain">&lt;</code><code class="xml keyword">dependency</code><code class="xml plain">&gt;</code></div><div class="line number2 index1 alt1"><code class="xml spaces">&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;javax.servlet&lt;/</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;</code></div><div class="line number3 index2 alt2"><code class="xml spaces">&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;jstl&lt;/</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;</code></div><div class="line number4 index3 alt1"><code class="xml plain">&lt;/</code><code class="xml keyword">dependency</code><code class="xml plain">&gt;</code></div></div></td></tr></tbody></table></div></div>
<p>y el compilador para JSP</p>
<div><div id="highlighter_204542" class="syntaxhighlighter  xml"><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="xml plain">&lt;</code><code class="xml keyword">dependency</code><code class="xml plain">&gt;</code></div><div class="line number2 index1 alt1"><code class="xml spaces">&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;org.apache.tomcat.embed&lt;/</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;</code></div><div class="line number3 index2 alt2"><code class="xml spaces">&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;tomcat-embed-jasper&lt;/</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;</code></div><div class="line number4 index3 alt1"><code class="xml spaces">&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">scope</code><code class="xml plain">&gt;provided&lt;/</code><code class="xml keyword">scope</code><code class="xml plain">&gt;</code></div><div class="line number5 index4 alt2"><code class="xml plain">&lt;/</code><code class="xml keyword">dependency</code><code class="xml plain">&gt;</code></div></div></td></tr></tbody></table></div></div>
</li>
<li>Spring Boot puede utilizar un servidor embebido para desplegar la 
aplicación. Por defecto se utiliza Tomcat ya que spring-boot-starter-web
 incluye spring-boot-starter-tomcat.
</li>
<li>Las <a href="https://docs.spring.io/spring-boot/docs/current/reference/html/using-boot-devtools.html" target="_blank" rel="noopener noreferrer">herramientas de desarrollo</a>
 de Spring Boot permiten, entre otras funcionalidades, la recarga 
automática de la aplicación web en el Tomcat al detectarse cambios en 
los ficheros incluidos en el classpath.
<div><div id="highlighter_676257" class="syntaxhighlighter  xml"><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="xml plain">&lt;</code><code class="xml keyword">dependency</code><code class="xml plain">&gt;</code></div><div class="line number2 index1 alt1"><code class="xml spaces">&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;org.springframework.boot&lt;/</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;</code></div><div class="line number3 index2 alt2"><code class="xml spaces">&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;spring-boot-devtools&lt;/</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;</code></div><div class="line number4 index3 alt1"><code class="xml spaces">&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">optional</code><code class="xml plain">&gt;true&lt;/</code><code class="xml keyword">optional</code><code class="xml plain">&gt;</code></div><div class="line number5 index4 alt2"><code class="xml plain">&lt;/</code><code class="xml keyword">dependency</code><code class="xml plain">&gt;</code></div></div></td></tr></tbody></table></div></div>
</li>
<li>El valor del packaging debe ser war.
<div><div id="highlighter_57298" class="syntaxhighlighter nogutter  xml"><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="xml plain">&lt;</code><code class="xml keyword">packaging</code><code class="xml plain">&gt;war&lt;/</code><code class="xml keyword">packaging</code><code class="xml plain">&gt;</code></div></div></td></tr></tbody></table></div></div>
</li>
<li>En el <em>application.properties</em> definimos el prefijo y sufijo 
que utilizará el ViewResolver de Spring MVC para encontrar los ficheros 
.jsp que renderizarán las respuestas de las peticiones web. Estos 
scripts jsp los vamos a ubicar físicamente en el directorio 
/src/main/resources/webapp/WEB-INF/jsp
<pre>spring.mvc.view.prefix= /WEB-INF/jsp/
spring.mvc.view.suffix= .jsp
</pre>
</li>
</ol>
<p align="JUSTIFY">Con estos pasos ya hemos convertido nuestra 
aplicación de ejemplo en una aplicación web. Vamos a desarrollar un 
controlador que atienda la raíz de la dirección url para obtener los 
países de la base de datos utilizando el repositorio de Spring Data que 
ya tenemos pero siempre a través del servicio. Un script JSP será el 
responsable de renderizar el html final que se enviará al navegador del 
usuario.</p>
<p align="JUSTIFY">Anotamos nuestra clase controladora con <a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/stereotype/Controller.html" target="_blank" rel="noopener noreferrer">@Controller</a>
 (tener siempre presente que el scope de un controller es singleton como
 cualquier otro bean de Spring) y en el método que procesa la petición 
indicamos la url que “escucha” con la anotación <a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/bind/annotation/RequestMapping.html" target="_blank" rel="noopener noreferrer">@RequestMapping</a>.
 Opcionalmente podemos definir el tipo de petición (GET, POST, PUT…) que
 puede tratar el método, si no se indica se atenderán todos.</p>
<p align="JUSTIFY">Dentro del método obtenemos la lista de países y se añade al <a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/ui/Model.html" target="_blank" rel="noopener noreferrer">Model</a>
 de Spring MVC (en la práctica esto es equivalente a poner la lista en 
un atributo del request). Por último, devolvemos una cadena con el 
nombre del script JSP teniendo en cuenta que su ruta completa se 
obtendrá completando ese nombre con los valores que hemos definidos en <em>spring.mvc.view.prefix</em> y <em>spring.mvc.view.suffix</em>. En nuestro ejemplo esta ruta será /WEB-INF/jsp/<em>countriesList</em>.jsp</p>
<div><div id="highlighter_565411" class="syntaxhighlighter  java"><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java keyword">package</code> <code class="java plain">com.danielme.springboot.controllers;</code></div><div class="line number2 index1 alt1">&nbsp;</div><div class="line number3 index2 alt2"><code class="java keyword">import</code> <code class="java plain">org.springframework.stereotype.Controller;</code></div><div class="line number4 index3 alt1"><code class="java keyword">import</code> <code class="java plain">org.springframework.ui.Model;</code></div><div class="line number5 index4 alt2"><code class="java keyword">import</code> <code class="java plain">org.springframework.web.bind.annotation.RequestMapping;</code></div><div class="line number6 index5 alt1">&nbsp;</div><div class="line number7 index6 alt2"><code class="java keyword">import</code> <code class="java plain">com.danielme.springboot.services.CountryService;</code></div><div class="line number8 index7 alt1">&nbsp;</div><div class="line number9 index8 alt2"><code class="java color1">@Controller</code></div><div class="line number10 index9 alt1"><code class="java keyword">public</code> <code class="java keyword">class</code> <code class="java plain">CountryController {</code></div><div class="line number11 index10 alt2">&nbsp;</div><div class="line number12 index11 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">private</code> <code class="java keyword">final</code> <code class="java plain">CountryService countryService;</code></div><div class="line number13 index12 alt2">&nbsp;</div><div class="line number14 index13 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java plain">CountryController(CountryService countryService) {</code></div><div class="line number15 index14 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">this</code><code class="java plain">.countryService = countryService;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code></div><div class="line number16 index15 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number17 index16 alt2">&nbsp;</div><div class="line number18 index17 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@RequestMapping</code><code class="java plain">(</code><code class="java string">"/"</code><code class="java plain">)</code></div><div class="line number19 index18 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java plain">String list(Model model) {</code></div><div class="line number20 index19 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">model.addAttribute(</code><code class="java string">"countriesList"</code><code class="java plain">, countryService.findAll());</code></div><div class="line number21 index20 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">return</code> <code class="java string">"countriesList"</code><code class="java plain">;</code></div><div class="line number22 index21 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number23 index22 alt2"><code class="java plain">}</code></div></div></td></tr></tbody></table></div></div>
<p align="JUSTIFY">En countriesList.jsp se muestran los datos iterando sobre el atributo <em>countriesList</em> utilizando la librería de etiquetas estándar JSTL. He utilizado <a href="https://getbootstrap.com/">Bootsrap</a> para que la vista tenga un aspecto decente.</p>
<div><div id="highlighter_638775" class="syntaxhighlighter  xml"><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1 highlighted">30</div><div class="line number31 index30 alt2 highlighted">31</div><div class="line number32 index31 alt1 highlighted">32</div><div class="line number33 index32 alt2 highlighted">33</div><div class="line number34 index33 alt1 highlighted">34</div><div class="line number35 index34 alt2 highlighted">35</div><div class="line number36 index35 alt1 highlighted">36</div><div class="line number37 index36 alt2 highlighted">37</div><div class="line number38 index37 alt1 highlighted">38</div><div class="line number39 index38 alt2 highlighted">39</div><div class="line number40 index39 alt1 highlighted">40</div><div class="line number41 index40 alt2 highlighted">41</div><div class="line number42 index41 alt1 highlighted">42</div><div class="line number43 index42 alt2 highlighted">43</div><div class="line number44 index43 alt1 highlighted">44</div><div class="line number45 index44 alt2 highlighted">45</div><div class="line number46 index45 alt1 highlighted">46</div><div class="line number47 index46 alt2 highlighted">47</div><div class="line number48 index47 alt1">48</div><div class="line number49 index48 alt2">49</div><div class="line number50 index49 alt1">50</div><div class="line number51 index50 alt2">51</div><div class="line number52 index51 alt1">52</div><div class="line number53 index52 alt2">53</div><div class="line number54 index53 alt1">54</div><div class="line number55 index54 alt2">55</div><div class="line number56 index55 alt1">56</div><div class="line number57 index56 alt2">57</div><div class="line number58 index57 alt1">58</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="xml plain">&lt;%@ page contentType="text/html; charset=UTF-8"%&gt;</code></div><div class="line number2 index1 alt1"><code class="xml plain">&lt;%@taglib prefix="c" uri="<a href="http://java.sun.com/jsp/jstl/core">http://java.sun.com/jsp/jstl/core</a>"%&gt;</code></div><div class="line number3 index2 alt2"><code class="xml plain">&lt;%@ taglib prefix="fmt" uri="<a href="http://java.sun.com/jsp/jstl/fmt">http://java.sun.com/jsp/jstl/fmt</a>"%&gt;</code></div><div class="line number4 index3 alt1">&nbsp;</div><div class="line number5 index4 alt2"><code class="xml plain">&lt;!</code><code class="xml keyword">DOCTYPE</code> <code class="xml plain">html&gt;</code></div><div class="line number6 index5 alt1"><code class="xml plain">&lt;</code><code class="xml keyword">html</code><code class="xml plain">&gt;</code></div><div class="line number7 index6 alt2">&nbsp;</div><div class="line number8 index7 alt1"><code class="xml plain">&lt;</code><code class="xml keyword">head</code><code class="xml plain">&gt;</code></div><div class="line number9 index8 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">meta</code> <code class="xml color1">charset</code><code class="xml plain">=</code><code class="xml string">"utf-8"</code><code class="xml plain">&gt;</code></div><div class="line number10 index9 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">meta</code> <code class="xml color1">name</code><code class="xml plain">=</code><code class="xml string">"viewport"</code> <code class="xml color1">content</code><code class="xml plain">=</code><code class="xml string">"width=device-width, initial-scale=1, shrink-to-fit=no"</code><code class="xml plain">&gt;</code></div><div class="line number11 index10 alt2">&nbsp;</div><div class="line number12 index11 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">link</code> <code class="xml color1">rel</code><code class="xml plain">=</code><code class="xml string">"shortcut icon"</code> <code class="xml color1">type</code><code class="xml plain">=</code><code class="xml string">"image/png"</code> <code class="xml color1">href</code><code class="xml plain">=</code><code class="xml string">"/favicon.png"</code><code class="xml plain">&gt;</code></div><div class="line number13 index12 alt2">&nbsp;</div><div class="line number14 index13 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">link</code> <code class="xml color1">rel</code><code class="xml plain">=</code><code class="xml string">"stylesheet"</code> <code class="xml color1">href</code><code class="xml plain">=</code><code class="xml string">"<a href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css">https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css</a>"</code></div><div class="line number15 index14 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml color1">integrity</code><code class="xml plain">=</code><code class="xml string">"sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO"</code></div><div class="line number16 index15 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml color1">crossorigin</code><code class="xml plain">=</code><code class="xml string">"anonymous"</code><code class="xml plain">&gt;</code></div><div class="line number17 index16 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">link</code> <code class="xml color1">rel</code><code class="xml plain">=</code><code class="xml string">"stylesheet"</code> <code class="xml color1">href</code><code class="xml plain">=</code><code class="xml string">"styles.css"</code><code class="xml plain">&gt;</code></div><div class="line number18 index17 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">title</code><code class="xml plain">&gt;Spring Boot&lt;/</code><code class="xml keyword">title</code><code class="xml plain">&gt;</code></div><div class="line number19 index18 alt2">&nbsp;</div><div class="line number20 index19 alt1"><code class="xml plain">&lt;/</code><code class="xml keyword">head</code><code class="xml plain">&gt;</code></div><div class="line number21 index20 alt2">&nbsp;</div><div class="line number22 index21 alt1"><code class="xml plain">&lt;</code><code class="xml keyword">body</code><code class="xml plain">&gt;</code></div><div class="line number23 index22 alt2">&nbsp;</div><div class="line number24 index23 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">div</code> <code class="xml color1">class</code><code class="xml plain">=</code><code class="xml string">"container"</code><code class="xml plain">&gt;</code></div><div class="line number25 index24 alt2">&nbsp;</div><div class="line number26 index25 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">div</code> <code class="xml color1">class</code><code class="xml plain">=</code><code class="xml string">"title"</code><code class="xml plain">&gt;</code></div><div class="line number27 index26 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">h1</code><code class="xml plain">&gt;Countries&lt;/</code><code class="xml keyword">h1</code><code class="xml plain">&gt;</code></div><div class="line number28 index27 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;/</code><code class="xml keyword">div</code><code class="xml plain">&gt;</code></div><div class="line number29 index28 alt2">&nbsp;</div><div class="line number30 index29 alt1 highlighted"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">c:choose</code><code class="xml plain">&gt;</code></div><div class="line number31 index30 alt2 highlighted">&nbsp;</div><div class="line number32 index31 alt1 highlighted"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">c:when</code> <code class="xml color1">test</code><code class="xml plain">=</code><code class="xml string">"${not empty countriesList}"</code><code class="xml plain">&gt;</code></div><div class="line number33 index32 alt2 highlighted"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number34 index33 alt1 highlighted"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">ul</code><code class="xml plain">&gt;</code></div><div class="line number35 index34 alt2 highlighted"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">c:forEach</code> <code class="xml color1">var</code><code class="xml plain">=</code><code class="xml string">"item"</code> <code class="xml color1">items</code><code class="xml plain">=</code><code class="xml string">"${countriesList}"</code><code class="xml plain">&gt;</code></div><div class="line number36 index35 alt1 highlighted"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">li</code><code class="xml plain">&gt;${item.name}:&lt;</code><code class="xml keyword">fmt:formatNumber</code></div><div class="line number37 index36 alt2 highlighted"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml color1">value</code><code class="xml plain">=</code><code class="xml string">"${item.population}"</code> <code class="xml plain">/&gt;&lt;/</code><code class="xml keyword">li</code><code class="xml plain">&gt;</code></div><div class="line number38 index37 alt1 highlighted"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;/</code><code class="xml keyword">c:forEach</code><code class="xml plain">&gt;</code></div><div class="line number39 index38 alt2 highlighted"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;/</code><code class="xml keyword">ul</code><code class="xml plain">&gt;</code></div><div class="line number40 index39 alt1 highlighted"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number41 index40 alt2 highlighted"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;/</code><code class="xml keyword">c:when</code><code class="xml plain">&gt;</code></div><div class="line number42 index41 alt1 highlighted"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number43 index42 alt2 highlighted"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">c:otherwise</code><code class="xml plain">&gt;</code></div><div class="line number44 index43 alt1 highlighted"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">b</code><code class="xml plain">&gt;NO DATA&lt;/</code><code class="xml keyword">b</code><code class="xml plain">&gt;</code></div><div class="line number45 index44 alt2 highlighted"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;/</code><code class="xml keyword">c:otherwise</code><code class="xml plain">&gt;</code></div><div class="line number46 index45 alt1 highlighted"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number47 index46 alt2 highlighted"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;/</code><code class="xml keyword">c:choose</code><code class="xml plain">&gt;</code></div><div class="line number48 index47 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;/</code><code class="xml keyword">div</code><code class="xml plain">&gt;</code></div><div class="line number49 index48 alt2">&nbsp;</div><div class="line number50 index49 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">footer</code> <code class="xml color1">class</code><code class="xml plain">=</code><code class="xml string">"footer"</code><code class="xml plain">&gt;</code></div><div class="line number51 index50 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">div</code> <code class="xml color1">class</code><code class="xml plain">=</code><code class="xml string">"container"</code><code class="xml plain">&gt;</code></div><div class="line number52 index51 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">p</code> <code class="xml color1">class</code><code class="xml plain">=</code><code class="xml string">"text-muted"</code><code class="xml plain">&gt;&lt;</code><code class="xml keyword">a</code> <code class="xml color1">href</code><code class="xml plain">=</code><code class="xml string">"<a href="https://danielme.com/spring/">https://danielme.com/spring/</a>"</code><code class="xml plain">&gt;danielme.com&lt;/</code><code class="xml keyword">a</code><code class="xml plain">&gt;&lt;/</code><code class="xml keyword">p</code><code class="xml plain">&gt;</code></div><div class="line number53 index52 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;/</code><code class="xml keyword">div</code><code class="xml plain">&gt;</code></div><div class="line number54 index53 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;/</code><code class="xml keyword">footer</code><code class="xml plain">&gt;</code></div><div class="line number55 index54 alt2">&nbsp;</div><div class="line number56 index55 alt1"><code class="xml plain">&lt;/</code><code class="xml keyword">body</code><code class="xml plain">&gt;</code></div><div class="line number57 index56 alt2">&nbsp;</div><div class="line number58 index57 alt1"><code class="xml plain">&lt;/</code><code class="xml keyword">html</code><code class="xml plain">&gt;</code></div></div></td></tr></tbody></table></div></div>
<p align="JUSTIFY">Los ficheros con recursos estáticos tales como imágenes, css, JavaScript, etc, se ubican por defecto en el directorio <em>/src/main/resources/static</em> o en subdirectorios del mismo. Son accesibles a partir de la url raíz de la aplicación, por ejemplo <em>/src/main/resources/static/js/script.js</em> estará en <em><a href="http://localhost:8080/js/script.js" rel="nofollow">http://localhost:8080/js/script.js</a></em>.</p>
<p align="JUSTIFY">Para arrancar la aplicación web tenemos varias opciones:</p>
<ul>
<li>Crear un .war ejecutable con el comando que vimos antes (mvn package spring-boot:repackage).</li>
<li>Lanzar directamente la aplicación con <em>mvn spring-boot:run</em>.</li>
<li>Lanzar la aplicación, tanto en modo “normal” como en debug, en 
Eclipse utilizando el plugin de Spring instalable desde el Marketplace. 
 En cualquier caso, en el menu contextual tanto del proyecto como de la 
clase con el Main tendremos la opción <i>Spring Boot App</i> dentro de <i>Run As</i> y <i>Debug As</i>.
<p><img data-attachment-id="5264" data-permalink="https://danielme.com/2018/02/21/tutorial-spring-boot-web-spring-data-jpa/spring-tool-suite-spring-boot-app/" data-orig-file="https://danielmedotcom.files.wordpress.com/2018/02/spring-tool-suite-spring-boot-app.png" data-orig-size="499,195" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="spring tool suite spring boot app" data-image-description="&lt;p&gt;spring tool suite spring boot app&lt;/p&gt;
" data-image-caption="" data-medium-file="https://danielmedotcom.files.wordpress.com/2018/02/spring-tool-suite-spring-boot-app.png?w=300" data-large-file="https://danielmedotcom.files.wordpress.com/2018/02/spring-tool-suite-spring-boot-app.png?w=499" src="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/spring-tool-suite-spring-boot-app_002.webp" alt="spring tool suite spring boot app" class="aligncenter size-full wp-image-5264" srcset="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/spring-tool-suite-spring-boot-app.png 499w, Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/spring-tool-suite-spring-boot-app.webp 150w, Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/spring-tool-suite-spring-boot-app_003.webp 300w" sizes="(max-width: 499px) 100vw, 499px"><br>
Una vez lanzado el servidor, se puede detener desde la propia consola de Eclipse.<br>
<img data-attachment-id="5265" data-permalink="https://danielme.com/2018/02/21/tutorial-spring-boot-web-spring-data-jpa/stop-eclipse/" data-orig-file="https://danielmedotcom.files.wordpress.com/2018/02/stop-eclipse.png" data-orig-size="165,35" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="stop eclipse" data-image-description="" data-image-caption="" data-medium-file="https://danielmedotcom.files.wordpress.com/2018/02/stop-eclipse.png?w=165" data-large-file="https://danielmedotcom.files.wordpress.com/2018/02/stop-eclipse.png?w=165" src="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/stop-eclipse.webp" alt="" class="aligncenter size-full wp-image-5265" srcset="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/stop-eclipse.png 165w, Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/stop-eclipse_002.webp 150w" sizes="(max-width: 165px) 100vw, 165px"></p>
</li>
<li>En el caso de IntelliJ, el soporte que trae de serie para Spring ya 
debería de crear automáticamente una configuración para ejecutar la 
aplicación.<br>
<img data-attachment-id="6067" data-permalink="https://danielme.com/2018/02/21/tutorial-spring-boot-web-spring-data-jpa/intellij-spring-boot/" data-orig-file="https://danielmedotcom.files.wordpress.com/2018/02/intellij-spring-boot.png" data-orig-size="318,46" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="IntelliJ spring boot run webapp" data-image-description="" data-image-caption="" data-medium-file="https://danielmedotcom.files.wordpress.com/2018/02/intellij-spring-boot.png?w=300" data-large-file="https://danielmedotcom.files.wordpress.com/2018/02/intellij-spring-boot.png?w=318" src="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/intellij-spring-boot.webp" alt="" class="aligncenter size-full wp-image-6067" srcset="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/intellij-spring-boot.png 318w, Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/intellij-spring-boot_002.webp 150w, Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/intellij-spring-boot_003.webp 300w" sizes="(max-width: 318px) 100vw, 318px"><p></p>
</li></ul>
<p align="JUSTIFY">La aplicación está disponible en la url <a href="http://localhost:8080/" rel="nofollow">http://localhost:8080</a></p>
<p><img loading="lazy" data-attachment-id="5610" data-permalink="https://danielme.com/2018/02/21/tutorial-spring-boot-web-spring-data-jpa/spring-boot-countries-jsp/" data-orig-file="https://danielmedotcom.files.wordpress.com/2018/02/spring-boot-countries-jsp.png" data-orig-size="729,384" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="spring boot countries jsp" data-image-description="" data-image-caption="" data-medium-file="https://danielmedotcom.files.wordpress.com/2018/02/spring-boot-countries-jsp.png?w=300" data-large-file="https://danielmedotcom.files.wordpress.com/2018/02/spring-boot-countries-jsp.png?w=656" src="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/spring-boot-countries-jsp_003.webp" alt="" class="aligncenter size-full wp-image-5610" srcset="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/spring-boot-countries-jsp_003.webp 656w, Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/spring-boot-countries-jsp.webp 150w, Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/spring-boot-countries-jsp_002.webp 300w, Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/spring-boot-countries-jsp.png 729w" sizes="(max-width: 656px) 100vw, 656px" width="656" height="346"></p>
<p align="JUSTIFY">El puerto del servidor embebido se puede cambiar con la propiedad <em>server.port</em> en el <em>application.properties</em>, al igual que el nombre con el que se despliega la aplicación (<em>server.servlet.context-path</em>), que tal y como podemos observar por defecto se despliega en la raíz del servidor.</p>
<pre>server.servlet.context-path=/spring-boot-demo
server.port=9090
</pre>
<p align="JUSTIFY">Normalmente necesitaremos empaquetar las aplicaciones web en un <b>war estándar</b>
 que pueda ser desplegado directamente en un contenedor o servidor de 
aplicaciones como Tomcat.  Conseguir esto es tan sencillo como hacer que
 la clase <em>Main</em> herede de <em>SpringBootServletInitializer</em>, clase que depende de la versión de Spring Boot:</p>
<ul>
<li>1 :  <a href="https://docs.spring.io/spring-boot/docs/1.5.9.RELEASE/api/org/springframework/boot/web/support/SpringBootServletInitializer.html" target="_blank" rel="noopener noreferrer">org.springframework.boot.web.support.SpringBootServletInitializer</a></li>
<li>2 :  <a href="https://docs.spring.io/spring-boot/docs/current/api/org/springframework/boot/web/servlet/support/SpringBootServletInitializer.html" target="_blank" rel="noopener noreferrer">org.springframework.boot.web.servlet.support.SpringBootServletInitializer</a></li>
</ul>
<div><div id="highlighter_490415" class="syntaxhighlighter  java"><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java color1">@SpringBootApplication</code></div><div class="line number2 index1 alt1"><code class="java keyword">public</code> <code class="java keyword">class</code> <code class="java plain">DemoApp </code><code class="java keyword">extends</code> <code class="java plain">SpringBootServletInitializer</code></div><div class="line number3 index2 alt2"><code class="java plain">{</code></div></div></td></tr></tbody></table></div></div>
<p>NOTA: Si tras este cambio lanzamos el proyecto desde Eclipse, la url es <a href="http://localhost:8080/spring-boot/" rel="nofollow">http://localhost:8080/spring-boot/</a>.</p>
<p align="JUSTIFY">Con este pequeño cambio el war generado con Spring 
Boot  sigue siendo autoejecutable con el Tomcat embebido pero también 
puede desplegarse en cualquier Tomcat o similar (renombrar y utilizar el
 fichero <em>spring-boot-1.0.war.original</em>).</p>
<p align="JUSTIFY">Si queremos prescindir de la funcionalidad de auto ejecución, hay que eliminar del pom las dependencias  <i>spring-boot-starter-tomcat</i> y <i>tomcat-embed-jasper</i>.
 Esto provoca como efecto colateral que desde Eclipse o IntelliJ la 
aplicación deba ser lanzada como cualquier proyecto web Maven estándar 
en un servidor y no con las herramientas del plugin de Spring.</p>
<h3>Servicios REST</h3>
<p><a name="REST" id="a"></a></p>
<p align="JUSTIFY">Vamos a añadir un pequeño servicio REST para Country.
 Este servicio se implementa sin utilizar ninguna funcionalidad 
específica de Spring Boot y voy a utilizar algunas de las anotaciones 
introducidas en Spring 4 tales como <a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/bind/annotation/RestController.html" target="_blank" rel="noopener noreferrer">@RestController</a> o <a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/bind/annotation/GetMapping.html" target="_blank" rel="noopener noreferrer">@GetMapping</a> (Spring 4.3) que simplifican la definición de los servicios y hacen el código más intuitivo.</p>
<p align="JUSTIFY">En primer lugar, creamos un controlador de tipo RestController con una url raíz para todas las llamadas que contendrá</p>
<div><div id="highlighter_13459" class="syntaxhighlighter  java"><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java color1">@RestController</code></div><div class="line number2 index1 alt1"><code class="java color1">@RequestMapping</code><code class="java plain">(CountryRestController.COUNTRY_RESOURCE)</code></div><div class="line number3 index2 alt2"><code class="java keyword">public</code> <code class="java keyword">class</code> <code class="java plain">CountryRestController {</code></div><div class="line number4 index3 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number5 index4 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java keyword">static</code> <code class="java keyword">final</code> <code class="java plain">String COUNTRY_RESOURCE = </code><code class="java string">"/api/country"</code><code class="java plain">;</code></div></div></td></tr></tbody></table></div></div>
<p align="JUSTIFY">Tanto las respuestas y peticiones de nuestro servicio
 REST se basarán en JSON. Esta funcionalidad ya la tenemos de serie en 
Spring y no es necesario configurar absolutamente nada. La conversión 
entre objetos Java y JSON y viceversa (serialización y deserialización) 
es realizada de forma automática por Spring si en el classpath se 
encuentra la librería <a href="https://github.com/FasterXML/jackson" target="_blank" rel="noopener noreferrer">Jackson</a> la cual es una dependencia de spring-boot-starter-web. La instancia del mapeador de Jackson (<a href="https://fasterxml.github.io/jackson-databind/javadoc/2.7/com/fasterxml/jackson/databind/ObjectMapper.html" target="_blank" rel="noopener noreferrer">ObjectMapper</a>) que Spring Boot crea de forma automática puede personalizarse vía <em>application.properties</em> siguiendo la <a href="https://docs.spring.io/spring-boot/docs/current/reference/html/howto.html#howto-customize-the-jackson-objectmapper" target="_blank" rel="noopener noreferrer">documentación oficial</a>.</p>
<p align="JUSTIFY">Para las respuestas se utiliza la clase <a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/http/ResponseEntity.html" target="_blank" rel="noopener noreferrer">ResponseEntity</a>
 que modela la respuesta HTTP completa y tipada que se devuelve al 
cliente del servicio. Esta clase permite personalizar el código de 
estatus HTTP, algo muy importante a la hora de hacer un buen diseño de 
una API REST.</p>
<p align="JUSTIFY">Se crean dos endpoint REST para el recurso Country.</p>
<ul>
<li>Obtención de un país a partir de su id. Es una llamada HTTP de tipo 
GET con el identificador del país incluido en la propia url. Para 
recibir en el método este valor utilizamos la anotación <a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/bind/annotation/PathVariable.html" target="_blank" rel="noopener noreferrer">@PathVariable</a>. Si el país existe se devuelve junto con un status code 200, si no simplemente se retorna un 404.
<div><div id="highlighter_22351" class="syntaxhighlighter  java"><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java color1">@GetMapping</code><code class="java plain">(value = </code><code class="java string">"/{id}/"</code><code class="java plain">)</code></div><div class="line number2 index1 alt1"><code class="java keyword">public</code> <code class="java plain">ResponseEntity&lt;Country&gt; getById(</code><code class="java color1">@PathVariable</code><code class="java plain">(</code><code class="java string">"id"</code><code class="java plain">) Long id) {</code></div><div class="line number3 index2 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">Optional&lt;Country&gt; country = countryService.findById(id);</code></div><div class="line number4 index3 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">return</code> <code class="java plain">country.map(value -&gt; </code><code class="java keyword">new</code> <code class="java plain">ResponseEntity&lt;&gt;(value, HttpStatus.OK))</code></div><div class="line number5 index4 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">.orElseGet(() -&gt; </code><code class="java keyword">new</code> <code class="java plain">ResponseEntity&lt;&gt;(</code><code class="java keyword">null</code><code class="java plain">, HttpStatus.NOT_FOUND));</code></div><div class="line number6 index5 alt1"><code class="java plain">}</code></div></div></td></tr></tbody></table></div></div>
</li>
<li>Creación de un nuevo país. Es una llamada tipo POST directamente a 
la url raíz del servicio y el cliente debe enviar un JSON con el nombre y
 población del país
<pre>{
    "name": "Germany",
    "population": 79778000
}
</pre>
<p>En el método del controller podemos recibir directamente un objeto de
 tipo Country añadiéndolo como un parámetro con la anotación <a href="https://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/web/bind/annotation/RequestBody.html" target="_blank" rel="noopener noreferrer">@RequestBody</a>. Esta anotación tiene la propiedad <em>required</em>
 que por defecto es true. Si la inserción es correcta, se devuelve el 
identificador que ha sido asignado al nuevo país en un JSON con el 
atributo <em>id</em>, y un código 201 (creado). Si se produce una 
excepción, se devolverá el código 500 (Internal server error) y un JSON 
con el mensaje de la excepción.</p>
<p>Además vamos a imponer a los datos del país la verificación de las 
restricciones definidas en la clase Country simplemente anotando el 
parámetro con @Valid.</p>
<div><div id="highlighter_882386" class="syntaxhighlighter  java"><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java color1">@PostMapping</code></div><div class="line number2 index1 alt1"><code class="java keyword">public</code> <code class="java plain">ResponseEntity&lt;Map&lt;String, Object&gt;&gt; add(</code><code class="java color1">@RequestBody</code> <code class="java color1">@Valid</code> <code class="java plain">Country country) {</code></div><div class="line number3 index2 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">try</code> <code class="java plain">{</code></div><div class="line number4 index3 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">Long id = countryService.insert(country);</code></div><div class="line number5 index4 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">return</code> <code class="java keyword">new</code> <code class="java plain">ResponseEntity&lt;&gt;(Collections.singletonMap(</code><code class="java string">"id"</code><code class="java plain">, id), HttpStatus.CREATED);</code></div><div class="line number6 index5 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">} </code><code class="java keyword">catch</code> <code class="java plain">(Exception ex) {</code></div><div class="line number7 index6 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">logger.error(ex.getMessage(), ex);</code></div><div class="line number8 index7 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">return</code> <code class="java keyword">new</code> <code class="java plain">ResponseEntity&lt;&gt;(Collections.singletonMap(</code><code class="java string">"error"</code><code class="java plain">, ex.getMessage()),</code></div><div class="line number9 index8 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">HttpStatus.INTERNAL_SERVER_ERROR);</code></div><div class="line number10 index9 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number11 index10 alt2"><code class="java plain">}</code></div></div></td></tr></tbody></table></div></div>
<p>Si hay errores de validación se devuelve un 400 – Petición incorrecta
 y un JSON con la traza completa del error que muestra demasiada 
información. Para personalizar el JSON de respuesta consultar el final 
del tutorial <a href="https://danielme.com/2019/03/02/spring-boot-gestion-de-errores-en-aplicaciones-web-y-rest/">Spring Boot: Gestión de errores en aplicaciones web y REST</a>.
</p></li>
<p align="JUSTIFY">La API REST se puede probar utilizando herramientas gratuitas y multiplataformas tales como <a href="https://insomnia.rest/" target="_blank" rel="noopener noreferrer">Insomnia REST Client</a> o <a href="https://www.getpostman.com/" target="_blank" rel="noopener noreferrer">Postman</a>.</p>
<p><img loading="lazy" data-attachment-id="5439" data-permalink="https://danielme.com/2018/02/21/tutorial-spring-boot-web-spring-data-jpa/spring-boot-postman/" data-orig-file="https://danielmedotcom.files.wordpress.com/2018/02/spring-boot-postman.png" data-orig-size="850,676" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="spring-boot-postman" data-image-description="" data-image-caption="" data-medium-file="https://danielmedotcom.files.wordpress.com/2018/02/spring-boot-postman.png?w=300" data-large-file="https://danielmedotcom.files.wordpress.com/2018/02/spring-boot-postman.png?w=656" src="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/spring-boot-postman.webp" alt="" class="aligncenter size-full wp-image-5439" srcset="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/spring-boot-postman.webp 656w, Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/spring-boot-postman_002.webp 150w, Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/spring-boot-postman_003.webp 300w, Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/spring-boot-postman_004.webp 768w, Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/spring-boot-postman.png 850w" sizes="(max-width: 656px) 100vw, 656px" width="656" height="522"></p>
<p align="JUSTIFY">En el tutorial <a href="https://danielme.com/2018/11/26/testing-en-spring-boot-con-junit-45-mockito-mockmvc-rest-assured-bases-de-datos-embebidas/">Testing en Spring Boot con JUnit 4\5. Mockito, MockMvc, REST Assured, bases de datos embebidas</a> testearemos esta API REST desde código en tests de JUnit utilizando MockMvc y RestAssured.</p>
<h3>Spring initializr</h3>
<p align="JUSTIFY">La creación inicial del proyecto se puede realizar de forma gráfica mediante esta herramienta <a href="https://start.spring.io/" target="_blank" rel="noopener noreferrer">vía web</a>, o bien mediante un asistente en Eclipse gracias al plugin  <a href="https://spring.io/tools" target="_blank" rel="noopener noreferrer">Spring Tool Suite</a>
 del que ya hemos hablado (IntelliJ también cuenta con un asistente 
similar). Para utilizarlo nos vamos a “File&gt;New-&gt;Other” y 
seleccionamos el asistente Spring Boot-&gt;Spring Starter Project.</p>
<p align="JUSTIFY">El asistente consta de tres pantallas. En la segunda de ellas tenemos acceso a un catálogo categorizado con todos los starters.</p>
<p><img data-attachment-id="5203" data-permalink="https://danielme.com/2018/02/21/tutorial-spring-boot-web-spring-data-jpa/spring-boot-catalogo/" data-orig-file="https://danielmedotcom.files.wordpress.com/2018/02/spring-boot-catalogo.png" data-orig-size="258,489" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="spring boot catalogo" data-image-description="" data-image-caption="" data-medium-file="https://danielmedotcom.files.wordpress.com/2018/02/spring-boot-catalogo.png?w=158" data-large-file="https://danielmedotcom.files.wordpress.com/2018/02/spring-boot-catalogo.png?w=258" src="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/spring-boot-catalogo_002.webp" alt="" class="aligncenter size-full wp-image-5203" srcset="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/spring-boot-catalogo.png 258w, Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/spring-boot-catalogo.webp 79w" sizes="(max-width: 258px) 100vw, 258px"></p>
<p align="JUSTIFY">Los proyectos creados con esta herramienta incluyen 
un “wrapper” para Maven o Gradle, según la opción elegida, por lo que no
 es necesario tener instalado como prerrequisito Maven (o Gradle) para 
poder construir el proyecto. Además de esta forma nos aseguramos que el 
proyecto se gestione siempre con la versión de Maven o Gradle correcta. 
En mi opinión es una buena práctica utilizarlo aunque en el proyecto de 
ejemplo no lo he incluido por simplicidad.</p>
<p align="JUSTIFY">Disponemos de dos scripts, uno para Windows (cmd) y 
otro para Linux (bash), que invocaremos con los mismos parámetros que 
usaríamos si llamáramos directamente al ejecutable de Maven (mvn).</p>
<p><img data-attachment-id="5202" data-permalink="https://danielme.com/2018/02/21/tutorial-spring-boot-web-spring-data-jpa/wrapper/" data-orig-file="https://danielmedotcom.files.wordpress.com/2018/02/wrapper.png" data-orig-size="298,320" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="maven wrapper" data-image-description="" data-image-caption="" data-medium-file="https://danielmedotcom.files.wordpress.com/2018/02/wrapper.png?w=279" data-large-file="https://danielmedotcom.files.wordpress.com/2018/02/wrapper.png?w=298" src="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/wrapper.webp" alt="" class="aligncenter size-full wp-image-5202" srcset="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/wrapper.png 298w, Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/wrapper_002.webp 140w" sizes="(max-width: 298px) 100vw, 298px"></p>
<h3>Propiedades personalizadas</h3>
<p align="JUSTIFY">Hemos visto que los parámetros de configuración de Spring Boot y de las librerías que integra se definen en el fichero <em>application.properties</em>. Para utilizar otros ficheros de propiedades podemos seguir la praxis habitual de cualquier aplicación Spring.</p>
<ol>
<li>Añadir el fichero al classpath dentro de <em>/src/main/resources</em>, siempre y cuando el fichero vaya a ser empaquetado dentro de la aplicación.
<div><div id="highlighter_520796" class="syntaxhighlighter nogutter  xml"><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="xml plain">song=ride like the wind</code></div></div></td></tr></tbody></table></div></div>
</li>
<li>Importar el fichero desde una clase de configuración de Spring con la anotación <a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/context/annotation/PropertySource.html" target="_blank" rel="noopener noreferrer">@PropertySource</a>.
<div><div id="highlighter_627030" class="syntaxhighlighter nogutter  java"><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java color1">@SpringBootApplication</code></div><div class="line number2 index1 alt1"><code class="java color1">@EnableJpaAuditing</code><code class="java plain">(auditorAwareRef = </code><code class="java string">"customAuditorAware"</code><code class="java plain">)</code></div><div class="line number3 index2 alt2"><code class="java color1">@PropertySource</code><code class="java plain">(</code><code class="java string">"classpath:song.properties"</code><code class="java plain">)</code></div><div class="line number4 index3 alt1"><code class="java keyword">public</code> <code class="java keyword">class</code> <code class="java plain">DemoApp </code><code class="java keyword">extends</code> <code class="java plain">SpringBootServletInitializer</code></div><div class="line number5 index4 alt2"><code class="java plain">{</code></div></div></td></tr></tbody></table></div></div>
</li>
<li>Inyectar directamente las propiedades de forma individual…
<div><div id="highlighter_440804" class="syntaxhighlighter nogutter  java"><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java color1">@Value</code><code class="java plain">(</code><code class="java string">"${song}"</code><code class="java plain">)</code></div><div class="line number2 index1 alt1"><code class="java keyword">private</code> <code class="java plain">String song;</code></div></div></td></tr></tbody></table></div></div>
<p>o utilizar el <a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/core/env/Environment.html" target="_blank" rel="noopener noreferrer">Environment</a> de Spring</p>
<div><div id="highlighter_57267" class="syntaxhighlighter nogutter  java"><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java color1">@Value</code><code class="java plain">(</code><code class="java string">"${song}"</code><code class="java plain">)</code></div><div class="line number2 index1 alt1"><code class="java color1">@Autowired</code></div><div class="line number3 index2 alt2"><code class="java keyword">private</code> <code class="java plain">Environment environment;</code></div><div class="line number4 index3 alt1">&nbsp;</div><div class="line number5 index4 alt2"><code class="java plain">...</code></div><div class="line number6 index5 alt1">&nbsp;</div><div class="line number7 index6 alt2"><code class="java plain">String song = environment.getProperty(</code><code class="java string">"song"</code><code class="java plain">);</code></div></div></td></tr></tbody></table></div></div>
</li>
</ol>
<p align="JUSTIFY">También podemos añadir nuestros propios parámetros al
 fichero application.properties y obtenerlos del mismo modo, pero Spring
 Boot permite modelar en clases esos parámetros para abstraer su 
utilización. De este modo, no necesitamos ni conocer ni codificar la 
clave de una propiedad en la aplicación y podemos imponer restricciones a
 su valor.</p>
<ol>
<li>Creamos un clase que modele un grupo de propiedades de configuración
 en atributos con sus correspondientes getters y setters. Estos 
atributos pueden validarse utilizando las anotaciones de Bean Validation
 (en este caso la clase debe ser anotada con <a href="https://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/validation/annotation/Validated.html" target="_blank" rel="noopener noreferrer">@Validated</a>). Esta clase la anotamos con <a href="https://docs.spring.io/spring-boot/docs/current/api/org/springframework/boot/context/properties/ConfigurationProperties.html" target="_blank" rel="noopener noreferrer">@ConfigurationProperties</a> para definir el prefijo que tendrán estas propiedades.<p></p>
<div><div id="highlighter_842178" class="syntaxhighlighter  java"><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java keyword">package</code> <code class="java plain">com.danielme.springboot;</code></div><div class="line number2 index1 alt1">&nbsp;</div><div class="line number3 index2 alt2"><code class="java keyword">import</code> <code class="java plain">javax.validation.constraints.NotBlank;</code></div><div class="line number4 index3 alt1">&nbsp;</div><div class="line number5 index4 alt2"><code class="java keyword">import</code> <code class="java plain">org.springframework.boot.context.properties.ConfigurationProperties;</code></div><div class="line number6 index5 alt1"><code class="java keyword">import</code> <code class="java plain">org.springframework.validation.annotation.Validated;</code></div><div class="line number7 index6 alt2">&nbsp;</div><div class="line number8 index7 alt1"><code class="java color1">@Validated</code></div><div class="line number9 index8 alt2"><code class="java color1">@ConfigurationProperties</code><code class="java plain">(</code><code class="java string">"custom"</code><code class="java plain">)</code></div><div class="line number10 index9 alt1"><code class="java keyword">public</code> <code class="java keyword">class</code> <code class="java plain">CustomProperties {</code></div><div class="line number11 index10 alt2">&nbsp;</div><div class="line number12 index11 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@NotBlank</code></div><div class="line number13 index12 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">private</code> <code class="java plain">String value;</code></div><div class="line number14 index13 alt1">&nbsp;</div><div class="line number15 index14 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java plain">String getValue() {</code></div><div class="line number16 index15 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">return</code> <code class="java plain">value;</code></div><div class="line number17 index16 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number18 index17 alt1">&nbsp;</div><div class="line number19 index18 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java keyword">void</code> <code class="java plain">setValue(String value) {</code></div><div class="line number20 index19 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">this</code><code class="java plain">.value = value;</code></div><div class="line number21 index20 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number22 index21 alt1">&nbsp;</div><div class="line number23 index22 alt2"><code class="java plain">}</code></div></div></td></tr></tbody></table></div></div>
<p>La anotación <a href="https://docs.jboss.org/hibernate/stable/beanvalidation/api/javax/validation/constraints/NotBlank.html" target="_blank" rel="noopener noreferrer">@NotBlank</a>
 impone que el valor sea obligatorio y no una cadena en blanco, esto es,
 que no conste sólo de espacios en blanco. Si no se satisface esta 
restricción se lanzará una excepción y el inicio de Spring se aborta:</p>
<pre>***************************
APPLICATION FAILED TO START
***************************

Description:

Binding to target org.springframework.boot.context.properties.bind.BindException: Failed to bind properties under 'custom' to com.danielme.springboot.CustomProperties failed:

    Property: custom.value
    Value: 
    Origin: class path resource [application.properties]:10:15
    Reason: must not be blank


Action:

Update your application's configuration
</pre>
</li>
<li>Incluir esta clase en la configuración de Spring Boot con la anotación <a href="https://docs.spring.io/spring-boot/docs/current/api/org/springframework/boot/context/properties/EnableConfigurationProperties.html" target="_blank" rel="noopener noreferrer">EnableConfigurationProperties</a>, o bien activar el escaneo automático de las clases con propiedades mediante la anotación <a href="https://docs.spring.io/spring-boot/docs/2.2.0.RELEASE/api/org/springframework/boot/context/properties/ConfigurationPropertiesScan.html">ConfigurationPropertiesScan</a> disponible a partir de Spring Boot 2.2.<p></p>
<div><div id="highlighter_493781" class="syntaxhighlighter  java"><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java color1">@SpringBootApplication</code></div><div class="line number2 index1 alt1"><code class="java color1">@EnableConfigurationProperties</code><code class="java plain">(CustomProperties.</code><code class="java keyword">class</code><code class="java plain">)</code></div><div class="line number3 index2 alt2"><code class="java keyword">public</code> <code class="java keyword">class</code> <code class="java plain">DemoApp </code><code class="java keyword">extends</code> <code class="java plain">SpringBootServletInitializer</code></div><div class="line number4 index3 alt1"><code class="java plain">{</code></div></div></td></tr></tbody></table></div></div>
</li>
<li>Le damos valor a la propiedad (<em>custom.value</em>).
<pre>spring.datasource.url=jdbc:mysql://localhost:3306/country
spring.datasource.username=demo
spring.datasource.password=demo
spring.jpa.hibernate.ddl-auto=update
spring.datasource.type= com.zaxxer.hikari.HikariDataSource

spring.mvc.view.prefix= /WEB-INF/jsp/
spring.mvc.view.suffix= .jsp

custom.value = Hello World!!!</pre>
</li>
<li>Para leer la propiedad, inyectamos la clase que la modela e 
invocamos al getter correspondiente. Como ejemplo, se imprime la 
propiedad en el log en <em>CountryController</em>
<div><div id="highlighter_713331" class="syntaxhighlighter  java"><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div><div class="line number31 index30 alt2">31</div><div class="line number32 index31 alt1">32</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java keyword">package</code> <code class="java plain">com.danielme.springboot.controllers;</code></div><div class="line number2 index1 alt1">&nbsp;</div><div class="line number3 index2 alt2"><code class="java keyword">import</code> <code class="java plain">org.slf4j.Logger;</code></div><div class="line number4 index3 alt1"><code class="java keyword">import</code> <code class="java plain">org.slf4j.LoggerFactory;</code></div><div class="line number5 index4 alt2"><code class="java keyword">import</code> <code class="java plain">org.springframework.stereotype.Controller;</code></div><div class="line number6 index5 alt1"><code class="java keyword">import</code> <code class="java plain">org.springframework.ui.Model;</code></div><div class="line number7 index6 alt2"><code class="java keyword">import</code> <code class="java plain">org.springframework.web.bind.annotation.RequestMapping;</code></div><div class="line number8 index7 alt1">&nbsp;</div><div class="line number9 index8 alt2"><code class="java keyword">import</code> <code class="java plain">com.danielme.springboot.CustomProperties;</code></div><div class="line number10 index9 alt1"><code class="java keyword">import</code> <code class="java plain">com.danielme.springboot.services.CountryService;</code></div><div class="line number11 index10 alt2">&nbsp;</div><div class="line number12 index11 alt1"><code class="java color1">@Controller</code></div><div class="line number13 index12 alt2"><code class="java keyword">public</code> <code class="java keyword">class</code> <code class="java plain">CountryController {</code></div><div class="line number14 index13 alt1">&nbsp;</div><div class="line number15 index14 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">private</code> <code class="java keyword">static</code> <code class="java keyword">final</code> <code class="java plain">Logger logger = LoggerFactory.getLogger(CountryController.</code><code class="java keyword">class</code><code class="java plain">);</code></div><div class="line number16 index15 alt1">&nbsp;</div><div class="line number17 index16 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">private</code> <code class="java keyword">final</code> <code class="java plain">CountryService countryService;</code></div><div class="line number18 index17 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">private</code> <code class="java keyword">final</code> <code class="java plain">CustomProperties customProperties;</code></div><div class="line number19 index18 alt2">&nbsp;</div><div class="line number20 index19 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java plain">CountryController(CountryService countryService,</code></div><div class="line number21 index20 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">CustomProperties customProperties) {</code></div><div class="line number22 index21 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">this</code><code class="java plain">.countryService = countryService;</code></div><div class="line number23 index22 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">this</code><code class="java plain">.customProperties = customProperties;</code></div><div class="line number24 index23 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number25 index24 alt2">&nbsp;</div><div class="line number26 index25 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@RequestMapping</code><code class="java plain">(</code><code class="java string">"/"</code><code class="java plain">)</code></div><div class="line number27 index26 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java plain">String list(Model model) {</code></div><div class="line number28 index27 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">logger.info(customProperties.getValue());</code></div><div class="line number29 index28 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">model.addAttribute(</code><code class="java string">"countriesList"</code><code class="java plain">, countryService.findAll());</code></div><div class="line number30 index29 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">return</code> <code class="java string">"countriesList"</code><code class="java plain">;</code></div><div class="line number31 index30 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number32 index31 alt1"><code class="java plain">}</code></div></div></td></tr></tbody></table></div></div>
</li>
<li>Opcionalmente, si añadimos al pom la siguiente dependencia
<div><div id="highlighter_229306" class="syntaxhighlighter  xml"><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="xml plain">&lt;</code><code class="xml keyword">dependency</code><code class="xml plain">&gt;</code></div><div class="line number2 index1 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;org.springframework.boot&lt;/</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;</code></div><div class="line number3 index2 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;spring-boot-configuration-processor&lt;/</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;</code></div><div class="line number4 index3 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">optional</code><code class="xml plain">&gt;true&lt;/</code><code class="xml keyword">optional</code><code class="xml plain">&gt;</code></div><div class="line number5 index4 alt2"><code class="xml plain">&lt;/</code><code class="xml keyword">dependency</code><code class="xml plain">&gt;</code></div></div></td></tr></tbody></table></div></div>
<p>al compilar el proyecto se creará el fichero <em>/target/classes/META-INF/spring-configuration-metadata.json</em> que detalla las propiedades personalizadas que vayamos añadiendo</p>
<pre>{
  "groups": [
    {
      "name": "custom",
      "type": "com.danielme.springboot.CustomProperties",
      "sourceType": "com.danielme.springboot.CustomProperties"
    }
  ],
  "properties": [
    {
      "name": "custom.value",
      "type": "java.lang.String",
      "sourceType": "com.danielme.springboot.CustomProperties"
    }
  ],
  "hints": []
}
</pre>
</li>
</ol>
<h3>Código de ejemplo</h3>
<p align="JUSTIFY">El proyecto completo para el presente tutorial y también <a href="https://danielme.com/2018/11/26/testing-en-spring-boot-con-junit-45-mockito-mockmvc-rest-assured-bases-de-datos-embebidas/">Testing en Spring Boot con JUnit 4\5. Mockito, MockMvc, REST Assured, bases de datos embebidas</a> se encuentra <a href="https://github.com/danielme-com/spring-boot-web-spring-data-jpa" target="_blank" rel="noopener noreferrer">disponible en GitHub</a>. Para más información sobre cómo utilizar GitHub, consultar <a href="https://danielme.com/2013/08/07/importar-repositorios-de-github-con-git-o-eclipse">este artículo</a>.</p>
<h3>Otros tutoriales relacionados con Spring</h3>
<p><a href="https://danielme.com/2019/03/20/spring-rest-basic-spring-security/">Spring REST: Securización BASIC y JDBC con Spring Security</a><br>
<br>
<a href="https://danielme.com/2019/03/02/spring-boot-gestion-de-errores-en-aplicaciones-web-y-rest/">Spring Boot: Gestión de errores en aplicaciones web y REST</a><br>
<br>
<a href="https://danielme.com/2018/11/26/testing-en-spring-boot-con-junit-45-mockito-mockmvc-rest-assured-bases-de-datos-embebidas/">Testing en Spring Boot con JUnit 4\5. Mockito, MockMvc, REST Assured, bases de datos embebidas</a><br>
</p>
<p><a href="https://danielme.com/2017/10/02/spring-jdbc-template-simplificando-el-uso-de-sql/">Spring JDBC Template: simplificando el uso de SQL</a></p>
<p><a href="https://danielme.com/2014/02/08/persistencia-en-bd-con-spring-data-jpa/">Persistencia en BD con Spring Data JPA</a></p>
<p><a href="https://danielme.com/2013/06/19/persistencia-bd-con-spring-integrando-jpa-c3p0-hibernate-y-ehcache/">Persistencia en BD con Spring: Integrando JPA, c3p0, Hibernate y EHCache</a></p>
<p><a href="https://danielme.com/2017/07/17/tutorial-spring-testing-junit-4/">Testing Spring con JUnit 4</a></p>
<p><a href="https://danielme.com/2012/07/25/ficheros-properties-en-spring-ioc/">Ficheros .properties en Spring IoC</a></p>
<p><a href="https://click.linksynergy.com/fs-bin/click?id=OZ02PWh8Q04&amp;offerid=467035.271&amp;subid=0&amp;type=4"><img alt="Master Pyhton, Java, Scala or Ruby" src="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/show.jpg" scale="0" border="0"></a></p>
<div id="jp-post-flair" class="sharedaddy sd-like-enabled sd-sharing-enabled"><div class="sharedaddy sd-sharing-enabled"><div class="robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing"><h3 class="sd-title">Share this:</h3><div class="sd-content"><ul data-sharing-events-added="true"><li class="share-twitter"><a rel="nofollow noopener noreferrer" data-shared="sharing-twitter-5171" class="share-twitter sd-button share-icon" href="https://danielme.com/2018/02/21/tutorial-spring-boot-web-spring-data-jpa/?share=twitter&amp;nb=1" target="_blank" title="Haz clic para compartir en Twitter"><span>Twitter</span></a></li><li class="share-facebook"><a rel="nofollow noopener noreferrer" data-shared="sharing-facebook-5171" class="share-facebook sd-button share-icon" href="https://danielme.com/2018/02/21/tutorial-spring-boot-web-spring-data-jpa/?share=facebook&amp;nb=1" target="_blank" title="Haz clic para compartir en Facebook"><span>Facebook</span></a></li><li class="share-linkedin"><a rel="nofollow noopener noreferrer" data-shared="sharing-linkedin-5171" class="share-linkedin sd-button share-icon" href="https://danielme.com/2018/02/21/tutorial-spring-boot-web-spring-data-jpa/?share=linkedin&amp;nb=1" target="_blank" title="Haz clic para compartir en LinkedIn"><span>LinkedIn</span></a></li><li class="share-jetpack-whatsapp"><a rel="nofollow noopener noreferrer" data-shared="" class="share-jetpack-whatsapp sd-button share-icon" href="https://danielme.com/2018/02/21/tutorial-spring-boot-web-spring-data-jpa/?share=jetpack-whatsapp&amp;nb=1" target="_blank" title="Haz clic para compartir en WhatsApp"><span>WhatsApp</span></a></li><li class="share-telegram"><a rel="nofollow noopener noreferrer" data-shared="" class="share-telegram sd-button share-icon" href="https://danielme.com/2018/02/21/tutorial-spring-boot-web-spring-data-jpa/?share=telegram&amp;nb=1" target="_blank" title="Haz clic para compartir en Telegram"><span>Telegram</span></a></li><li class="share-end"></li></ul></div></div></div><div class="sharedaddy sd-block sd-like jetpack-likes-widget-wrapper jetpack-likes-widget-loaded" id="like-post-wrapper-32273083-5171-6123ca5819b52" data-src="//widgets.wp.com/likes/index.html?ver=20210818#blog_id=32273083&amp;post_id=5171&amp;origin=danielmedotcom.wordpress.com&amp;obj_id=32273083-5171-6123ca5819b52&amp;domain=danielme.com" data-name="like-post-frame-32273083-5171-6123ca5819b52" data-title="Me gusta o Compartir"><h3 class="sd-title">Me gusta esto:</h3><div class="likes-widget-placeholder post-likes-widget-placeholder" style="height: 55px; display: none;"><span class="button"><span>Me gusta</span></span> <span class="loading">Cargando...</span></div><iframe class="post-likes-widget jetpack-likes-widget" name="like-post-frame-32273083-5171-6123ca5819b52" src="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/index.htm" title="Me gusta o Compartir" width="100%" height="55px" frameborder="0"></iframe><span class="sd-text-color"></span><a class="sd-link-color"></a></div>
<div id="jp-relatedposts" class="jp-relatedposts" style="display: block;">
	<h3 class="jp-relatedposts-headline"><em>Relacionado</em></h3>
<div class="jp-relatedposts-items jp-relatedposts-items-minimal jp-relatedposts-grid "><p class="jp-relatedposts-post jp-relatedposts-post0" data-post-id="3605" data-post-format="false"><span class="jp-relatedposts-post-title"><a class="jp-relatedposts-post-a" href="https://danielme.com/2014/02/08/persistencia-en-bd-con-spring-data-jpa/?relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=0&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=0&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=0&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=0&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=0&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=0&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=0&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=0&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=0&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=0&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=0&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=0&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=0&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=0&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=0&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=0&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=0&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=0&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=0&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=0&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=0&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=0&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=0&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=0&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=0&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=0&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=0&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=0" title="Persistencia en BD con Spring Data JPA (I): Primeros&nbsp;pasos" data-origin="5171" data-position="0">Persistencia en BD con Spring Data JPA (I): Primeros&nbsp;pasos</a></span></p><p class="jp-relatedposts-post jp-relatedposts-post1" data-post-id="2588" data-post-format="false"><span class="jp-relatedposts-post-title"><a class="jp-relatedposts-post-a" href="https://danielme.com/2013/06/19/persistencia-bd-con-spring-integrando-jpa-c3p0-hibernate-y-ehcache/?relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=1&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=1&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=1&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=1&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=1&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=1&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=1&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=1&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=1&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=1&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=1&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=1&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=1&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=1&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=1&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=1&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=1&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=1&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=1&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=1&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=1&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=1&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=1&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=1&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=1&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=1&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=1&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=1" title="Persistencia en BD con Spring: Integrando JPA, c3p0, Hibernate y&nbsp;EHCache" data-origin="5171" data-position="1">Persistencia en BD con Spring: Integrando JPA, c3p0, Hibernate y&nbsp;EHCache</a></span></p><p class="jp-relatedposts-post jp-relatedposts-post2" data-post-id="3304" data-post-format="false"><span class="jp-relatedposts-post-title"><a class="jp-relatedposts-post-a" href="https://danielme.com/2013/11/04/integrando-struts-2-y-spring-ioc/?relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=2&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=2&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=2&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=2&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=2&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=2&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=2&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=2&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=2&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=2&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=2&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=2&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=2&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=2&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=2&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=2&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=2&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=2&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=2&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=2&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=2&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=2&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=2&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=2&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=2&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=2&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=2&amp;relatedposts_hit=1&amp;relatedposts_origin=5171&amp;relatedposts_position=2" title="Integrando Struts 2 y Spring&nbsp;IoC" data-origin="5171" data-position="2">Integrando Struts 2 y Spring&nbsp;IoC</a></span></p></div></div></div>			</ul></div><!-- .entry-content -->

	<footer class="entry-footer">
				<span class="cat-links">
			Publicado en <a href="https://danielme.com/category/java-jee/" rel="category tag">Java-JEE</a>		</span>
					</footer><!-- .entry-footer -->

	</article><!-- #post-## -->

			
	<nav class="navigation post-navigation" role="navigation" aria-label="Entradas">
		<h2 class="screen-reader-text">Navegador de artículos</h2>
		<div class="nav-links"><div class="nav-previous"><a href="https://danielme.com/2018/01/03/hibernatejpa-relaciones-y-atributos-lazy-bytecode-enhacement/" rel="prev"><span class="meta-nav">‹ Previous</span>JPA e Hibernate: relaciones y atributos Lazy. Bytecode&nbsp;enhancement.</a></div><div class="nav-next"><a href="https://danielme.com/2018/05/13/diseno-android-formulario-en-alertdialog-con-fragment/" rel="next"><span class="meta-nav">Next ›</span>Diseño Android: Formulario en cuadro de diálogo con&nbsp;Fragment</a></div></div>
	</nav>
			
<div id="comments" class="comments-area">

	
			<h2 class="comments-title">
			4 comentarios sobre “<span>Introducción a Spring Boot: Aplicación Web con servicios REST y Spring Data&nbsp;JPA</span>”		</h2><!-- .comments-title -->

		
		<ol class="comment-list">
					<li id="comment-4924" class="comment even thread-even depth-1 parent highlander-comment">
			<article id="div-comment-4924" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt="" src="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/b4b48d45dab7bd691c9c339c88efcd21.png" class="avatar avatar-60 grav-hashed grav-hijack" originals="60" src-orig="https://2.gravatar.com/avatar/b4b48d45dab7bd691c9c339c88efcd21?s=60&amp;d=https%3A%2F%2F2.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D60&amp;r=G" scale="1" id="grav-b4b48d45dab7bd691c9c339c88efcd21-0" width="60" height="60">						<b class="fn">Miguel</b> <span class="says">dice:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://danielme.com/2018/02/21/tutorial-spring-boot-web-spring-data-jpa/#comment-4924"><time datetime="2019-03-15T10:15:14+01:00">15/03/2019 a las 10:15</time></a>					</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Hola Daniel, muy bueno el articulo.</p>
<p>¿como podriamos securizarlo?</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://danielme.com/2018/02/21/tutorial-spring-boot-web-spring-data-jpa/?replytocom=4924#respond" data-commentid="4924" data-postid="5171" data-belowelement="div-comment-4924" data-respondelement="respond" data-replyto="Responder a Miguel" aria-label="Responder a Miguel">Responder</a></div>			</article><!-- .comment-body -->
		<ol class="children">
		<li id="comment-4942" class="comment byuser comment-author-danielmedotcom bypostauthor odd alt depth-2 highlander-comment">
			<article id="div-comment-4942" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt="" src="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/c14ec20aaf7a495a1d2ba6b20c4cdcd2.png" class="avatar avatar-60 grav-hashed grav-hijack" originals="60" src-orig="https://0.gravatar.com/avatar/c14ec20aaf7a495a1d2ba6b20c4cdcd2?s=60&amp;d=https%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D60&amp;r=G" scale="1" id="grav-c14ec20aaf7a495a1d2ba6b20c4cdcd2-0" width="60" height="60">						<b class="fn"><a href="https://danielmedotcom.wordpress.com/" rel="external nofollow ugc" class="url">danielme.com</a></b> <span class="says">dice:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://danielme.com/2018/02/21/tutorial-spring-boot-web-spring-data-jpa/#comment-4942"><time datetime="2019-03-20T19:52:28+01:00">20/03/2019 a las 19:52</time></a>					</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Acabo de publicar <a href="https://danielme.com/2019/03/20/spring-rest-basic-spring-security/">Spring REST: Securización BASIC y JDBC con Spring Security</a>.</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://danielme.com/2018/02/21/tutorial-spring-boot-web-spring-data-jpa/?replytocom=4942#respond" data-commentid="4942" data-postid="5171" data-belowelement="div-comment-4942" data-respondelement="respond" data-replyto="Responder a danielme.com" aria-label="Responder a danielme.com">Responder</a></div>			</article><!-- .comment-body -->
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li id="comment-5413" class="comment even thread-odd thread-alt depth-1 parent highlander-comment">
			<article id="div-comment-5413" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt="" src="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/e72c23bcffa764d991d81c58c149188f.png" class="avatar avatar-60 grav-hashed grav-hijack" originals="60" src-orig="https://2.gravatar.com/avatar/e72c23bcffa764d991d81c58c149188f?s=60&amp;d=https%3A%2F%2F2.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D60&amp;r=G" scale="1" id="grav-e72c23bcffa764d991d81c58c149188f-0" width="60" height="60">						<b class="fn"><a href="https://www.twitch.tv/videos/732415076" rel="external nofollow ugc" class="url">mrboogie</a></b> <span class="says">dice:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://danielme.com/2018/02/21/tutorial-spring-boot-web-spring-data-jpa/#comment-5413"><time datetime="2020-10-08T16:13:21+01:00">08/10/2020 a las 16:13</time></a>					</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Buenas daniel, excelente artículo. Aunque no he entendido como 
has llegado a introducir datos en la base de datos antes de ejecutarla.<br>
Un saludo.</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://danielme.com/2018/02/21/tutorial-spring-boot-web-spring-data-jpa/?replytocom=5413#respond" data-commentid="5413" data-postid="5171" data-belowelement="div-comment-5413" data-respondelement="respond" data-replyto="Responder a mrboogie" aria-label="Responder a mrboogie">Responder</a></div>			</article><!-- .comment-body -->
		<ol class="children">
		<li id="comment-5453" class="comment byuser comment-author-danielmedotcom bypostauthor odd alt depth-2 highlander-comment">
			<article id="div-comment-5453" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt="" src="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/c14ec20aaf7a495a1d2ba6b20c4cdcd2.png" class="avatar avatar-60 grav-hashed grav-hijack" originals="60" src-orig="https://0.gravatar.com/avatar/c14ec20aaf7a495a1d2ba6b20c4cdcd2?s=60&amp;d=https%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D60&amp;r=G" scale="1" id="grav-c14ec20aaf7a495a1d2ba6b20c4cdcd2-1" width="60" height="60">						<b class="fn"><a href="https://danielmedotcom.wordpress.com/" rel="external nofollow ugc" class="url">danielme.com</a></b> <span class="says">dice:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://danielme.com/2018/02/21/tutorial-spring-boot-web-spring-data-jpa/#comment-5453"><time datetime="2020-10-25T13:08:26+01:00">25/10/2020 a las 13:08</time></a>					</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Los datos de ejemplo que uso en el tutorial están en el script 
/src/test/resources/test-mysql.sql. He actualizado el artículo para 
aclararlo, y también he mejorado la imagen de Docker para que ya incluya
 esos datos.</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://danielme.com/2018/02/21/tutorial-spring-boot-web-spring-data-jpa/?replytocom=5453#respond" data-commentid="5453" data-postid="5171" data-belowelement="div-comment-5453" data-respondelement="respond" data-replyto="Responder a danielme.com" aria-label="Responder a danielme.com">Responder</a></div>			</article><!-- .comment-body -->
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		
	
	
		<div id="respond" class="comment-respond js">
		<h3 id="reply-title" class="comment-reply-title">Responder <small><a rel="nofollow" id="cancel-comment-reply-link" href="https://danielme.com/2018/02/21/tutorial-spring-boot-web-spring-data-jpa/#respond" style="display:none;">Cancelar respuesta</a></small></h3><form action="https://danielme.com/wp-comments-post.php" method="post" id="commentform" class="comment-form" novalidate=""><input type="hidden" id="highlander_comment_nonce" name="highlander_comment_nonce" value="946e5f01bf"><input type="hidden" name="_wp_http_referer" value="/2018/02/21/tutorial-spring-boot-web-spring-data-jpa/">
<input type="hidden" name="hc_post_as" id="hc_post_as" value="guest">

<div class="comment-form-field comment-textarea">
	
	<div id="comment-form-comment"><textarea aria-hidden="true" tabindex="-1" style="position: absolute; inset: -999px auto auto 0px; border: 0px none; padding: 0px; box-sizing: content-box; overflow-wrap: break-word; height: 0px !important; min-height: 0px !important; overflow: hidden; transition: none 0s ease 0s; font-family: Arial, Helvetica, Tahoma, Verdana, sans-serif; font-size: 14px; font-weight: 400; font-style: normal; letter-spacing: 0px; text-transform: none; text-decoration: rgba(0, 0, 0, 0.7); word-spacing: 0px; text-indent: 0px; line-height: normal; width: 633.667px;" class="autosizejs ">Introduce aquí tu comentario...  </textarea><textarea id="comment" name="comment" title="Introduce aquí tu comentario...  " placeholder="Introduce aquí tu comentario...  " style="height: 37px; overflow: hidden; overflow-wrap: break-word; resize: none;"></textarea></div>
</div>

<div id="comment-form-identity" style="display: none;">
	<div id="comment-form-nascar">
		<p>Introduce tus datos o haz clic en un icono para iniciar sesión:</p>
		<ul>
			<li class="selected" style="display:none;">
				<a href="#comment-form-guest" id="postas-guest" class="nascar-signin-link" title="Login via Invitado">
									</a>
			</li>
			<li>
				<a href="#comment-form-load-service:WordPress.com" id="postas-wordpress" class="nascar-signin-link" title="Login via WordPress.com">
					<svg xmlns="http://www.w3.org/2000/svg" role="presentation" viewBox="0 0 24 24"><rect x="0" fill="none" width="24" height="24"></rect><g><path fill="#0087be" d="M12.158 12.786l-2.698 7.84c.806.236 1.657.365 2.54.365 1.047 0 2.05-.18 2.986-.51-.024-.037-.046-.078-.065-.123l-2.762-7.57zM3.008 12c0 3.56 2.07 6.634 5.068 8.092L3.788 8.342c-.5 1.117-.78 2.354-.78 3.658zm15.06-.454c0-1.112-.398-1.88-.74-2.48-.456-.74-.883-1.368-.883-2.11 0-.825.627-1.595 1.51-1.595.04 0 .078.006.116.008-1.598-1.464-3.73-2.36-6.07-2.36-3.14 0-5.904 1.613-7.512 4.053.21.008.41.012.58.012.94 0 2.395-.114 2.395-.114.484-.028.54.684.057.74 0 0-.487.058-1.03.086l3.275 9.74 1.968-5.902-1.4-3.838c-.485-.028-.944-.085-.944-.085-.486-.03-.43-.77.056-.742 0 0 1.484.114 2.368.114.94 0 2.397-.114 2.397-.114.486-.028.543.684.058.74 0 0-.488.058-1.03.086l3.25 9.665.897-2.997c.456-1.17.684-2.137.684-2.907zm1.82-3.86c.04.286.06.593.06.924 0 .912-.17 1.938-.683 3.22l-2.746 7.94c2.672-1.558 4.47-4.454 4.47-7.77 0-1.564-.4-3.033-1.1-4.314zM12 22C6.486 22 2 17.514 2 12S6.486 2 12 2s10 4.486 10 10-4.486 10-10 10z"></path></g></svg>				</a>
			</li>
			<li>
				<a href="#comment-form-load-service:Twitter" id="postas-twitter" class="nascar-signin-link" title="Login via Twitter">
					<svg xmlns="http://www.w3.org/2000/svg" role="presentation" viewBox="0 0 24 24"><rect x="0" fill="none" width="24" height="24"></rect><g><path fill="#1DA1F2" d="M22.23 5.924c-.736.326-1.527.547-2.357.646.847-.508 1.498-1.312 1.804-2.27-.793.47-1.67.812-2.606.996C18.325 4.498 17.258 4 16.078 4c-2.266 0-4.103 1.837-4.103 4.103 0 .322.036.635.106.935-3.41-.17-6.433-1.804-8.457-4.287-.353.607-.556 1.312-.556 2.064 0 1.424.724 2.68 1.825 3.415-.673-.022-1.305-.207-1.86-.514v.052c0 1.988 1.415 3.647 3.293 4.023-.344.095-.707.145-1.08.145-.265 0-.522-.026-.773-.074.522 1.63 2.038 2.817 3.833 2.85-1.404 1.1-3.174 1.757-5.096 1.757-.332 0-.66-.02-.98-.057 1.816 1.164 3.973 1.843 6.29 1.843 7.547 0 11.675-6.252 11.675-11.675 0-.178-.004-.355-.012-.53.802-.578 1.497-1.3 2.047-2.124z"></path></g></svg>				</a>
			</li>
			<li>
				<a href="#comment-form-load-service:Facebook" id="postas-facebook" class="nascar-signin-link" title="Login via Facebook">
					<svg xmlns="http://www.w3.org/2000/svg" role="presentation" viewBox="0 0 24 24"><rect x="0" fill="none" width="24" height="24"></rect><g><path fill="#3B5998" d="M20.007 3H3.993C3.445 3 3 3.445 3 3.993v16.013c0 .55.445.994.993.994h8.62v-6.97H10.27V11.31h2.346V9.31c0-2.325 1.42-3.59 3.494-3.59.993 0 1.847.073 2.096.106v2.43h-1.438c-1.128 0-1.346.537-1.346 1.324v1.734h2.69l-.35 2.717h-2.34V21h4.587c.548 0 .993-.445.993-.993V3.993c0-.548-.445-.993-.993-.993z"></path></g></svg>				</a>
			</li>
		</ul>
	</div>

	<div id="comment-form-guest" class="comment-form-service selected">
		<div class="comment-form-padder">
			<div class="comment-form-avatar">
<a href="https://gravatar.com/site/signup/" target="_blank">				<img src="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/ad516503a11cd5ca435acc9bb6523536.png" alt="Gravatar" class="no-grav grav-hashed grav-hijack" originals="25" src-orig="https://1.gravatar.com/avatar/ad516503a11cd5ca435acc9bb6523536?s=25" scale="1" id="grav-ad516503a11cd5ca435acc9bb6523536-0" width="25">
</a>			</div>

				<div class="comment-form-fields">
				<div class="comment-form-field comment-form-email">
					<label for="email">Correo electrónico <span class="required">(obligatorio)</span> <span class="nopublish">(La dirección no se hará pública)</span></label>
					<div class="comment-form-input"><input id="email" name="email" type="email"></div>
				</div>
				<div class="comment-form-field comment-form-author">
					<label for="author">Nombre <span class="required">(obligatorio)</span></label>
					<div class="comment-form-input"><input id="author" name="author" type="text"></div>
				</div>
				<div class="comment-form-field comment-form-url">
					<label for="url">Página web</label>
					<div class="comment-form-input"><input id="url" name="url" type="url"></div>
				</div>
			</div>
			
		</div>
	</div>

	<div id="comment-form-wordpress" class="comment-form-service">
		<div class="comment-form-padder">
			<div class="comment-form-avatar">
				<img src="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/ad516503a11cd5ca435acc9bb6523536.png" alt="Logo de WordPress.com" class="no-grav grav-hashed grav-hijack" originals="25" scale="1" id="grav-ad516503a11cd5ca435acc9bb6523536-1" width="25">
			</div>

				<div class="comment-form-fields">
				<input type="hidden" name="wp_avatar" id="wordpress-avatar" class="comment-meta-wordpress" value="">
				<input type="hidden" name="wp_user_id" id="wordpress-user_id" class="comment-meta-wordpress" value="">
				<input type="hidden" name="wp_access_token" id="wordpress-access_token" class="comment-meta-wordpress" value="">
						<p class="comment-form-posting-as pa-wordpress">
			<strong></strong>
			Estás comentando usando tu cuenta de WordPress.com.			<span class="comment-form-log-out">
				(&nbsp;<a href="javascript:HighlanderComments.doExternalLogout( 'wordpress' );">Salir</a>&nbsp;/&nbsp;
				<a href="#" onclick="javascript:HighlanderComments.switchAccount();return false;">Cambiar</a>&nbsp;)
			</span>
			<span class="pa-icon"><svg xmlns="http://www.w3.org/2000/svg" role="presentation" viewBox="0 0 24 24"><rect x="0" fill="none" width="24" height="24"></rect><g><path fill="#0087be" d="M12.158 12.786l-2.698 7.84c.806.236 1.657.365 2.54.365 1.047 0 2.05-.18 2.986-.51-.024-.037-.046-.078-.065-.123l-2.762-7.57zM3.008 12c0 3.56 2.07 6.634 5.068 8.092L3.788 8.342c-.5 1.117-.78 2.354-.78 3.658zm15.06-.454c0-1.112-.398-1.88-.74-2.48-.456-.74-.883-1.368-.883-2.11 0-.825.627-1.595 1.51-1.595.04 0 .078.006.116.008-1.598-1.464-3.73-2.36-6.07-2.36-3.14 0-5.904 1.613-7.512 4.053.21.008.41.012.58.012.94 0 2.395-.114 2.395-.114.484-.028.54.684.057.74 0 0-.487.058-1.03.086l3.275 9.74 1.968-5.902-1.4-3.838c-.485-.028-.944-.085-.944-.085-.486-.03-.43-.77.056-.742 0 0 1.484.114 2.368.114.94 0 2.397-.114 2.397-.114.486-.028.543.684.058.74 0 0-.488.058-1.03.086l3.25 9.665.897-2.997c.456-1.17.684-2.137.684-2.907zm1.82-3.86c.04.286.06.593.06.924 0 .912-.17 1.938-.683 3.22l-2.746 7.94c2.672-1.558 4.47-4.454 4.47-7.77 0-1.564-.4-3.033-1.1-4.314zM12 22C6.486 22 2 17.514 2 12S6.486 2 12 2s10 4.486 10 10-4.486 10-10 10z"></path></g></svg></span>
		</p>
					</div>
	
		</div>
	</div>

	<div id="comment-form-googleplus" class="comment-form-service">
		<div class="comment-form-padder">
			<div class="comment-form-avatar">
				<img src="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/ad516503a11cd5ca435acc9bb6523536.png" alt="Google photo" class="no-grav grav-hashed grav-hijack" originals="25" scale="1" id="grav-ad516503a11cd5ca435acc9bb6523536-2" width="25">
			</div>

				<div class="comment-form-fields">
				<input type="hidden" name="googleplus_avatar" id="googleplus-avatar" class="comment-meta-googleplus" value="">
				<input type="hidden" name="googleplus_user_id" id="googleplus-user_id" class="comment-meta-googleplus" value="">
				<input type="hidden" name="googleplus_access_token" id="googleplus-access_token" class="comment-meta-googleplus" value="">
						<p class="comment-form-posting-as pa-googleplus">
			<strong></strong>
			Estás comentando usando tu cuenta de Google.			<span class="comment-form-log-out">
				(&nbsp;<a href="javascript:HighlanderComments.doExternalLogout( 'googleplus' );">Salir</a>&nbsp;/&nbsp;
				<a href="#" onclick="javascript:HighlanderComments.switchAccount();return false;">Cambiar</a>&nbsp;)
			</span>
			<span class="pa-icon"><svg xmlns="http://www.w3.org/2000/svg" role="presentation" x="0px" y="0px" viewBox="0 0 60 60"><path fill="#519bf7" d="M56.3,30c0,-1.6 -0.2,-3.4 -0.6,-5h-3.1H42.2H30v10.6h14.8C44,39.3 42,42 39.1,43.9l8.8,6.8C53,46 56.3,39 56.3,30z"></path><path fill="#3db366" d="M30,57.5c6.7,0 13.1,-2.4 17.9,-6.8l-8.8,-6.8c-2.5,1.6 -5.6,2.4 -9.1,2.4c-7.2,0 -13.3,-4.7 -15.4,-11.2l-9.3,7.1C9.8,51.3 19.1,57.5 30,57.5z"></path><path fill="#fdc600" d="M5.3,42.2l9.3,-7.1c-0.5,-1.6 -0.8,-3.3 -0.8,-5.1s0.3,-3.5 0.8,-5.1l-9.3,-7.1C3.5,21.5 2.5,25.6 2.5,30S3.5,38.5 5.3,42.2z"></path><path fill="#f15b44" d="M40.1,17.4l8,-8C43.3,5.1 37,2.5 30,2.5C19.1,2.5 9.8,8.7 5.3,17.8l9.3,7.1c2.1,-6.5 8.2,-11.1 15.4,-11.1C33.9,13.7 37.4,15.1 40.1,17.4z"></path></svg></span>
		</p>
					</div>
	
		</div>
	</div>

	<div id="comment-form-twitter" class="comment-form-service">
		<div class="comment-form-padder">
			<div class="comment-form-avatar">
				<img src="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/ad516503a11cd5ca435acc9bb6523536.png" alt="Imagen de Twitter" class="no-grav grav-hashed grav-hijack" originals="25" scale="1" id="grav-ad516503a11cd5ca435acc9bb6523536-3" width="25">
			</div>

				<div class="comment-form-fields">
				<input type="hidden" name="twitter_avatar" id="twitter-avatar" class="comment-meta-twitter" value="">
				<input type="hidden" name="twitter_user_id" id="twitter-user_id" class="comment-meta-twitter" value="">
				<input type="hidden" name="twitter_access_token" id="twitter-access_token" class="comment-meta-twitter" value="">
						<p class="comment-form-posting-as pa-twitter">
			<strong></strong>
			Estás comentando usando tu cuenta de Twitter.			<span class="comment-form-log-out">
				(&nbsp;<a href="javascript:HighlanderComments.doExternalLogout( 'twitter' );">Salir</a>&nbsp;/&nbsp;
				<a href="#" onclick="javascript:HighlanderComments.switchAccount();return false;">Cambiar</a>&nbsp;)
			</span>
			<span class="pa-icon"><svg xmlns="http://www.w3.org/2000/svg" role="presentation" viewBox="0 0 24 24"><rect x="0" fill="none" width="24" height="24"></rect><g><path fill="#1DA1F2" d="M22.23 5.924c-.736.326-1.527.547-2.357.646.847-.508 1.498-1.312 1.804-2.27-.793.47-1.67.812-2.606.996C18.325 4.498 17.258 4 16.078 4c-2.266 0-4.103 1.837-4.103 4.103 0 .322.036.635.106.935-3.41-.17-6.433-1.804-8.457-4.287-.353.607-.556 1.312-.556 2.064 0 1.424.724 2.68 1.825 3.415-.673-.022-1.305-.207-1.86-.514v.052c0 1.988 1.415 3.647 3.293 4.023-.344.095-.707.145-1.08.145-.265 0-.522-.026-.773-.074.522 1.63 2.038 2.817 3.833 2.85-1.404 1.1-3.174 1.757-5.096 1.757-.332 0-.66-.02-.98-.057 1.816 1.164 3.973 1.843 6.29 1.843 7.547 0 11.675-6.252 11.675-11.675 0-.178-.004-.355-.012-.53.802-.578 1.497-1.3 2.047-2.124z"></path></g></svg></span>
		</p>
					</div>
	
		</div>
	</div>

	<div id="comment-form-facebook" class="comment-form-service">
		<div class="comment-form-padder">
			<div class="comment-form-avatar">
				<img src="" alt="Foto de Facebook" class="no-grav" width="25">
			</div>

				<div class="comment-form-fields">
				<input type="hidden" name="fb_avatar" id="facebook-avatar" class="comment-meta-facebook" value="">
				<input type="hidden" name="fb_user_id" id="facebook-user_id" class="comment-meta-facebook" value="">
				<input type="hidden" name="fb_access_token" id="facebook-access_token" class="comment-meta-facebook" value="">
						<p class="comment-form-posting-as pa-facebook">
			<strong></strong>
			Estás comentando usando tu cuenta de Facebook.			<span class="comment-form-log-out">
				(&nbsp;<a href="javascript:HighlanderComments.doExternalLogout( 'facebook' );">Salir</a>&nbsp;/&nbsp;
				<a href="#" onclick="javascript:HighlanderComments.switchAccount();return false;">Cambiar</a>&nbsp;)
			</span>
			<span class="pa-icon"><svg xmlns="http://www.w3.org/2000/svg" role="presentation" viewBox="0 0 24 24"><rect x="0" fill="none" width="24" height="24"></rect><g><path fill="#3B5998" d="M20.007 3H3.993C3.445 3 3 3.445 3 3.993v16.013c0 .55.445.994.993.994h8.62v-6.97H10.27V11.31h2.346V9.31c0-2.325 1.42-3.59 3.494-3.59.993 0 1.847.073 2.096.106v2.43h-1.438c-1.128 0-1.346.537-1.346 1.324v1.734h2.69l-.35 2.717h-2.34V21h4.587c.548 0 .993-.445.993-.993V3.993c0-.548-.445-.993-.993-.993z"></path></g></svg></span>
		</p>
					</div>
	
		</div>
	</div>


	<div id="comment-form-load-service" class="comment-form-service">
		<div class="comment-form-posting-as-cancel"><a href="javascript:HighlanderComments.cancelExternalWindow();">Cancelar</a></div>
		<p>Conectando a %s</p>
	</div>

</div>

<script type="text/javascript">
var highlander_expando_javascript = function () {

	function hide( sel ) {
		var el = document.querySelector( sel );
		if ( el ) {
			el.style.setProperty( 'display', 'none' );
		}
	}

	function show( sel ) {
		var el = document.querySelector( sel );
		if ( el ) {
			el.style.removeProperty( 'display' );
		}
	}

	var input = document.createElement( 'input' );
	var comment = document.querySelector( '#comment' );

	if ( input && comment && 'placeholder' in input ) {
		var label = document.querySelector( '.comment-textarea label' );
		if ( label ) {
			var text = label.textContent;
			label.parentNode.removeChild( label );
			comment.setAttribute( 'placeholder', text );
		}
	}

	// Expando Mode: start small, then auto-resize on first click + text length
	hide( '#comment-form-identity' );
	hide( '#comment-form-subscribe' );
	hide( '#commentform .form-submit' );

	if ( comment ) {
		comment.style.height = '10px';

		var handler = function () {
			comment.style.height = HighlanderComments.initialHeight + 'px';
			show( '#comment-form-identity' );
			show( '#comment-form-subscribe' );
			show( '#commentform .form-submit' );
			HighlanderComments.resizeCallback();

			comment.removeEventListener( 'focus', handler );
		};

		comment.addEventListener( 'focus', handler );
	}
}

if ( document.readyState !== 'loading' ) {
	highlander_expando_javascript();
} else {
	if ( typeof window.jQuery === 'function' ) {
		// Use jQuery's `ready` if available.
		// This solves some scheduling issues between this script and the main highlander script.
		jQuery( document ).ready( highlander_expando_javascript );
	} else {
		// If not available, add a vanilla event listener.
		document.addEventListener( 'DOMContentLoaded', highlander_expando_javascript );
	}
}

</script>

<div id="comment-form-subscribe" style="display: none;">
	<p class="comment-subscription-form"><input type="checkbox" name="subscribe" id="subscribe" value="subscribe" style="width: auto;"> <label class="subscribe-label" id="subscribe-label" for="subscribe" style="display: inline;">Notificarme los nuevos comentarios por correo electrónico.</label></p><p class="post-subscription-form"><input type="checkbox" name="subscribe_blog" id="subscribe_blog" value="subscribe" style="width: auto;"> <label class="subscribe-label" id="subscribe-blog-label" for="subscribe_blog" style="display: inline;">Recibir nuevas entradas por email.</label></p></div>




<p class="form-submit wp-block-button" style="display: none;"><input name="submit" type="submit" id="comment-submit" class="submit wp-block-button__link" value="Publicar comentario"> <input type="hidden" name="comment_post_ID" value="5171" id="comment_post_ID">
<input type="hidden" name="comment_parent" id="comment_parent" value="0">
</p><p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="bc39af369a"></p>
<input type="hidden" name="genseq" value="1629735512">
<textarea name="ak_hp_textarea" cols="45" rows="8" maxlength="100" style="display: none !important;"></textarea><input type="hidden" id="ak_js" name="ak_js" value="1629735512433"></form>	</div><!-- #respond -->
	<div style="clear: both"></div><p class="akismet_comment_form_privacy_notice">Este sitio usa Akismet para reducir el spam. <a href="https://akismet.com/privacy/" target="_blank" rel="nofollow noopener"> Aprende cómo se procesan los datos de tus comentarios </a>.</p>
</div><!-- #comments -->

		
		</main><!-- #main -->
	</div><!-- #primary -->

	<div id="secondary" class="widget-area" role="complementary">
		<aside id="custom_html-2" class="widget_text widget widget_custom_html"><div class="textwidget custom-html-widget"><a target="new" href="https://click.linksynergy.com/fs-bin/click?id=OZ02PWh8Q04&amp;offerid=507388.1395&amp;subid=0&amp;type=4" rel="noopener"><img alt="Cursos de desarrollo" src="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/show_002.png" scale="0" height="230" border="0"></a></div></aside><aside id="blog_subscription-2" class="widget widget_blog_subscription jetpack_subscription_widget"><h1 class="widget-title"><label for="subscribe-field">Sigue el blog por Email</label></h1>
			<form action="https://subscribe.wordpress.com" method="post" accept-charset="utf-8" id="">
				<p>Introduce tu dirección de correo electrónico para seguir este 
Blog y recibir las notificaciones de las nuevas publicaciones en tu 
buzón de correo electrónico.</p>
				<p id="subscribe-email">
					<label id="subscribe-field-label" for="subscribe-field" class="screen-reader-text">
						Dirección de correo electrónico:					</label>

					<input type="email" name="email" style="width: 95%; padding: 1px 10px" placeholder="Introduce tu dirección de correo electrónico" id="subscribe-field">				</p>

				<p id="subscribe-submit">
                    <input type="hidden" name="action" value="subscribe">
                    <input type="hidden" name="blog_id" value="32273083">
                    <input type="hidden" name="source" value="https://danielme.com/2018/02/21/tutorial-spring-boot-web-spring-data-jpa/">
                    <input type="hidden" name="sub-type" value="widget">
                    <input type="hidden" name="redirect_fragment" value="blog_subscription-2">
					<input type="hidden" id="_wpnonce" name="_wpnonce" value="0ca58d79e2">                    <button type="submit">
	                    Seguir                    </button>
                </p>
            </form>
			
</aside><aside id="top-posts-3" class="widget widget_top-posts"><h1 class="widget-title">Lo más visto</h1><ul>				<li>
					<a href="https://danielme.com/2018/06/30/sql-nativo-con-jpa-e-hibernate/" class="bump-view" data-bump-view="tp">SQL nativo con JPA e Hibernate</a>					</li>
								<li>
					<a href="https://danielme.com/2018/11/26/testing-en-spring-boot-con-junit-45-mockito-mockmvc-rest-assured-bases-de-datos-embebidas/" class="bump-view" data-bump-view="tp">Testing en Spring Boot con JUnit 4\5. Mockito, MockMvc,  REST Assured, bases de datos embebidas.</a>					</li>
								<li>
					<a href="https://danielme.com/2013/04/25/diseno-android-spinner/" class="bump-view" data-bump-view="tp">Diseño Android: Spinner</a>					</li>
								<li>
					<a href="https://danielme.com/2018/12/19/diseno-android-menu-lateral-con-navigation-drawer/" class="bump-view" data-bump-view="tp">Diseño Android: Menu lateral con Navigation Drawer y AndroidX</a>					</li>
								<li>
					<a href="https://danielme.com/2019/03/02/spring-boot-gestion-de-errores-en-aplicaciones-web-y-rest/" class="bump-view" data-bump-view="tp">Spring Boot: Gestión de errores en aplicaciones web y REST</a>					</li>
								<li>
					<a href="https://danielme.com/2017/10/02/spring-jdbc-template-simplificando-el-uso-de-sql/" class="bump-view" data-bump-view="tp">Spring JDBC Template: simplificando el uso de  SQL</a>					</li>
								<li>
					<a href="https://danielme.com/2014/02/08/persistencia-en-bd-con-spring-data-jpa/" class="bump-view" data-bump-view="tp">Persistencia en BD con Spring Data JPA (I): Primeros pasos</a>					</li>
								<li>
					<a href="https://danielme.com/2013/08/07/importar-repositorios-de-github-con-git-o-eclipse/" class="bump-view" data-bump-view="tp">Importar repositorios de GitHub con git, Eclipse y Android Studio \ IntelliJ</a>					</li>
				</ul></aside>
		<aside id="recent-posts-2" class="widget widget_recent_entries">
		<h1 class="widget-title">Últimas entradas</h1>
		<ul>
											<li>
					<a href="https://danielme.com/2021/08/18/curso-jakarta-ee-jpa-con-hibernate-docker-junit5-arquillian-dbunit/">Curso Jakarta EE (20). JPA con Hibernate (3): Docker y pruebas&nbsp;automáticas.</a>
									</li>
											<li>
					<a href="https://danielme.com/2021/08/12/curso-jakarta-ee-jpa-con-hibernate-configuracion-wildfly-datasource-persistencexml-pool/">Curso Jakarta EE 9 (19). JPA con Hibernate (2):&nbsp;Configuración.</a>
									</li>
											<li>
					<a href="https://danielme.com/2021/08/03/curso-jakarta-ee-jpa-con-hibernate-introduccion/">Curso Jakarta EE 9 (18). JPA con Hibernate (1):&nbsp;Introducción.</a>
									</li>
											<li>
					<a href="https://danielme.com/2021/07/29/curso-jakarta-ee-cdi-eventos-observes/">Curso Jakarta EE 9 (17). CDI (6):&nbsp;Eventos</a>
									</li>
											<li>
					<a href="https://danielme.com/2021/07/22/curso-jakarta-ee-cdi-interceptores-decoradores/">Curso Jakarta EE 9 (16). CDI (5): Interceptores y&nbsp;decoradores</a>
									</li>
											<li>
					<a href="https://danielme.com/2021/07/16/curso-jakarta-ee-cdi-4-productores/">Curso Jakarta EE 9 (15). CDI (4):&nbsp;Productores</a>
									</li>
											<li>
					<a href="https://danielme.com/2021/07/05/curso-jakarta-ee-cdi-calificadores-qualifiers-named-alternatives/">Curso Jakarta EE 9 (14). CDI (3): Calificadores&nbsp;(Qualifiers)</a>
									</li>
											<li>
					<a href="https://danielme.com/2021/06/22/curso-jakarta-ee-cdi-ambitos-scopes-proxies/">Curso Jakarta EE 9 (13). CDI (2) Ámbitos&nbsp;(scopes)</a>
									</li>
					</ul>

		</aside><aside id="twitter_timeline-2" class="widget widget_twitter_timeline"><h1 class="widget-title">Sígueme en Twitter</h1><iframe id="twitter-widget-0" scrolling="no" allowtransparency="true" allowfullscreen="true" class="twitter-timeline twitter-timeline-rendered" style="position: static; visibility: visible; display: inline-block; width: 100%; height: 600px; padding: 0px; border: medium none; max-width: 100%; min-width: 180px; margin-top: 0px; margin-bottom: 0px; min-height: 200px;" data-widget-id="profile:danielme_com" title="Cronología de Twitter" frameborder="0"></iframe></aside><aside id="text-2" class="widget widget_text">			<div class="textwidget"><hr>
<p align="CENTER"><a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.es_CO" rel="license noopener" target="_blank"><img style="border-width:0;" src="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/88x31.png" alt="Licencia Creative Commons" scale="0"></a>
</p>
Las entradas publicadas en este blog están bajo una  <a rel="license" href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.es_CO">Licencia Creative Commons Atribución-NoComercial-SinDerivadas 3.0 Unported</a>.
<br>
Todas las marcas y logotipos son propiedad de las respectivas compañías y se utilizan con fines informativos.</div>
		</aside>	</div><!-- #secondary -->

	</div><!-- #content -->

	<footer id="colophon" class="site-footer" role="contentinfo">
					<div class="footer-widgets clear">
									<div class="widget-area">
						<aside id="text-3" class="widget widget_text">			<div class="textwidget"><p><b>Copyright © 2012-2021 By <a href="http://danielmedina.info/">Daniel Medina</a></b></p>
</div>
		</aside>					</div><!-- .widget-area -->
				
				
							</div><!-- .sidebar-widgets -->
				<div class="site-info-wrapper clear">
						<div class="site-info">
				<a href="https://wordpress.com/?ref=footer_blog" rel="nofollow">Blog de WordPress.com.</a>
				
							</div><!-- .site-info -->
		</div><!-- .site-info-wrapper -->
	</footer><!-- #colophon -->
</div><!-- #page -->

<!--  -->
<script src="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/gprofiles.js" id="grofiles-cards-js"></script>
<script id="wpgroho-js-extra">
var WPGroHo = {"my_hash":""};
</script>
<script crossorigin="anonymous" type="text/javascript" src="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/wpgroho.js"></script>

	<script>
		// Initialize and attach hovercards to all gravatars
		( function() {
			function init() {
				if ( typeof Gravatar === 'undefined' ) {
					return;
				}

				if ( typeof Gravatar.init !== 'function' ) {
					return;
				}

				Gravatar.profile_cb = function ( hash, id ) {
					WPGroHo.syncProfileData( hash, id );
				};

				Gravatar.my_hash = WPGroHo.my_hash;
				Gravatar.init( 'body', '#wp-admin-bar-my-account' );
			}

			if ( document.readyState !== 'loading' ) {
				init();
			} else {
				document.addEventListener( 'DOMContentLoaded', init );
			}
		} )();
	</script>

		<div style="display:none">
	<div class="grofile-hash-map-b4b48d45dab7bd691c9c339c88efcd21">
	</div>
	<div class="grofile-hash-map-c14ec20aaf7a495a1d2ba6b20c4cdcd2">
	</div>
	<div class="grofile-hash-map-e72c23bcffa764d991d81c58c149188f">
	</div>
	</div>
<script id="highlander-comments-js-extra">
var HighlanderComments = {"loggingInText":"Iniciando sesi\u00f3n\u2026","submittingText":"Publicando comentario\u2026","postCommentText":"Publicar comentario","connectingToText":"Conectando a %s","commentingAsText":"%1$s: Est\u00e1s comentando usando tu cuenta de %2$s.","logoutText":"Cerrar sesi\u00f3n","loginText":"Acceder","connectURL":"https:\/\/danielmedotcom.wordpress.com\/public.api\/connect\/?action=request&domain=danielme.com","logoutURL":"https:\/\/danielmedotcom.wordpress.com\/wp-login.php?action=logout&_wpnonce=137a0c473c","homeURL":"https:\/\/danielme.com\/","postID":"5171","gravDefault":"mystery","enterACommentError":"Por favor, introduce un comentario","enterEmailError":"Por favor introduce tu direcci\u00f3n de correo electr\u00f3nico aqu\u00ed","invalidEmailError":"Direcci\u00f3n de correo electr\u00f3nico no v\u00e1lida","enterAuthorError":"Por favor, introduce tu nombre aqu\u00ed","gravatarFromEmail":"Esta imagen se mostrar\u00e1 cuando dejes un comentario. Haz clic para cambiarla.","logInToExternalAccount":"Inicia sesi\u00f3n para usar los datos de una de estas cuentas.","change":"Cambiar","changeAccount":"Cambiar cuenta","comment_registration":"","userIsLoggedIn":"","isJetpack":"","text_direction":"ltr"};
</script>
<script crossorigin="anonymous" type="text/javascript" src="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/a_005"></script>

<script>
window.addEventListener( "load", function( event ) {
	var link = document.createElement( "link" );
	link.href = "https://s0.wp.com/wp-content/mu-plugins/actionbar/actionbar.css?v=20201002";
	link.type = "text/css";
	link.rel = "stylesheet";
	document.head.appendChild( link );

	var script = document.createElement( "script" );
	script.src = "https://s0.wp.com/wp-content/mu-plugins/actionbar/actionbar.js?v=20210817";
	script.defer = true;
	document.body.appendChild( script );
} );
</script>

			<div id="jp-carousel-loading-overlay">
			<div id="jp-carousel-loading-wrapper">
				<span id="jp-carousel-library-loading">&nbsp;</span>
			</div>
		</div>
		<div class="jp-carousel-overlay" style="display: none;">

		<div class="jp-carousel-container">
			<!-- The Carousel Swiper -->
			<div class="jp-carousel-wrap swiper-container jp-carousel-swiper-container jp-carousel-transitions" itemscope="" itemtype="https://schema.org/ImageGallery">
				<div class="jp-carousel swiper-wrapper"></div>
				<div class="jp-swiper-button-prev swiper-button-prev">
					<svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg">
						<mask id="maskPrev" mask-type="alpha" maskUnits="userSpaceOnUse" x="8" y="6" width="9" height="12">
							<path d="M16.2072 16.59L11.6496 12L16.2072 7.41L14.8041 6L8.8335 12L14.8041 18L16.2072 16.59Z" fill="white"></path>
						</mask>
						<g mask="url(#maskPrev)">
							<rect x="0.579102" width="23.8823" height="24" fill="#FFFFFF"></rect>
						</g>
					</svg>
				</div>
				<div class="jp-swiper-button-next swiper-button-next">
					<svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg">
						<mask id="maskNext" mask-type="alpha" maskUnits="userSpaceOnUse" x="8" y="6" width="8" height="12">
							<path d="M8.59814 16.59L13.1557 12L8.59814 7.41L10.0012 6L15.9718 12L10.0012 18L8.59814 16.59Z" fill="white"></path>
						</mask>
						<g mask="url(#maskNext)">
							<rect x="0.34375" width="23.8822" height="24" fill="#FFFFFF"></rect>
						</g>
					</svg>
				</div>
			</div>
			<!-- The main close buton -->
			<div class="jp-carousel-close-hint">
				<svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg">
					<mask id="maskClose" mask-type="alpha" maskUnits="userSpaceOnUse" x="5" y="5" width="15" height="14">
						<path d="M19.3166 6.41L17.9135 5L12.3509 10.59L6.78834 5L5.38525 6.41L10.9478 12L5.38525 17.59L6.78834 19L12.3509 13.41L17.9135 19L19.3166 17.59L13.754 12L19.3166 6.41Z" fill="white"></path>
					</mask>
					<g mask="url(#maskClose)">
						<rect x="0.409668" width="23.8823" height="24" fill="#FFFFFF"></rect>
					</g>
				</svg>
			</div>
			<!-- Image info, comments and meta -->
			<div class="jp-carousel-info">
				<div class="jp-carousel-info-footer">
					<div class="jp-carousel-pagination-container">
						<div class="jp-swiper-pagination swiper-pagination"></div>
						<div class="jp-carousel-pagination"></div>
					</div>
					<div class="jp-carousel-photo-title-container">
						<h2 class="jp-carousel-photo-caption"></h2>
					</div>
					<div class="jp-carousel-photo-icons-container">
						<a href="#" class="jp-carousel-icon-btn jp-carousel-icon-info" aria-label="Cambiar la visibilidad de los metadatos de las fotos">
							<span class="jp-carousel-icon">
								<svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg">
									<mask id="maskInfo" mask-type="alpha" maskUnits="userSpaceOnUse" x="2" y="2" width="21" height="20">
										<path fill-rule="evenodd" clip-rule="evenodd" d="M12.7537 2C7.26076 2 2.80273 6.48 2.80273 12C2.80273 17.52 7.26076 22 12.7537 22C18.2466 22 22.7046 17.52 22.7046 12C22.7046 6.48 18.2466 2 12.7537 2ZM11.7586 7V9H13.7488V7H11.7586ZM11.7586 11V17H13.7488V11H11.7586ZM4.79292 12C4.79292 16.41 8.36531 20 12.7537 20C17.142 20 20.7144 16.41 20.7144 12C20.7144 7.59 17.142 4 12.7537 4C8.36531 4 4.79292 7.59 4.79292 12Z" fill="white"></path>
									</mask>
									<g mask="url(#maskInfo)">
										<rect x="0.8125" width="23.8823" height="24" fill="#FFFFFF"></rect>
									</g>
								</svg>
							</span>
						</a>
												<a href="#" class="jp-carousel-icon-btn jp-carousel-icon-comments" aria-label="Cambiar la visibilidad de los comentarios de las fotos">
							<span class="jp-carousel-icon">
								<svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg">
									<mask id="maskComments" mask-type="alpha" maskUnits="userSpaceOnUse" x="2" y="2" width="21" height="20">
										<path fill-rule="evenodd" clip-rule="evenodd" d="M4.3271 2H20.2486C21.3432 2 22.2388 2.9 22.2388 4V16C22.2388 17.1 21.3432 18 20.2486 18H6.31729L2.33691 22V4C2.33691 2.9 3.2325 2 4.3271 2ZM6.31729 16H20.2486V4H4.3271V18L6.31729 16Z" fill="white"></path>
									</mask>
									<g mask="url(#maskComments)">
										<rect x="0.34668" width="23.8823" height="24" fill="#FFFFFF"></rect>
									</g>
								</svg>

								<span class="jp-carousel-has-comments-indicator" aria-label="Esta imagen tiene comentarios."></span>
							</span>
						</a>
											</div>
				</div>
				<div class="jp-carousel-info-extra">
					<div class="jp-carousel-info-content-wrapper">
						<div class="jp-carousel-photo-title-container">
							<h2 class="jp-carousel-photo-title"></h2>
						</div>
						<div class="jp-carousel-comments-wrapper">
															<div id="jp-carousel-comments-loading">
									<span>Cargando comentarios...</span>
								</div>
								<div class="jp-carousel-comments"></div>
								<div id="jp-carousel-comment-form-container">
									<span id="jp-carousel-comment-form-spinner">&nbsp;</span>
									<div id="jp-carousel-comment-post-results"></div>
																														<form id="jp-carousel-comment-form">
												<label for="jp-carousel-comment-form-comment-field" class="screen-reader-text">Escribe un comentario...</label>
												<textarea name="comment" class="jp-carousel-comment-form-field jp-carousel-comment-form-textarea" id="jp-carousel-comment-form-comment-field" placeholder="Escribe un comentario..."></textarea>
												<div id="jp-carousel-comment-form-submit-and-info-wrapper">
													<div id="jp-carousel-comment-form-commenting-as">
																													<fieldset>
																<label for="jp-carousel-comment-form-email-field">Correo electrónico (Obligatorio)</label>
																<input type="text" name="email" class="jp-carousel-comment-form-field jp-carousel-comment-form-text-field" id="jp-carousel-comment-form-email-field">
															</fieldset>
															<fieldset>
																<label for="jp-carousel-comment-form-author-field">Nombre (Obligatorio)</label>
																<input type="text" name="author" class="jp-carousel-comment-form-field jp-carousel-comment-form-text-field" id="jp-carousel-comment-form-author-field">
															</fieldset>
															<fieldset>
																<label for="jp-carousel-comment-form-url-field">Web</label>
																<input type="text" name="url" class="jp-carousel-comment-form-field jp-carousel-comment-form-text-field" id="jp-carousel-comment-form-url-field">
															</fieldset>
																											</div>
													<input type="submit" name="submit" class="jp-carousel-comment-form-button" id="jp-carousel-comment-form-button-submit" value="Publicar comentario">
												</div>
											</form>
																											</div>
													</div>
						<div class="jp-carousel-image-meta">
							<div class="jp-carousel-title-and-caption">
								<div class="jp-carousel-photo-info">
									<h3 class="jp-carousel-caption" itemprop="caption description"></h3>
								</div>

								<div class="jp-carousel-photo-description"></div>
							</div>
							<ul class="jp-carousel-image-exif" style="display: none;"></ul>
							<a class="jp-carousel-image-download" target="_blank" style="display: none;">
								<svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg">
									<mask id="mask0" mask-type="alpha" maskUnits="userSpaceOnUse" x="3" y="3" width="19" height="18">
										<path fill-rule="evenodd" clip-rule="evenodd" d="M5.84615 5V19H19.7775V12H21.7677V19C21.7677 20.1 20.8721 21 19.7775 21H5.84615C4.74159 21 3.85596 20.1 3.85596 19V5C3.85596 3.9 4.74159 3 5.84615 3H12.8118V5H5.84615ZM14.802 5V3H21.7677V10H19.7775V6.41L9.99569 16.24L8.59261 14.83L18.3744 5H14.802Z" fill="white"></path>
									</mask>
									<g mask="url(#mask0)">
										<rect x="0.870605" width="23.8823" height="24" fill="#FFFFFF"></rect>
									</g>
								</svg>
								<span class="jp-carousel-download-text"></span>
							</a>
							<div class="jp-carousel-image-map" style="display: none;"></div>
						</div>
					</div>
				</div>
			</div>
		</div>

		</div>
		
	<script type="text/javascript">
		window.WPCOM_sharing_counts = {"https:\/\/danielme.com\/2018\/02\/21\/tutorial-spring-boot-web-spring-data-jpa\/":5171};
	</script>
				<script crossorigin="anonymous" type="text/javascript" src="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/a_004"></script>
<script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "https://s0.wp.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.9b";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.head.appendChild( corecss );
		var themecssurl = "https://s0.wp.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?m=1363304414h&amp;ver=3.0.9b";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		document.head.appendChild( themecss );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['pad-line-numbers'] = false;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();

	// Infinite scroll support
	if ( typeof( jQuery ) !== 'undefined' ) {
		jQuery( function( $ ) {
			$( document.body ).on( 'post-load', function() {
				SyntaxHighlighter.highlight();
			} );
		} );
	}
</script>
<link rel="stylesheet" id="all-css-0-3" href="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/a.css" type="text/css" media="all">
<script id="jetpack-carousel-js-extra">
var jetpackSwiperLibraryPath = {"url":"\/wp-content\/mu-plugins\/carousel\/swiper-bundle.js"};
var jetpackCarouselStrings = {"widths":[370,700,1000,1200,1400,2000],"is_logged_in":"","lang":"es","ajaxurl":"https:\/\/danielme.com\/wp-admin\/admin-ajax.php","nonce":"6cdc3f6b2f","display_exif":"1","display_comments":"1","display_geo":"1","single_image_gallery":"1","single_image_gallery_media_file":"","background_color":"black","comment":"Comentario","post_comment":"Publicar comentario","write_comment":"Escribe un comentario...","loading_comments":"Cargando comentarios...","download_original":"Ver tama\u00f1o completo <span class=\"photo-size\">{0}<span class=\"photo-size-times\">\u00d7<\/span>{1}<\/span>","no_comment_text":"Por favor, aseg\u00farate de enviar el texto con tu comentario.","no_comment_email":"Por favor, proporciona una direcci\u00f3n de correo electr\u00f3nico para comentar.","no_comment_author":"Por favor, a\u00f1ade tu nombre al comentario.","comment_post_error":"Lo sentimos, pero ha habido un error al publicar tu comentario. Por favor, vuelve a intentarlo m\u00e1s tarde.","comment_approved":"Se ha aprobado tu comentario.","comment_unapproved":"Tu comentario est\u00e1 en moderaci\u00f3n.","camera":"C\u00e1mara","aperture":"Abertura","shutter_speed":"Velocidad de obturaci\u00f3n","focal_length":"Longitud focal","copyright":"Derechos de autor","comment_registration":"0","require_name_email":"1","login_url":"https:\/\/danielmedotcom.wordpress.com\/wp-login.php?redirect_to=https%3A%2F%2Fdanielme.com%2F2018%2F02%2F21%2Ftutorial-spring-boot-web-spring-data-jpa%2F","blog_id":"32273083","meta_data":["camera","aperture","shutter_speed","focal_length","copyright"],"stats_query_args":"blog=32273083&v=wpcom&tz=1&user_id=0&subd=danielmedotcom","is_public":"1"};
</script>
<script id="jetpack_related-posts-js-extra">
var related_posts_js_options = {"post_heading":"h4"};
</script>
<script id="sharing-js-js-extra">
var sharing_js_options = {"lang":"en","counts":"1","is_stats_active":"1"};
</script>
<script async="true" src="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/a_003"></script><script crossorigin="anonymous" type="text/javascript" src="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/a"></script><aside id="eu_cookie_law_widget-2" class="widget widget_eu_cookie_law_widget" style="display: block;">

</aside>
<script type="text/javascript">
var windowOpen;
			( function () {
				function matches( el, sel ) {
					return !! (
						el.matches && el.matches( sel ) ||
						el.msMatchesSelector && el.msMatchesSelector( sel )
					);
				}

				document.body.addEventListener( 'click', function ( event ) {
					if ( ! event.target ) {
						return;
					}

					var el;
					if ( matches( event.target, 'a.share-twitter' ) ) {
						el = event.target;
					} else if ( event.target.parentNode && matches( event.target.parentNode, 'a.share-twitter' ) ) {
						el = event.target.parentNode;
					}

					if ( el ) {
						event.preventDefault();

						// If there's another sharing window open, close it.
						if ( typeof windowOpen !== 'undefined' ) {
							windowOpen.close();
						}
						windowOpen = window.open( el.getAttribute( 'href' ), 'wpcomtwitter', 'menubar=1,resizable=1,width=600,height=350' );
						return false;
					}
				} );
			} )();
var windowOpen;
			( function () {
				function matches( el, sel ) {
					return !! (
						el.matches && el.matches( sel ) ||
						el.msMatchesSelector && el.msMatchesSelector( sel )
					);
				}

				document.body.addEventListener( 'click', function ( event ) {
					if ( ! event.target ) {
						return;
					}

					var el;
					if ( matches( event.target, 'a.share-facebook' ) ) {
						el = event.target;
					} else if ( event.target.parentNode && matches( event.target.parentNode, 'a.share-facebook' ) ) {
						el = event.target.parentNode;
					}

					if ( el ) {
						event.preventDefault();

						// If there's another sharing window open, close it.
						if ( typeof windowOpen !== 'undefined' ) {
							windowOpen.close();
						}
						windowOpen = window.open( el.getAttribute( 'href' ), 'wpcomfacebook', 'menubar=1,resizable=1,width=600,height=400' );
						return false;
					}
				} );
			} )();
var windowOpen;
			( function () {
				function matches( el, sel ) {
					return !! (
						el.matches && el.matches( sel ) ||
						el.msMatchesSelector && el.msMatchesSelector( sel )
					);
				}

				document.body.addEventListener( 'click', function ( event ) {
					if ( ! event.target ) {
						return;
					}

					var el;
					if ( matches( event.target, 'a.share-linkedin' ) ) {
						el = event.target;
					} else if ( event.target.parentNode && matches( event.target.parentNode, 'a.share-linkedin' ) ) {
						el = event.target.parentNode;
					}

					if ( el ) {
						event.preventDefault();

						// If there's another sharing window open, close it.
						if ( typeof windowOpen !== 'undefined' ) {
							windowOpen.close();
						}
						windowOpen = window.open( el.getAttribute( 'href' ), 'wpcomlinkedin', 'menubar=1,resizable=1,width=580,height=450' );
						return false;
					}
				} );
			} )();
var windowOpen;
			( function () {
				function matches( el, sel ) {
					return !! (
						el.matches && el.matches( sel ) ||
						el.msMatchesSelector && el.msMatchesSelector( sel )
					);
				}

				document.body.addEventListener( 'click', function ( event ) {
					if ( ! event.target ) {
						return;
					}

					var el;
					if ( matches( event.target, 'a.share-telegram' ) ) {
						el = event.target;
					} else if ( event.target.parentNode && matches( event.target.parentNode, 'a.share-telegram' ) ) {
						el = event.target.parentNode;
					}

					if ( el ) {
						event.preventDefault();

						// If there's another sharing window open, close it.
						if ( typeof windowOpen !== 'undefined' ) {
							windowOpen.close();
						}
						windowOpen = window.open( el.getAttribute( 'href' ), 'wpcomtelegram', 'menubar=1,resizable=1,width=450,height=450' );
						return false;
					}
				} );
			} )();
</script>
<script type="text/javascript">
// <![CDATA[
(function() {
try{
  if ( window.external &&'msIsSiteMode' in window.external) {
    if (window.external.msIsSiteMode()) {
      var jl = document.createElement('script');
      jl.type='text/javascript';
      jl.async=true;
      jl.src='/wp-content/plugins/ie-sitemode/custom-jumplist.php';
      var s = document.getElementsByTagName('script')[0];
      s.parentNode.insertBefore(jl, s);
    }
  }
}catch(e){}
})();
// ]]>
</script>	<iframe src="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/master.htm" scrolling="no" id="likes-master" name="likes-master" style="display:none;"></iframe>
	<div id="likes-other-gravatars">
		<div class="likes-text">
			A <span>%d</span> blogueros les gusta esto:		</div>
		<ul class="wpl-avatars sd-like-gravatars"></ul>
	</div>
	
		<script src="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/w.js" defer="defer"></script> <script type="text/javascript">
_tkq = window._tkq || [];
_stq = window._stq || [];
_tkq.push(['storeContext', {'blog_id':'32273083','blog_tz':'1','user_lang':'es','blog_lang':'es','user_id':'0'}]);
_stq.push(['view', {'blog':'32273083','v':'wpcom','tz':'1','user_id':'0','post':'5171','subd':'danielmedotcom'}]);
_stq.push(['extra', {'crypt':'UE40eW5QN0p8M2Y/RE1TaVhzUzFMbjdWNHpwZGhTayxPSUFCMGRVYVNrSFguN3FwSmQ5RGtNX3VQcj1yVzhiflM1THQtLGFdQ2toOXYlK2lYQj1PZnRQXWxBbC4sa1YmNl8vX3YxcT1UYTI3Mlg4cURsVCwzXVVyWWYxaUFLQkdtL1NSbkMwJl1CVHVOYnBTa2hESU03Qz9henBWdj9FZWlHOCUxVTN4cDVHeUhCTXNoa09QZi5uOGNlOHFrJURMQy9zanlPOEQsJj91d0RENiw2X3pjajlkbDM5JTJKbmxCLy0reXRGM1otfDJ2Wix3PW9JYWk4ci5jRWNZbFglSkhCT3h6U0NDLl1UanBfVDBSQXY/aDBDUUxVRXpac1gtTGNZbj0/TkUlQXR+b04lWGROPVhlTT9DRkp0S2UlaTA/XUVfQ2lFLVo1UHxlOXpTUmtLNURkZDhDbl9TTlRXQkxzRGhzeXxaNg=='}]);
_stq.push([ 'clickTrackerInit', '32273083', '5171' ]);
	</script>
<noscript><img src="https://pixel.wp.com/b.gif?v=noscript" style="height:1px;width:1px;overflow:hidden;position:absolute;bottom:1px;" alt="" /></noscript>
<script>
if ( 'object' === typeof wpcom_mobile_user_agent_info ) {

	wpcom_mobile_user_agent_info.init();
	var mobileStatsQueryString = "";
	
	if( false !== wpcom_mobile_user_agent_info.matchedPlatformName )
		mobileStatsQueryString += "&x_" + 'mobile_platforms' + '=' + wpcom_mobile_user_agent_info.matchedPlatformName;
	
	if( false !== wpcom_mobile_user_agent_info.matchedUserAgentName )
		mobileStatsQueryString += "&x_" + 'mobile_devices' + '=' + wpcom_mobile_user_agent_info.matchedUserAgentName;
	
	if( wpcom_mobile_user_agent_info.isIPad() )
		mobileStatsQueryString += "&x_" + 'ipad_views' + '=' + 'views';

	if( "" != mobileStatsQueryString ) {
		new Image().src = document.location.protocol + '//pixel.wp.com/g.gif?v=wpcom-no-pv' + mobileStatsQueryString + '&baba=' + Math.random();
	}
	
}
</script>


<img src="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/g.gif" alt=":)" id="wpstats" scale="0"><iframe scrolling="no" allowtransparency="true" src="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/widget_iframe.htm" title="Twitter settings iframe" style="display: none;" frameborder="0"></iframe><script src="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/actionbar.js" defer="defer"></script><div id="actionbar" class="actnbr-pub-penscratch-2 actnbr-has-follow actnbr-hidden"><ul><li class="actnbr-btn actnbr-hidden"> 				<a class="actnbr-action actnbr-actn-follow" href=""><svg class="gridicon gridicon__follow" height="24px" width="24px" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g><path d="M23 16v2h-3v3h-2v-3h-3v-2h3v-3h2v3h3zM20 2v9h-4v3h-3v4H4c-1.1 0-2-.9-2-2V2h18zM8 13v-1H4v1h4zm3-3H4v1h7v-1zm0-2H4v1h7V8zm7-4H4v2h14V4z"></path></g></svg><span>Seguir</span></a><a class="actnbr-action actnbr-actn-following no-display" href=""><svg class="gridicon gridicon__following" height="24px" width="24px" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g><path d="M23 13.482L15.508 21 12 17.4l1.412-1.388 2.106 2.188 6.094-6.094L23 13.482zm-7.455 1.862L20 10.89V2H2v14c0 1.1.9 2 2 2h4.538l4.913-4.832 2.095 2.176zM8 13H4v-1h4v1zm3-2H4v-1h7v1zm0-2H4V8h7v1zm7-3H4V4h14v2z"></path></g></svg><span>Siguiendo</span></a> 				<div class="actnbr-popover tip tip-top-left actnbr-notice"> 					<div class="tip-arrow"></div> 					<div class="tip-inner actnbr-follow-bubble"> 				<ul> 					<li class="actnbr-sitename actnbr-hidden"><a href="https://danielme.com/"><img alt="" src="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/favicon_002.webp" class="avatar avatar-50" srcset="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/favicon.webp 1.5x" src-orig="https://danielmedotcom.files.wordpress.com/2019/04/favicon.png?w=32" scale="1.5" width="50" height="50"> danielme.com</a></li> 					<form> 					<li class="actnbr-login-nudge actnbr-hidden"><div>¿Ya tienes una cuenta de WordPress.com? <a href="https://wordpress.com/log-in?redirect_to=https%3A%2F%2Fr-login.wordpress.com%2Fremote-login.php%3Faction%3Dlink%26back%3Dhttps%253A%252F%252Fdanielme.com%252F2018%252F02%252F21%252Ftutorial-spring-boot-web-spring-data-jpa%252F">Accede ahora</a>.</div></li> 				</form></ul> 			</div> 				</div> 					</li><li class="actnbr-ellipsis actnbr-hidden"> 				<svg class="gridicon gridicon__ellipsis" height="24" width="24" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g><circle cx="5" cy="12" r="2"></circle><circle cx="19" cy="12" r="2"></circle><circle cx="12" cy="12" r="2"></circle></g></svg> 				<div class="actnbr-popover tip tip-top-left actnbr-more"> 				<div class="tip-arrow"></div> 				<div class="tip-inner"> 					<ul> 						<li class="actnbr-sitename actnbr-hidden"><a href="https://danielme.com/"><img alt="" src="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/favicon_002.webp" class="avatar avatar-50" srcset="Introducci%C3%B3n%20a%20Spring%20Boot%20Aplicaci%C3%B3n%20Web%20con%20servicios%20REST%20y%20Spring%20Data%20JPA%20%E2%80%93%20danielme.com%20Archivos/favicon.webp 1.5x" src-orig="https://danielmedotcom.files.wordpress.com/2019/04/favicon.png?w=32" scale="1.5" width="50" height="50"> danielme.com</a></li> 					<li class="actnbr-folded-customize actnbr-hidden"><a href="https://danielmedotcom.wordpress.com/wp-admin/customize.php?url=https%3A%2F%2Fdanielmedotcom.wordpress.com%2F2018%2F02%2F21%2Ftutorial-spring-boot-web-spring-data-jpa%2F"><svg class="gridicon gridicon__customize" height="20px" width="20px" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g><path d="M2 6c0-1.505.78-3.08 2-4 0 .845.69 2 2 2 1.657 0 3 1.343 3 3 0 .386-.08.752-.212 1.09.74.594 1.476 1.19 2.19 1.81L8.9 11.98c-.62-.716-1.214-1.454-1.807-2.192C6.753 9.92 6.387 10 6 10c-2.21 0-4-1.79-4-4zm12.152 6.848l1.34-1.34c.607.304 1.283.492 2.008.492 2.485 0 4.5-2.015 4.5-4.5 0-.725-.188-1.4-.493-2.007L18 9l-2-2 3.507-3.507C18.9 3.188 18.225 3 17.5 3 15.015 3 13 5.015 13 7.5c0 .725.188 1.4.493 2.007L3 20l2 2 6.848-6.848c1.885 1.928 3.874 3.753 5.977 5.45l1.425 1.148 1.5-1.5-1.15-1.425c-1.695-2.103-3.52-4.092-5.448-5.977z" data-reactid=".2.1.1:0.1b.0"></path></g></svg><span>Personalizar<span></span></span></a></li> 						<li class="actnbr-folded-follow actnbr-hidden"><a class="actnbr-action actnbr-actn-follow" href=""><svg class="gridicon gridicon__follow" height="24px" width="24px" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g><path d="M23 16v2h-3v3h-2v-3h-3v-2h3v-3h2v3h3zM20 2v9h-4v3h-3v4H4c-1.1 0-2-.9-2-2V2h18zM8 13v-1H4v1h4zm3-3H4v1h7v-1zm0-2H4v1h7V8zm7-4H4v2h14V4z"></path></g></svg><span>Seguir</span></a><a class="actnbr-action actnbr-actn-following no-display" href=""><svg class="gridicon gridicon__following" height="24px" width="24px" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g><path d="M23 13.482L15.508 21 12 17.4l1.412-1.388 2.106 2.188 6.094-6.094L23 13.482zm-7.455 1.862L20 10.89V2H2v14c0 1.1.9 2 2 2h4.538l4.913-4.832 2.095 2.176zM8 13H4v-1h4v1zm3-2H4v-1h7v1zm0-2H4V8h7v1zm7-3H4V4h14v2z"></path></g></svg><span>Siguiendo</span></a></li> 					<li class="actnbr-signup actnbr-hidden"><a href="https://wordpress.com/start/">Regístrate</a></li> 						<li class="actnbr-login actnbr-hidden"><a href="https://wordpress.com/log-in?redirect_to=https%3A%2F%2Fr-login.wordpress.com%2Fremote-login.php%3Faction%3Dlink%26back%3Dhttps%253A%252F%252Fdanielme.com%252F2018%252F02%252F21%252Ftutorial-spring-boot-web-spring-data-jpa%252F">Acceder</a></li> 						 						<li class="actnbr-shortlink actnbr-hidden"><a href="https://wp.me/p2bpHB-1lp">Copiar enlace corto</a></li> 						<li class="flb-report actnbr-hidden"><a href="http://en.wordpress.com/abuse/">Denunciar este contenido</a></li> 						 						 						<li class="actnbr-subs actnbr-hidden"><a href="https://subscribe.wordpress.com/">Gestionar las suscripciones</a></li> 						<li class="actnbr-fold actnbr-hidden"><a href="">Contraer esta barra</a></li> 						</ul> 					</div> 					</div> 				</li> 				</ul></div><iframe id="rufous-sandbox" scrolling="no" allowtransparency="true" allowfullscreen="true" style="position: absolute; visibility: hidden; display: none; width: 0px; height: 0px; padding: 0px; border: medium none;" title="Twitter analytics iframe" frameborder="0"></iframe></body></html>